{"ast":null,"code":"import firebase from './Firebase.js';\nimport { connect } from 'react-redux';\nvar db = firebase.firestore();\n\nfunction dbFind(dispatch, type, email) {\n  db.collection(\"company\").where(\"email\", \"==\", email).get().then(function (snapshot) {\n    snapshot.forEach(function (userSnapshot) {\n      dispatch({\n        type: type,\n        data: userSnapshot.data()\n      });\n    });\n  }).catch(function (error) {\n    console.log(\"Error getting documents: \" + error);\n  });\n}\n\nvar DbCrud = this.props;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    email: state.login.email,\n    password: state.login.password,\n    obj: state.MyAccount\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispReducer: function dispReducer(type, email) {\n      console.log(\"llegue al reducer\"); //DbCrud.dbFind(dispatch, type, email);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DbCrud);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/src/Pojo/DbCrud.js"],"names":["firebase","connect","db","firestore","dbFind","dispatch","type","email","collection","where","get","then","snapshot","forEach","userSnapshot","data","catch","error","console","log","DbCrud","props","mapStateToProps","state","login","password","obj","MyAccount","mapDispatchToProps","dispReducer"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,IAAIC,EAAE,GAAGF,QAAQ,CAACG,SAAT,EAAT;;AAEA,SAASC,MAAT,CAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAsC;AAClCL,EAAAA,EAAE,CAACM,UAAH,CAAc,SAAd,EAAyBC,KAAzB,CAA+B,OAA/B,EAAwC,IAAxC,EAA8CF,KAA9C,EAAqDG,GAArD,GACKC,IADL,CACU,UAASC,QAAT,EAAmB;AACrBA,IAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAUC,YAAV,EAAwB;AACrCT,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACA,IAAN;AAAWS,QAAAA,IAAI,EAACD,YAAY,CAACC,IAAb;AAAhB,OAAD,CAAR;AACH,KAFD;AAGH,GALL,EAKOC,KALP,CAKa,UAASC,KAAT,EAAgB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAA4BF,KAAxC;AACP,GAPD;AAQH;;AAED,IAAMG,MAAM,GAAG,KAAKC,KAApB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAM;AACJhB,IAAAA,KAAK,EAAEgB,KAAK,CAACC,KAAN,CAAYjB,KADf;AAEJkB,IAAAA,QAAQ,EAAEF,KAAK,CAACC,KAAN,CAAYC,QAFlB;AAGJC,IAAAA,GAAG,EAAEH,KAAK,CAACI;AAHP,GAAN;AAKD,CANH;;AASE,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACvB,QAAD,EAAc;AACvC,SAAM;AACJwB,IAAAA,WAAW,EAAE,qBAACvB,IAAD,EAAOC,KAAP,EAAiB;AAC5BW,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAD4B,CAE5B;AACD;AAJG,GAAN;AAMD,CAPD;;AASA,eAAelB,OAAO,CAACqB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CR,MAA7C,CAAf","sourcesContent":["import firebase from './Firebase.js';\nimport { connect } from 'react-redux';\nlet db = firebase.firestore();\n\nfunction dbFind(dispatch, type, email){\n    db.collection(\"company\").where(\"email\", \"==\", email).get()\n        .then(function(snapshot) {\n            snapshot.forEach(function (userSnapshot) {\n                dispatch({type:type,data:userSnapshot.data()})\n            });\n        }).catch(function(error) {\n            console.log(\"Error getting documents: \"+error);\n    });\n}\n\nconst DbCrud = this.props;\n\nconst mapStateToProps = (state) => {\n    return{\n      email: state.login.email,\n      password: state.login.password,\n      obj: state.MyAccount\n    }\n  }\n  \n  \n  const mapDispatchToProps = (dispatch) => {\n    return{ \n      dispReducer: (type, email) => {\n        console.log(\"llegue al reducer\");\n        //DbCrud.dbFind(dispatch, type, email);\n      }\n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(DbCrud);"]},"metadata":{},"sourceType":"module"}