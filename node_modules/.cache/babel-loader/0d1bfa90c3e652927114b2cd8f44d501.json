{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/Documents/GitHub/codifica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/Documents/GitHub/codifica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/Documents/GitHub/codifica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/Documents/GitHub/codifica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/Documents/GitHub/codifica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/Documents/GitHub/codifica/src/Dao/Dao.js\";\nimport React, { Component } from 'react';\nimport { createStore, combineReducers, pplyMiddleware, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport Login from '../views/Pages/Login/';\nimport DaoLogin from './DaoLogin';\nimport firebase from '../Pojo/Firebase.js';\nimport 'firebase/firestore';\nimport { AppAside, AppBreadcrumb, AppFooter, AppHeader, AppSidebar, AppSidebarFooter, AppSidebarForm, AppSidebarHeader, AppSidebarMinimizer, AppSidebarNav } from '@coreui/react'; // sidebar nav config\n\nimport navigation from '../_nav'; // routes config\n\nimport routes from '../routes';\nimport DefaultAside from '../containers/DefaultLayout/DefaultAside';\nimport DefaultFooter from '../containers/DefaultLayout/DefaultFooter';\nimport DefaultHeader from '../containers/DefaultLayout/DefaultHeader'; //Utilizamos el combineReducers con el fin de administrar los estados, de esta manera cada estado tiene asociado  \n//una funcion que se encargara de su adminsitración \n\nvar reducer = combineReducers({\n  login: DaoLogin.reducerLogin,\n  tareas: DaoLogin.reducerTareas //userAdd: DaoUser.userAdd\n\n}); //Donde almacenamos nuestro estado\n\nvar store = createStore(reducer, applyMiddleware(ReduxThunk));\n\nfunction DaoIni(props) {\n  document.getElementById('root').style.visibility = 'hidden';\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      var displayName = user.displayName;\n      var email = user.email;\n      var emailVerified = user.emailVerified;\n      var photoURL = user.photoURL;\n      var isAnonymous = user.isAnonymous;\n      var uid = user.uid;\n      var providerData = user.providerData;\n      console.log(\" Ingrese a la cuenta \"); // console.log(displayName+\"   --  \"+email+\"   --  \"+emailVerified+\"   --  \"+photoURL+\"   --  \"+photoURL+\"   --  \"+isAnonymous+\"   --  \"+uid+\"   --  \"+providerData)\n\n      if (window.location.hash == \"#/login\") window.location = \"#/dashboard\";\n      document.getElementById('root').style.visibility = 'visible';\n      store.dispatch({\n        type: \"loadUser\",\n        user: user\n      });\n    } else {\n      console.log(\" Me encuentro en proceso \"); //if(window.location.hash !=  \"#/login\") window.location = \"#/login\";\n      //document.getElementById('root').style.visibility = 'visible';\n    }\n  });\n  /*\n  if(window.location.hash == \"#/login\")\n  return(\n      <Switch>\n          <Route exact path=\"/login\" name=\"Login Page\" component={Login} />\n      </Switch>\n  )\n  else return (\n      <div className=\"app\">\n      <AppHeader fixed>\n        <DefaultHeader />\n      </AppHeader>\n      <div className=\"app-body\">\n        <AppSidebar fixed display=\"lg\">\n          <AppSidebarHeader />\n          <AppSidebarForm />\n          <AppSidebarNav navConfig={navigation} {...props} />\n          <AppSidebarFooter />\n          <AppSidebarMinimizer />\n        </AppSidebar>\n        <main className=\"main\">\n          <AppBreadcrumb appRoutes={routes}/>\n          <Container fluid>\n            <Switch>\n              {routes.map((route, idx) => {\n                  return route.component ? (<Route key={idx} path={route.path} exact={route.exact} name={route.name} render={props => (\n                      <route.component {...props} />\n                    )} />)\n                    : (null);\n                },\n              )}\n              <Redirect from=\"/\" to=\"/dashboard\" />\n            </Switch>\n          </Container>\n        </main>\n        <AppAside fixed>\n          <DefaultAside />\n        </AppAside>\n      </div>\n      <AppFooter>\n        <DefaultFooter />\n      </AppFooter>\n    </div>\n  )*/\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"hola como estas\");\n}\n\nvar Dao =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dao, _Component);\n\n  function Dao() {\n    _classCallCheck(this, Dao);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dao).apply(this, arguments));\n  }\n\n  _createClass(Dao, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(DaoIni, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dao;\n}(Component);\n\nexport default Dao;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/Documents/GitHub/codifica/src/Dao/Dao.js"],"names":["React","Component","createStore","combineReducers","pplyMiddleware","applyMiddleware","Provider","ReduxThunk","Redirect","Route","Switch","Container","Login","DaoLogin","firebase","AppAside","AppBreadcrumb","AppFooter","AppHeader","AppSidebar","AppSidebarFooter","AppSidebarForm","AppSidebarHeader","AppSidebarMinimizer","AppSidebarNav","navigation","routes","DefaultAside","DefaultFooter","DefaultHeader","reducer","login","reducerLogin","tareas","reducerTareas","store","DaoIni","props","document","getElementById","style","visibility","auth","onAuthStateChanged","user","displayName","email","emailVerified","photoURL","isAnonymous","uid","providerData","console","log","window","location","hash","dispatch","type","Dao"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { createStore, combineReducers, pplyMiddleware, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport Login from '../views/Pages/Login/';\nimport DaoLogin from './DaoLogin';\nimport firebase from '../Pojo/Firebase.js';\nimport 'firebase/firestore';\n\nimport {AppAside, AppBreadcrumb, AppFooter, AppHeader, AppSidebar, AppSidebarFooter,\n  AppSidebarForm, AppSidebarHeader, AppSidebarMinimizer, AppSidebarNav,} from '@coreui/react';\n\n// sidebar nav config\nimport navigation from '../_nav';\n// routes config\nimport routes from '../routes';\n\nimport DefaultAside from '../containers/DefaultLayout/DefaultAside';\nimport DefaultFooter from '../containers/DefaultLayout/DefaultFooter';\nimport DefaultHeader from '../containers/DefaultLayout/DefaultHeader';\n\n//Utilizamos el combineReducers con el fin de administrar los estados, de esta manera cada estado tiene asociado  \n//una funcion que se encargara de su adminsitración \nconst reducer = combineReducers({\n    login: DaoLogin.reducerLogin,\n    tareas: DaoLogin.reducerTareas,\n    //userAdd: DaoUser.userAdd\n});\n\n//Donde almacenamos nuestro estado\nconst store = createStore(reducer, applyMiddleware(ReduxThunk));\n\nfunction DaoIni(props) {\n    document.getElementById('root').style.visibility = 'hidden';\n    firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            var displayName = user.displayName;\n            var email = user.email;\n            var emailVerified = user.emailVerified;\n            var photoURL = user.photoURL;\n            var isAnonymous = user.isAnonymous;\n            var uid = user.uid;\n            var providerData = user.providerData;\n            console.log(\" Ingrese a la cuenta \");\n            // console.log(displayName+\"   --  \"+email+\"   --  \"+emailVerified+\"   --  \"+photoURL+\"   --  \"+photoURL+\"   --  \"+isAnonymous+\"   --  \"+uid+\"   --  \"+providerData)\n            if(window.location.hash ==  \"#/login\") window.location = \"#/dashboard\";\n            document.getElementById('root').style.visibility = 'visible';\n            store.dispatch({type:\"loadUser\",user})\n        } else {\n            console.log(\" Me encuentro en proceso \");\n            //if(window.location.hash !=  \"#/login\") window.location = \"#/login\";\n            //document.getElementById('root').style.visibility = 'visible';\n        }\n        \n    });\n    /*\n    if(window.location.hash == \"#/login\")\n    return(\n        <Switch>\n            <Route exact path=\"/login\" name=\"Login Page\" component={Login} />\n        </Switch>\n    )\n    else return (\n        <div className=\"app\">\n        <AppHeader fixed>\n          <DefaultHeader />\n        </AppHeader>\n        <div className=\"app-body\">\n          <AppSidebar fixed display=\"lg\">\n            <AppSidebarHeader />\n            <AppSidebarForm />\n            <AppSidebarNav navConfig={navigation} {...props} />\n            <AppSidebarFooter />\n            <AppSidebarMinimizer />\n          </AppSidebar>\n          <main className=\"main\">\n            <AppBreadcrumb appRoutes={routes}/>\n            <Container fluid>\n              <Switch>\n                {routes.map((route, idx) => {\n                    return route.component ? (<Route key={idx} path={route.path} exact={route.exact} name={route.name} render={props => (\n                        <route.component {...props} />\n                      )} />)\n                      : (null);\n                  },\n                )}\n                <Redirect from=\"/\" to=\"/dashboard\" />\n              </Switch>\n            </Container>\n          </main>\n          <AppAside fixed>\n            <DefaultAside />\n          </AppAside>\n        </div>\n        <AppFooter>\n          <DefaultFooter />\n        </AppFooter>\n      </div>\n    )*/\n    return (<div>hola como estas</div>)\n}\n\nclass Dao extends Component {\n  render() {\n    return (\n        <Provider store={store}>\n            <DaoIni {...this.props}/>\n        </Provider>\n      );\n  }\n}\n\nexport default Dao;\n"]},"metadata":{},"sourceType":"module"}