{"ast":null,"code":"import _defineProperty from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport Select from 'react-select';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nimport status from './Enumerators/status';\nvar opStatus = status.StatusOrder;\nvar flat = true;\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar OrdersList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrdersList, _Component);\n\n  function OrdersList(props) {\n    var _this;\n\n    _classCallCheck(this, OrdersList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrdersList).call(this, props));\n    _this.saveChanges = _this.saveChanges.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateDimensions = _this.updateDimensions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      value: ['UT', 'OH'],\n      tmpRow: '',\n      danger: false\n    };\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false //this.toggleDanger = this.toggleDanger.bind(this);\n\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(OrdersList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (flat) {\n        flat = false;\n        this.props.loadReducer('loadOrders', \"orders/find\");\n      }\n    }\n  }, {\n    key: \"saveChanges\",\n    value: function saveChanges(value) {\n      this.setState({\n        value: value\n      });\n    }\n  }, {\n    key: \"updateDimensions\",\n    value: function updateDimensions() {\n      var windowWidth = window.innerWidth;\n      this.setState(function (state) {\n        return {\n          windowWidth: windowWidth,\n          orientation: windowWidth < 620 ? 'vertical' : 'horizontal',\n          openDirection: windowWidth < 620 ? 'up' : 'down'\n        };\n      });\n    } //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n\n  }, {\n    key: \"callEdit\",\n    value: function callEdit(row) {\n      this.props.history.push({\n        pathname: '/Geo/CountriesAdd',\n        row: row\n      });\n    } //Cambia el valor a visible del mensaje de alerta \n    //guarda el identificador de la fila que sera afectada \n\n  }, {\n    key: \"toggleDanger\",\n    value: function toggleDanger(row) {\n      this.setState({\n        danger: !this.state.danger,\n        tmpRow: row.documentId\n      });\n    } //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n\n  }, {\n    key: \"editFormatter\",\n    value: function editFormatter(cell, row) {\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.callEdit.bind(this, row),\n        size: \"sm\",\n        className: \"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.toggleDanger.bind(this, row),\n        size: \"sm\",\n        className: \"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      //console.log(this.props.obj);\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Lista Ordenes\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/AllenFang/react-bootstrap-table\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Aprende\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Select, {\n        name: \"form-field-name2\",\n        value: this.props.values,\n        options: opStatus,\n        onChange: this.saveChanges,\n        multi: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa icon-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), \"\\xA0Crear Estado\"), React.createElement(Button, (_React$createElement = {\n        className: \"float-right\",\n        color: \"secondary\"\n      }, _defineProperty(_React$createElement, \"className\", \"float-right\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"i\", {\n        className: \"fa icon-arrow-left-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), \"\\xA0Regresar\"), React.createElement(BootstrapTable, {\n        data: this.props.obj,\n        striped: true,\n        hover: true,\n        pagination: true,\n        search: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"status\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Estado\"), React.createElement(TableHeaderColumn, {\n        width: '10%',\n        dataField: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Orden\"), React.createElement(TableHeaderColumn, {\n        dataField: \"reference\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Referencia\"), React.createElement(TableHeaderColumn, {\n        width: '30%',\n        dataField: \"skuName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Producto\"), React.createElement(TableHeaderColumn, {\n        dataField: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Ciudad\"), React.createElement(TableHeaderColumn, {\n        dataField: \"guide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Guia\"), React.createElement(TableHeaderColumn, {\n        dataField: \"invoice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Factura\"), React.createElement(TableHeaderColumn, {\n        dataField: \"unit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Procesado\"), React.createElement(TableHeaderColumn, {\n        dataField: \"store\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Tienda\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.editFormatter.bind(this),\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Accion\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"_id\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Identifier ID\")))));\n    }\n  }]);\n\n  return OrdersList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state); //Registra el objeto la funcion que cargara el objeto en el estado\n\n  return {\n    obj: state.DaoOrders\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: function loadReducer(type, colletion) {\n      DbCrud.dbMLoad(dispatch, type, colletion); //DbCrud.dbFindColletion(dispatch, type, colletion); \n    },\n    deleteReducer: function deleteReducer(type, colletion, component, documentId) {\n      DbCrud.dbDelete(dispatch, type, colletion, component, documentId);\n    },\n    editFileReducer: function editFileReducer(type, colletion, component, documentId, fileEdit, newFileEdit) {\n      DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js"],"names":["React","Component","connect","Card","CardHeader","CardBody","Modal","ModalHeader","ModalBody","ModalFooter","Button","ButtonGroup","AppSwitch","Select","BootstrapTable","TableHeaderColumn","DbCrud","status","opStatus","StatusOrder","flat","OrdersList","props","saveChanges","bind","updateDimensions","state","value","tmpRow","danger","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","loadReducer","setState","windowWidth","window","innerWidth","orientation","openDirection","row","history","push","pathname","documentId","cell","callEdit","toggleDanger","values","obj","editFormatter","mapStateToProps","console","log","DaoOrders","mapDispatchToProps","dispatch","type","colletion","dbMLoad","deleteReducer","component","dbDelete","editFileReducer","fileEdit","newFileEdit","dbEditFile"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,KAArC,EAA4CC,WAA5C,EAAyDC,SAAzD,EAAoEC,WAApE,EAAiFC,MAAjF,EAAyFC,WAAzF,QAA4G,YAA5G;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,uBAAlD;AACA,OAAO,+DAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,IAAMC,QAAQ,GAAGD,MAAM,CAACE,WAAxB;AAEA,IAAIC,IAAI,GAAG,IAAX;AAEA;;;;IAGMC,U;;;;;AAEJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,uDAAxB;AAGA,UAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CAAC,IAAD,EAAM,IAAN,CADI;AAEXC,MAAAA,MAAM,EAAG,EAFE;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKA,UAAKC,OAAL,GAAe;AACbC,MAAAA,aAAa,EAAE,IADF;AAEbC,MAAAA,eAAe,EAAE,IAFJ;AAGbC,MAAAA,cAAc,EAAE,CAHH;AAIbC,MAAAA,uBAAuB,EAAE,IAJZ;AAKbC,MAAAA,iBAAiB,EAAE,KALN;AAMbC,MAAAA,gBAAgB,EAAE,KANL,CAQf;;AARe,KAAf;AAXiB;AAoBlB;AAED;;;;;wCACoB;AAClB,UAAIhB,IAAJ,EAAU;AACRA,QAAAA,IAAI,GAAG,KAAP;AACA,aAAKE,KAAL,CAAWe,WAAX,CAAuB,YAAvB,EAAqC,aAArC;AACD;AACF;;;gCAEWV,K,EAAO;AACjB,WAAKW,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD;;;uCAEkB;AACjB,UAAMY,WAAW,GAAGC,MAAM,CAACC,UAA3B;AACA,WAAKH,QAAL,CAAc,UAACZ,KAAD,EAAU;AACtB,eAAQ;AACNa,UAAAA,WAAW,EAAEA,WADP;AAENG,UAAAA,WAAW,EAAEH,WAAW,GAAG,GAAd,GAAoB,UAApB,GAAiC,YAFxC;AAGNI,UAAAA,aAAa,EAAEJ,WAAW,GAAG,GAAd,GAAoB,IAApB,GAA2B;AAHpC,SAAR;AAKD,OAND;AAOD,K,CAED;;;;6BACSK,G,EAAK;AACZ,WAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,QAAAA,QAAQ,EAAE,mBADY;AAEtBH,QAAAA,GAAG,EAAEA;AAFiB,OAAxB;AAID,K,CAED;AACA;;;;iCACaA,G,EAAK;AAChB,WAAKN,QAAL,CAAc;AACZT,QAAAA,MAAM,EAAE,CAAC,KAAKH,KAAL,CAAWG,MADR;AAEZD,QAAAA,MAAM,EAAEgB,GAAG,CAACI;AAFA,OAAd;AAID,K,CAGD;;;;kCACcC,I,EAAML,G,EAAK;AACvB,aACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKM,QAAL,CAAc1B,IAAd,CAAmB,IAAnB,EAAyBoB,GAAzB,CAAjB;AAAgD,QAAA,IAAI,EAAC,IAArD;AAA0D,QAAA,SAAS,EAAC,+DAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKO,YAAL,CAAkB3B,IAAlB,CAAuB,IAAvB,EAA6BoB,GAA7B,CAAjB;AAAoD,QAAA,IAAI,EAAC,IAAzD;AAA8D,QAAA,SAAS,EAAC,8DAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF;AAUD;;;6BAEQ;AAAA;;AAEP;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,oDAAR;AAA6D,QAAA,GAAG,EAAC,qBAAjE;AAAuF,QAAA,MAAM,EAAC,QAA9F;AAAuG,QAAA,SAAS,EAAC,oBAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CAFF,CADF,EASE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,kBADP;AAEE,QAAA,KAAK,EAAE,KAAKtB,KAAL,CAAW8B,MAFpB;AAGE,QAAA,OAAO,EAAElC,QAHX;AAIE,QAAA,QAAQ,EAAE,KAAKK,WAJjB;AAKE,QAAA,KAAK,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EAYE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB,qBAZF,EAaE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,KAAK,EAAC;AAAtC,4DAA4D,aAA5D;AAAA;AAAA;AAAA,wFACE;AAAG,QAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,iBAbF,EAgBE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAW+B,GAAjC;AAAsC,QAAA,OAAO,MAA7C;AAA8C,QAAA,KAAK,MAAnD;AAAoD,QAAA,UAAU,MAA9D;AAA+D,QAAA,MAAM,MAArE;AAAsE,QAAA,OAAO,EAAE,KAAKvB,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,QAAQ,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,KAA1B;AAAiC,QAAA,SAAS,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,EAIE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,KAA1B;AAAiC,QAAA,SAAS,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAOE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAQE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,EASE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,EAUE,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAE,KAAKwB,aAAL,CAAmB9B,IAAnB,CAAwB,IAAxB,CAA/B;AAA8D,QAAA,SAAS,EAAC,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAWE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,IAA1B;AAAgC,QAAA,SAAS,EAAC,KAA1C;AAAgD,QAAA,MAAM,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXF,CAhBF,CATF,CADF,CADF;AA4CD;;;;EA/HsBvB,S;;AAmIzB,IAAMsD,eAAe,GAAG,SAAlBA,eAAkB,CAAC7B,KAAD,EAAW;AACjC8B,EAAAA,OAAO,CAACC,GAAR,CAAY/B,KAAZ,EADiC,CAEjC;;AACA,SAAM;AACJ2B,IAAAA,GAAG,EAAC3B,KAAK,CAACgC;AADN,GAAN;AAGD,CAND;;AAQA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACL;AACA;AACA;AACA;AACAvB,IAAAA,WAAW,EAAE,qBAACwB,IAAD,EAAOC,SAAP,EAAqB;AAChC9C,MAAAA,MAAM,CAAC+C,OAAP,CAAeH,QAAf,EAAyBC,IAAzB,EAA+BC,SAA/B,EADgC,CAEhC;AACD,KARI;AASLE,IAAAA,aAAa,EAAE,uBAACH,IAAD,EAAOC,SAAP,EAAkBG,SAAlB,EAA6BjB,UAA7B,EAA4C;AACzDhC,MAAAA,MAAM,CAACkD,QAAP,CAAgBN,QAAhB,EAA0BC,IAA1B,EAAgCC,SAAhC,EAA2CG,SAA3C,EAAsDjB,UAAtD;AACD,KAXI;AAYLmB,IAAAA,eAAe,EAAE,yBAACN,IAAD,EAAOC,SAAP,EAAkBG,SAAlB,EAA6BjB,UAA7B,EAAyCoB,QAAzC,EAAmDC,WAAnD,EAAmE;AAClFrD,MAAAA,MAAM,CAACsD,UAAP,CAAkBV,QAAlB,EAA4BC,IAA5B,EAAkCC,SAAlC,EAA6CG,SAA7C,EAAwDjB,UAAxD,EAAoEoB,QAApE,EAA8EC,WAA9E;AACD;AAdI,GAAP;AAgBD,CAjBD;;AAmBA,eAAenE,OAAO,CAACqD,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CtC,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport Select from 'react-select';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nimport status from './Enumerators/status';\n\nconst opStatus = status.StatusOrder;\n\nvar flat = true;\n\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass OrdersList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.saveChanges = this.saveChanges.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n\n\n    this.state = {\n      value: ['UT','OH'],\n      tmpRow : '',\n      danger: false\n    }\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    }\n    //this.toggleDanger = this.toggleDanger.bind(this);\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    if (flat) {\n      flat = false;\n      this.props.loadReducer('loadOrders', \"orders/find\");\n    }\n  }\n\n  saveChanges(value) {\n    this.setState({ value });\n  }\n\n  updateDimensions() {\n    const windowWidth = window.innerWidth;\n    this.setState((state)=> {\n      return ({\n        windowWidth: windowWidth,\n        orientation: windowWidth < 620 ? 'vertical' : 'horizontal',\n        openDirection: windowWidth < 620 ? 'up' : 'down'\n      });\n    });\n  }\n\n  //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n  callEdit(row) {\n    this.props.history.push({\n      pathname: '/Geo/CountriesAdd',\n      row: row\n    })\n  }\n\n  //Cambia el valor a visible del mensaje de alerta \n  //guarda el identificador de la fila que sera afectada \n  toggleDanger(row) {\n    this.setState({\n      danger: !this.state.danger,\n      tmpRow: row.documentId\n    });\n  }\n  \n\n  //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n  editFormatter(cell, row) {\n    return (\n      <ButtonGroup>\n        <Button onClick={this.callEdit.bind(this, row)} size=\"sm\" className=\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-pencil\"></i>\n        </Button>\n        <Button onClick={this.toggleDanger.bind(this, row)} size=\"sm\" className=\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-trash\"></i>\n        </Button>\n      </ButtonGroup>\n    )\n  }\n\n  render() {\n\n    //console.log(this.props.obj);\n\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardHeader>\n            Lista Ordenes\n            <div className=\"card-header-actions\">\n              <a href=\"https://github.com/AllenFang/react-bootstrap-table\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"card-header-action\">\n                <small className=\"text-muted\">Aprende</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            \n            <CardBody>\n              <Select\n                name=\"form-field-name2\"\n                value={this.props.values}\n                options={opStatus}\n                onChange={this.saveChanges}\n                multi\n              />\n            </CardBody>\n\n            <Button color=\"primary\"><i className=\"fa icon-plus\"></i>&nbsp;Crear Estado</Button>\n            <Button className=\"float-right\" color=\"secondary\" className=\"float-right\">\n              <i className=\"fa icon-arrow-left-circle\"></i>&nbsp;Regresar\n            </Button>\n            <BootstrapTable data={this.props.obj} striped hover pagination search options={this.options}>\n              <TableHeaderColumn dataField='status' dataSort>Estado</TableHeaderColumn>\n              <TableHeaderColumn width={'10%'} dataField='order' >Orden</TableHeaderColumn>\n              <TableHeaderColumn dataField='reference' >Referencia</TableHeaderColumn>\n              <TableHeaderColumn width={'30%'} dataField='skuName' >Producto</TableHeaderColumn>\n              <TableHeaderColumn dataField='city' >Ciudad</TableHeaderColumn>\n              <TableHeaderColumn dataField='guide' >Guia</TableHeaderColumn>\n              <TableHeaderColumn dataField='invoice' >Factura</TableHeaderColumn>\n              <TableHeaderColumn dataField='unit' >Procesado</TableHeaderColumn>\n              <TableHeaderColumn dataField='store' >Tienda</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.editFormatter.bind(this)} dataAlign='right' >Accion</TableHeaderColumn>\n              <TableHeaderColumn isKey={true} dataField='_id' hidden>Identifier ID</TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return{\n    obj:state.DaoOrders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: (type, colletion) => { \n      DbCrud.dbMLoad(dispatch, type, colletion);\n      //DbCrud.dbFindColletion(dispatch, type, colletion); \n    },\n    deleteReducer: (type, colletion, component, documentId) => { \n      DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n    editFileReducer: (type, colletion, component, documentId, fileEdit, newFileEdit) => { \n      DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);\n"]},"metadata":{},"sourceType":"module"}