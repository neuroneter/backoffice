{"map":"{\"version\":3,\"sources\":[\"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Geo/StatesAdd.js\"],\"names\":[\"StatesAdd\",\"props\",\"_this\",\"Object\",\"_Users_danielobedortegahernandez_iCloud_Documents_GitHub_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__\",\"this\",\"_Users_danielobedortegahernandez_iCloud_Documents_GitHub_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__\",\"_Users_danielobedortegahernandez_iCloud_Documents_GitHub_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__\",\"call\",\"undefined\",\"location\",\"documentId\",\"match\",\"params\",\"console\",\"log\",\"obj\",\"history\",\"push\",\"e\",\"preventDefault\",\"state\",\"update\",\"create\",\"react__WEBPACK_IMPORTED_MODULE_6___default\",\"a\",\"createElement\",\"className\",\"reactstrap__WEBPACK_IMPORTED_MODULE_8__\",\"Component\",\"connect\",\"email\",\"login\",\"password\",\"MyAccount\",\"dispatch\",\"type\",\"colletion\",\"component\",\"DbCrud\",\"dbCreate\",\"dbUpdate\"],\"mappings\":\"oLA4BMA,sBAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,SAC0BQ,GAA7BR,EAAMS,SAASC,aAClBT,EAAKS,WAAaT,EAAKD,MAAMW,MAAMC,OAAOF,YAKtCV,EAAMS,SAASC,WAIdG,QAAQC,IAAIb,EAAKD,MAAMe,KAH1Bd,EAAKD,MAAMgB,QAAQC,KAAK,sBATThB,0EA4DNG,KAAKJ,MAAMgB,QAAQC,KAAK,uDAE5BC,GACPA,EAAEC,iBACCf,KAAKgB,MAAMV,YACZN,KAAKJ,MAAMqB,OAAO,YAAa,MAAO,gBAAiBjB,KAAMA,KAAKgB,MAAMV,YACxEN,KAAKJ,MAAMgB,QAAQC,KAAK,wBAExBb,KAAKJ,MAAMsB,OAAO,SAAU,MAAO,gBAAiBlB,MACpDA,KAAKJ,MAAMgB,QAAQC,KAAK,wDAK1B,OACEM,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,mBAEbH,EAAAC,EAAAC,cAACE,EAAA,GAAD,KAAA,eA/EgBC,EAAAA,YA4GTC,EAAAA,QAAAA,OAAAA,EAAAA,EAAAA,CAnBS,SAACT,GACvB,MAAO,CACLU,MAAOV,EAAMW,MAAMD,MACnBE,SAAUZ,EAAMW,MAAMC,SACtBjB,IAAKK,EAAMa,YAIY,SAACC,GAC1B,MAAO,CACLZ,OAAQ,SAACa,EAAMC,EAAWC,EAAWnB,GACnCoB,EAAAA,EAAOC,SAASL,EAAUC,EAAMC,EAAWC,EAAWnB,IAExDG,OAAQ,SAACc,EAAMC,EAAWC,EAAWnB,EAAGR,GACtC4B,EAAAA,EAAOE,SAASN,EAAUC,EAAMC,EAAWC,EAAWnB,EAAGR,MAKhDmB,CAA6C9B\",\"sourcesContent\":[\"import { connect } from 'react-redux';\\nimport React, { Component } from 'react';\\nimport DbCrud from '../../../Actions/DbCrud';\\nimport {Button, Card, CardBody, CardHeader, Col, Form, FormGroup, Input, InputGroup, Label, Row} from 'reactstrap';\\nimport { TextMask, InputAdapter } from 'react-text-mask-hoc';\\n\\n//Objeto que describe el nodo en la base de datos de los estados que hacen parte de un pais\\n//lo usamos para reconocer la estructura no tiene funcionalidad dentro del codigo \\nconst states =  [\\n  {\\n      cities   :   {\\n        code:  undefined,\\n        geopoint    :  [undefined,undefined],\\n        nameCity: undefined,\\n        neighborhoods:{\\n          code:  undefined,\\n          geopoint    :  [undefined,undefined],\\n          nameNeighbordhood: undefined\\n        }\\n      },\\n      code :   undefined,\\n      geopoint    :  [undefined,undefined],\\n      isoCode   :   undefined,\\n      stateName  :   undefined\\n  }\\n];\\n\\n\\nclass StatesAdd extends Component {\\n\\n  constructor(props) {\\n    super(props);\\n    if(props.location.documentId == undefined) \\n    this.documentId = this.props.match.params.documentId;\\n    //Si no se envia la información para actualizar un registro se carga en blanco los campos ya que se esta \\n    //creando uno nuevo\\n    //console.log(\\\"llegando\\\");\\n\\n    if(!props.location.documentId){\\n      this.props.history.push('/Geo/CountriesList');\\n    }else{\\n         //Procedemos a buscar en el objeto el estado cargado de geo cual es el nodo donde se requiere adicionar la información\\n         console.log(this.props.obj);\\n         /*this.props.obj.forEach(function(country) {\\n             //Dentro del objeto identificamos si el nodo en donde me encuentro parado es el que estoy editando \\n             if(country.documentId == this.documentId){\\n                 //una vez encontramos el objeto verificamos si este ya tiene un nodo detipo state creado \\n                 //ya que si el pais fue creado pero nunca se le ha adicionado un estado no tendra este nodo \\n                 if(country.states == undefined){\\n                   //Creamos un objeto de tipo Array donde podemos almacenar los datos de este nodo \\n                   country.states = [\\n                    {\\n                      countryName: '',\\n                      isoCode: '',\\n                      active: '',\\n                      geopoint: {latitude:'',longitude:''}\\n                    }\\n                   ];\\n                 }\\n                \\n                 //Creamos el state que almacenara localmente la información que llega al componente\\n                 this.state = {\\n                     //Identificador del documento al que tenemos que afectar \\n                     documentId: props.location.documentId,\\n                     //Objeto completo de pais\\n                     rootObj:country,\\n                     //Objeto completo de estados, si no existe este objeto se creo previamente un array vacio\\n                     statesObj:country.states\\n                 };\\n                \\n                 //Eliminamos del objeto su identificador para poder utilizarlo para poder adicionar un nuevo registro hijo \\n                 //Esto lo hacemos ya que el objeto que se enviara a la base de datos no tiene dentro del hijo el id del documento \\n                 delete this.state.rootObj[\\\"documentId\\\"];\\n             }\\n         }.bind(this)); */\\n    }\\n    \\n    \\n    //if(this.props.location.row){\\n     // this.state = this.props.location.row;\\n    //}else{\\n    //  this.state = {\\n     //   countryName: '',\\n     //   isoCode: '',\\n      //  active: '',\\n     //   geopoint: {latitude:'',longitude:''}\\n     // }\\n    //}\\n  }\\n\\n  callList() { this.props.history.push('/Geo/CountriesList'); }\\n\\n  callSave(e) {\\n    e.preventDefault();\\n    if(this.state.documentId){\\n      this.props.update('updateGeo', \\\"geo\\\", \\\"CountriesList\\\", this, this.state.documentId);\\n      this.props.history.push('/Geo/CountriesList');\\n    }else{\\n      this.props.create('addGeo', \\\"geo\\\", \\\"CountriesList\\\", this);\\n      this.props.history.push('/Geo/CountriesList');\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"animated fadeIn\\\">\\n\\n        <Row>\\n          dfg\\n        </Row>\\n      \\n      </div>\\n    );\\n  }\\n\\n}\\n\\nconst mapStateToProps = (state) => {\\n  return {\\n    email: state.login.email,\\n    password: state.login.password,\\n    obj: state.MyAccount\\n  }\\n}\\n\\nconst mapDispatchToProps = (dispatch) => {\\n  return {\\n    create: (type, colletion, component, e) => {\\n      DbCrud.dbCreate(dispatch, type, colletion, component, e);\\n    },\\n    update: (type, colletion, component, e, documentId) => {\\n      DbCrud.dbUpdate(dispatch, type, colletion, component, e, documentId);\\n    }\\n  }\\n}\\n\\nexport default connect(mapStateToProps, mapDispatchToProps)(StatesAdd);\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{1205:function(t,e,o){\"use strict\";o.r(e);var n=o(7),s=o(8),i=o(10),a=o(9),r=o(11),u=o(37),c=o(1),p=o.n(c),d=o(192),l=o(2),h=(o(513),function(t){function e(t){var o;return Object(n.a)(this,e),o=Object(i.a)(this,Object(a.a)(e).call(this,t)),void 0==t.location.documentId&&(o.documentId=o.props.match.params.documentId),t.location.documentId?console.log(o.props.obj):o.props.history.push(\"/Geo/CountriesList\"),o}return Object(r.a)(e,t),Object(s.a)(e,[{key:\"callList\",value:function(){this.props.history.push(\"/Geo/CountriesList\")}},{key:\"callSave\",value:function(t){t.preventDefault(),this.state.documentId?(this.props.update(\"updateGeo\",\"geo\",\"CountriesList\",this,this.state.documentId),this.props.history.push(\"/Geo/CountriesList\")):(this.props.create(\"addGeo\",\"geo\",\"CountriesList\",this),this.props.history.push(\"/Geo/CountriesList\"))}},{key:\"render\",value:function(){return p.a.createElement(\"div\",{className:\"animated fadeIn\"},p.a.createElement(l.ib,null,\"dfg\"))}}]),e}(c.Component));e.default=Object(u.b)(function(t){return{email:t.login.email,password:t.login.password,obj:t.MyAccount}},function(t){return{create:function(e,o,n,s){d.a.dbCreate(t,e,o,n,s)},update:function(e,o,n,s,i){d.a.dbUpdate(t,e,o,n,s,i)}}})(h)}}]);","extractedComments":[]}