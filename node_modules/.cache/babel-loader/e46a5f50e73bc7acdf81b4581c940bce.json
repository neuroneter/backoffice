{"ast":null,"code":"import firebase from '../Pojo/Firebase.js';\nvar db = firebase.firestore(); // Estructura de DB para Usuario\n\nvar geo = [{\n  status: undefined,\n  order: undefined,\n  date: undefined,\n  reference: undefined,\n  code: undefined,\n  skuName: undefined,\n  lot: undefined,\n  value: undefined,\n  discount: undefined,\n  points: undefined,\n  price: undefined,\n  shipping: undefined,\n  totalPay: undefined,\n  discountName: undefined,\n  customer: undefined,\n  dni: undefined,\n  phone: undefined,\n  state: undefined,\n  city: undefined,\n  divipola: undefined,\n  neighborhood: undefined,\n  address: undefined,\n  addAddress: undefined,\n  deliveryOnName: undefined,\n  slaType: undefined,\n  estimatedShippingDate: undefined,\n  ansDelivery: undefined,\n  oderDate: undefined,\n  stock: undefined,\n  guide: undefined,\n  dispatch: undefined,\n  carrier: undefined,\n  trakingUrl: undefined,\n  invoice: undefined,\n  invoiceUrl: undefined,\n  observations: undefined,\n  unit: undefined,\n  employee: undefined\n}]; //se pasa un estado por defecto para definicion de estructura\n\nfunction Orders() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  //console.log(\"DaoOrders\");\n  var NewState = Object.assign([], state);\n\n  if (action.type == \"loadOrders\") {\n    action.data.forEach(function (doc) {\n      console.log(doc.status);\n      console.log(doc); //var newObj = Object.assign({\"documentId\":doc.id}, doc.data());\n      //NewState.push(newObj);\n    });\n    return NewState;\n  } else return NewState;\n}\n\nvar DaoOrders = {\n  Orders: Orders\n};\nexport default DaoOrders;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/Dao/DaoOrders.js"],"names":["firebase","db","firestore","geo","status","undefined","order","date","reference","code","skuName","lot","value","discount","points","price","shipping","totalPay","discountName","customer","dni","phone","state","city","divipola","neighborhood","address","addAddress","deliveryOnName","slaType","estimatedShippingDate","ansDelivery","oderDate","stock","guide","dispatch","carrier","trakingUrl","invoice","invoiceUrl","observations","unit","employee","Orders","action","NewState","Object","assign","type","data","forEach","doc","console","log","DaoOrders"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,IAAIC,EAAE,GAAGD,QAAQ,CAACE,SAAT,EAAT,C,CAEA;;AACA,IAAMC,GAAG,GAAG,CAAC;AACTC,EAAAA,MAAM,EAACC,SADE;AAETC,EAAAA,KAAK,EAACD,SAFG;AAGTE,EAAAA,IAAI,EAACF,SAHI;AAITG,EAAAA,SAAS,EAACH,SAJD;AAKTI,EAAAA,IAAI,EAACJ,SALI;AAMTK,EAAAA,OAAO,EAACL,SANC;AAOTM,EAAAA,GAAG,EAACN,SAPK;AAQTO,EAAAA,KAAK,EAACP,SARG;AASTQ,EAAAA,QAAQ,EAACR,SATA;AAUTS,EAAAA,MAAM,EAACT,SAVE;AAWTU,EAAAA,KAAK,EAACV,SAXG;AAYTW,EAAAA,QAAQ,EAACX,SAZA;AAaTY,EAAAA,QAAQ,EAACZ,SAbA;AAcTa,EAAAA,YAAY,EAACb,SAdJ;AAeTc,EAAAA,QAAQ,EAACd,SAfA;AAgBTe,EAAAA,GAAG,EAACf,SAhBK;AAiBTgB,EAAAA,KAAK,EAAChB,SAjBG;AAkBTiB,EAAAA,KAAK,EAACjB,SAlBG;AAmBTkB,EAAAA,IAAI,EAAClB,SAnBI;AAoBTmB,EAAAA,QAAQ,EAACnB,SApBA;AAqBToB,EAAAA,YAAY,EAACpB,SArBJ;AAsBTqB,EAAAA,OAAO,EAACrB,SAtBC;AAuBTsB,EAAAA,UAAU,EAACtB,SAvBF;AAwBTuB,EAAAA,cAAc,EAACvB,SAxBN;AAyBTwB,EAAAA,OAAO,EAACxB,SAzBC;AA0BTyB,EAAAA,qBAAqB,EAACzB,SA1Bb;AA2BT0B,EAAAA,WAAW,EAAC1B,SA3BH;AA4BT2B,EAAAA,QAAQ,EAAC3B,SA5BA;AA6BT4B,EAAAA,KAAK,EAAC5B,SA7BG;AA8BT6B,EAAAA,KAAK,EAAC7B,SA9BG;AA+BT8B,EAAAA,QAAQ,EAAC9B,SA/BA;AAgCT+B,EAAAA,OAAO,EAAC/B,SAhCC;AAiCTgC,EAAAA,UAAU,EAAChC,SAjCF;AAkCTiC,EAAAA,OAAO,EAACjC,SAlCC;AAmCTkC,EAAAA,UAAU,EAAClC,SAnCF;AAoCTmC,EAAAA,YAAY,EAACnC,SApCJ;AAqCToC,EAAAA,IAAI,EAACpC,SArCI;AAsCTqC,EAAAA,QAAQ,EAACrC;AAtCA,CAAD,CAAZ,C,CAyCA;;AACA,SAASsC,MAAT,GAAmC;AAAA,MAAnBrB,KAAmB,uEAAX,EAAW;AAAA,MAAPsB,MAAO;AAC/B;AACA,MAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBzB,KAAjB,CAAf;;AACA,MAAGsB,MAAM,CAACI,IAAP,IAAe,YAAlB,EAA+B;AAC3BJ,IAAAA,MAAM,CAACK,IAAP,CAAYC,OAAZ,CAAoB,UAAUC,GAAV,EAAe;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC/C,MAAhB;AACAgD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAF+B,CAG/B;AACA;AACH,KALD;AAMA,WAAON,QAAP;AACH,GARD,MASK,OAAOA,QAAP;AACR;;AAED,IAAMS,SAAS,GAAG;AAACX,EAAAA,MAAM,EAANA;AAAD,CAAlB;AAEA,eAAeW,SAAf","sourcesContent":["import firebase from '../Pojo/Firebase.js';\nlet db = firebase.firestore();\n\n// Estructura de DB para Usuario\nconst geo = [{\n    status:undefined,\n    order:undefined,\n    date:undefined,\n    reference:undefined,\n    code:undefined,\n    skuName:undefined,\n    lot:undefined,\n    value:undefined,\n    discount:undefined,\n    points:undefined,\n    price:undefined,\n    shipping:undefined,\n    totalPay:undefined,\n    discountName:undefined,\n    customer:undefined,\n    dni:undefined,\n    phone:undefined,\n    state:undefined,\n    city:undefined,\n    divipola:undefined,\n    neighborhood:undefined,\n    address:undefined,\n    addAddress:undefined,\n    deliveryOnName:undefined,\n    slaType:undefined,\n    estimatedShippingDate:undefined,\n    ansDelivery:undefined,\n    oderDate:undefined,\n    stock:undefined,\n    guide:undefined,\n    dispatch:undefined,\n    carrier:undefined,\n    trakingUrl:undefined,\n    invoice:undefined,\n    invoiceUrl:undefined,\n    observations:undefined,\n    unit:undefined,\n    employee:undefined\n}]\n\n//se pasa un estado por defecto para definicion de estructura\nfunction Orders(state = [], action){\n    //console.log(\"DaoOrders\");\n    var NewState = Object.assign([],state);\n    if(action.type == \"loadOrders\"){\n        action.data.forEach(function (doc) {\n            console.log(doc.status);\n            console.log(doc);\n            //var newObj = Object.assign({\"documentId\":doc.id}, doc.data());\n            //NewState.push(newObj);\n        });\n        return NewState;\n    }\n    else return NewState;\n}\n\nconst DaoOrders = {Orders}\n\nexport default DaoOrders;"]},"metadata":{},"sourceType":"module"}