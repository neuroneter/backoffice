{"ast":null,"code":"import _defineProperty from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nvar flat = true;\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar OrdersList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrdersList, _Component);\n\n  function OrdersList(props) {\n    var _this;\n\n    _classCallCheck(this, OrdersList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrdersList).call(this, props));\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    };\n    console.log(_this.props.match.params);\n    _this.state = {\n      //Cargamos en el estado el identificador del documento en el que menencuentro \n      documentId: _this.props.match.params,\n      //Creamos un objeto donde almacenaremos toda la informaci√≥n de este nodo\n      rootObj: \"\",\n      //Creamos un objeto donde almacenaremos la informacion de los estados de este nodo \n      statesObj: \"\"\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(OrdersList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (flat) {\n        flat = false;\n        this.props.loadReducer('loadOrders', \"orders/find\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"gg\", this.state.documentId, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Lista Ordenes\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/AllenFang/react-bootstrap-table\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Aprende\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa icon-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), \"\\xA0Crear Estado\"), React.createElement(Button, (_React$createElement = {\n        className: \"float-right\",\n        color: \"secondary\"\n      }, _defineProperty(_React$createElement, \"className\", \"float-right\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"i\", {\n        className: \"fa icon-arrow-left-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \"\\xA0Regresar\"))));\n    }\n  }]);\n\n  return OrdersList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"mapStateToProps\");\n  return {\n    obj: state.DaoOrders\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: function loadReducer(type, colletion) {\n      DbCrud.dbMLoad(dispatch, type, colletion); //DbCrud.dbFindColletion(dispatch, type, colletion); \n    },\n    deleteReducer: function deleteReducer(type, colletion, component, documentId) {\n      DbCrud.dbDelete(dispatch, type, colletion, component, documentId);\n    },\n    editFileReducer: function editFileReducer(type, colletion, component, documentId, fileEdit, newFileEdit) {\n      DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js"],"names":["React","Component","connect","Card","CardHeader","CardBody","Modal","ModalHeader","ModalBody","ModalFooter","Button","ButtonGroup","AppSwitch","BootstrapTable","TableHeaderColumn","DbCrud","flat","OrdersList","props","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","console","log","match","params","state","documentId","rootObj","statesObj","loadReducer","mapStateToProps","obj","DaoOrders","mapDispatchToProps","dispatch","type","colletion","dbMLoad","deleteReducer","component","dbDelete","editFileReducer","fileEdit","newFileEdit","dbEditFile"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react'\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\n\nvar flat = true;\n\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass OrdersList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    };\n    console.log(this.props.match.params);\n    this.state = {\n      //Cargamos en el estado el identificador del documento en el que menencuentro \n      documentId: this.props.match.params, \n      //Creamos un objeto donde almacenaremos toda la informaci√≥n de este nodo\n      rootObj:\"\",\n      //Creamos un objeto donde almacenaremos la informacion de los estados de este nodo \n      statesObj:\"\"\n    }; \n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    if (flat) {\n      flat = false;\n      this.props.loadReducer('loadOrders', \"orders/find\");\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"animated\">\n        gg{this.state.documentId}\n        <Card>\n          <CardHeader>\n            Lista Ordenes\n            <div className=\"card-header-actions\">\n              <a href=\"https://github.com/AllenFang/react-bootstrap-table\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"card-header-action\">\n                <small className=\"text-muted\">Aprende</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <Button color=\"primary\" ><i className=\"fa icon-plus\"></i>&nbsp;Crear Estado</Button>\n            <Button className=\"float-right\" color=\"secondary\" className=\"float-right\">\n              <i className=\"fa icon-arrow-left-circle\"></i>&nbsp;Regresar\n            </Button>\n           \n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => { \n  console.log(\"mapStateToProps\");\n  return { obj: state.DaoOrders } \n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: (type, colletion) => { \n      DbCrud.dbMLoad(dispatch, type, colletion);\n      //DbCrud.dbFindColletion(dispatch, type, colletion); \n    },\n    deleteReducer: (type, colletion, component, documentId) => { \n      DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n    editFileReducer: (type, colletion, component, documentId, fileEdit, newFileEdit) => { \n      DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);\n"]},"metadata":{},"sourceType":"module"}