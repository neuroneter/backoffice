{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/Edits.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Label, InputGroupAddon, InputGroup, InputGroupText, Col, Button, Input, Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar Eidts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Eidts, _Component);\n\n  function Eidts(props) {\n    var _this;\n\n    _classCallCheck(this, Eidts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Eidts).call(this, props));\n    _this.state = {\n      atributes: []\n    };\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(Eidts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.loadReducer(\"loadCombinations\", \"combinations/\", {});\n    }\n  }, {\n    key: \"option\",\n    value: function option() {\n      var options = [];\n\n      try {\n        options.push(React.createElement(\"option\", {\n          key: \"comb0\",\n          value: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Combinaciones\"));\n        this.props.obj.totalcombinations.label.forEach(function (elemt, item) {\n          var key = \"comb\" + (item + 1);\n          options.push(React.createElement(\"option\", {\n            key: key,\n            value: elemt,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, elemt));\n        });\n      } catch (e) {}\n\n      return options;\n    }\n  }, {\n    key: \"formCombinations\",\n    value: function formCombinations(val) {\n      var html = [];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Combinaci\\xF3n: \"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Ingrese el nombre de la Combinaci\\xF3n\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Tabla\"));\n    }\n  }, {\n    key: \"typeAux\",\n    value: function typeAux(cell, row) {\n      var key = row._id;\n      if (row.type == \"color\") return React.createElement(Input, {\n        key: key,\n        type: \"color\",\n        name: \"color\",\n        id: \"exampleColor\",\n        placeholder: \"color placeholder\",\n        defaultValue: \"#ff0000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n      if (row.type == \"text\") return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, row.aux);\n    }\n  }, {\n    key: \"dataForm\",\n    value: function dataForm(label) {\n      console.log(label);\n\n      if (this.props.obj.listCombination.length > 0) {\n        this.setState({\n          atributes: this.props.obj.listCombination\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Seleccione la Combinaci\\xF3n\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"5\",\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"combinacion\",\n        onChange: this.dataForm.bind(this),\n        id: \"combinacion\",\n        key: \"combinacion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.option())), React.createElement(Col, {\n        xs: \"12\",\n        md: \"4\",\n        xl: true,\n        className: \"mb-2 mb-xl-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Button, {\n        active: true,\n        block: true,\n        color: \"success\",\n        \"aria-pressed\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"+ Combinaci\\xF3n\"))))))))))), React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"6\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Gestion de Combinaciones\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Formulario\"))), React.createElement(Col, {\n        xs: \"6\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Atributos\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.atributes,\n        striped: true,\n        hover: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        width: '25%',\n        dataField: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Combinaci\\xF3n\"), React.createElement(TableHeaderColumn, {\n        width: '30%',\n        dataField: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Atributo\"), React.createElement(TableHeaderColumn, {\n        width: '10%',\n        dataFormat: this.typeAux.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Atributo\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"_id\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Identifier ID\"))))))));\n    }\n  }]);\n\n  return Eidts;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    obj: state.DaoCombinations\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Eidts);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/Edits.js"],"names":["React","Component","connect","Row","Label","InputGroupAddon","InputGroup","InputGroupText","Col","Button","Input","Card","CardHeader","CardBody","BootstrapTable","TableHeaderColumn","DbCrud","Eidts","props","state","atributes","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","loadReducer","push","obj","totalcombinations","label","forEach","elemt","item","key","e","val","html","cell","row","_id","type","aux","console","log","listCombination","length","setState","dataForm","bind","option","typeAux","mapStateToProps","DaoCombinations","mapDispatchToProps","dispatch","colletion","body","dbMLoad"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Label, InputGroupAddon, InputGroup, InputGroupText, Col, Button, Input, Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\n \n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass Eidts extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n       atributes:[]\n    }\n\n    this.options = {\n        sortIndicator: true,\n        hideSizePerPage: true,\n        paginationSize: 5,\n        hidePageListOnlyOnePage: true,\n        alwaysShowAllBtns: false,\n        withFirstAndLast: false\n      }\n\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    this.props.loadReducer(\"loadCombinations\", \"combinations/\", {});\n  } \n \n  option(){\n      var options = [];\n      try{\n        options.push(<option key=\"comb0\" value=\"0\">Combinaciones</option>)\n        this.props.obj.totalcombinations.label.forEach((elemt, item) => {\n           var key = \"comb\"+(item+1);\n           options.push(<option key={key} value={elemt}>{elemt}</option>)\n        });\n      }catch(e){}\n      return options;\n  }\n\n  formCombinations(val){\n    var html = [];\n    return(\n        <Row>\n            <Col>\n                <Row>\n                    <Col>\n                        <Label>Combinación: </Label>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText><i className=\"fa fa-calendar\"></i></InputGroupText>\n                            </InputGroupAddon>\n                            <Input type=\"text\" id=\"name\" placeholder=\"Ingrese el nombre de la Combinación\" required />\n                        </InputGroup>\n                    </Col>\n                </Row>\n            </Col>\n            <Col>\n                Tabla\n            </Col>\n        </Row>\n    )\n  }\n\n  typeAux(cell, row){\n    var key = row._id;\n    if(row.type == \"color\") return (\n        <Input\n            key={key}\n            type=\"color\"\n            name=\"color\"\n            id=\"exampleColor\"\n            placeholder=\"color placeholder\"\n            defaultValue=\"#ff0000\"\n        />\n    );\n    if(row.type == \"text\") return <div>{row.aux}</div>;\n   }\n\n  dataForm(label){\n    console.log(label);\n    if(this.props.obj.listCombination.length > 0){\n        this.setState({\n            atributes:this.props.obj.listCombination\n        });\n    }\n  }\n\n  render() {\n\n    return (\n\n      <Row>\n        <Col xs=\"12\" md=\"12\">\n            <Row>\n                <Col xs=\"12\" md=\"12\">\n                    <Card>\n                        <CardHeader>\n                            Seleccione la Combinación\n                        </CardHeader>\n                        <CardBody>\n                            <Col xs=\"5\" md=\"5\">\n                                <Row>\n                                    <Col xs=\"12\" md=\"12\">\n                                        <Row>\n                                            <Col xs=\"12\" md=\"8\">\n                                                <Input type=\"select\" name=\"combinacion\" onChange={this.dataForm.bind(this)} id=\"combinacion\" key=\"combinacion\">\n                                                    {this.option()}\n                                                </Input>\n                                            </Col>\n                                            <Col xs=\"12\" md=\"4\"xl className=\"mb-2 mb-xl-0\">\n                                                <Button active block color=\"success\" aria-pressed=\"true\">+ Combinación</Button>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Col>\n\n        <Col xs=\"12\" md=\"12\">\n            <Row>\n                <Col xs=\"6\" md=\"6\">\n                    <Card>\n                        <CardHeader>\n                            Gestion de Combinaciones\n                        </CardHeader>\n                        <CardBody>\n                            Formulario\n                        </CardBody>\n                    </Card>\n                </Col>\n                <Col xs=\"6\" md=\"6\">\n                    <Card>\n                        <CardHeader>\n                            Atributos\n                        </CardHeader>\n                        <CardBody>\n                            <BootstrapTable data={this.state.atributes} striped hover options={this.options} > \n                                <TableHeaderColumn width={'25%'} dataField='label' >Combinación</TableHeaderColumn>\n                                <TableHeaderColumn width={'30%'} dataField='name' >Atributo</TableHeaderColumn>\n                                <TableHeaderColumn width={'10%'} dataFormat={this.typeAux.bind(this)}>Atributo</TableHeaderColumn>\n                                <TableHeaderColumn isKey={true} dataField='_id' hidden>Identifier ID</TableHeaderColumn>\n                            </BootstrapTable>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Col>\n      </Row>\n       \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    obj:state.DaoCombinations\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Eidts);\n"]},"metadata":{},"sourceType":"module"}