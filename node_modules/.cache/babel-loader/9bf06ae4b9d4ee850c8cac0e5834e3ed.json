{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/Edits.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink } from \"react-csv\";\nimport { Row, Col, Card, CardHeader, CardBody, Button, ButtonGroup } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\nimport Pagination from '../Pagination/Pagination';\nvar flat = true;\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar Eidts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Eidts, _Component);\n\n  function Eidts(props) {\n    var _this;\n\n    _classCallCheck(this, Eidts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Eidts).call(this, props));\n    _this.state = {\n      ini: \"\"\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(Eidts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Administrar Combinaci\\xF3n\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"6\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Combinancion\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Nombre\"))))));\n    }\n  }]);\n\n  return Eidts;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return {\n    obj: state.DaoOrders\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    },\n    editFileReducer: function editFileReducer(type, colletion, component, documentId, fileEdit, newFileEdit) {//DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Eidts);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/Edits.js"],"names":["React","Component","connect","CSVLink","Row","Col","Card","CardHeader","CardBody","Button","ButtonGroup","BootstrapTable","TableHeaderColumn","DbCrud","Pagination","flat","Eidts","props","state","ini","mapStateToProps","obj","DaoOrders","mapDispatchToProps","dispatch","loadReducer","type","colletion","body","dbMLoad","editFileReducer","component","documentId","fileEdit","newFileEdit"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+CC,MAA/C,EAAuDC,WAAvD,QAA0E,YAA1E;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,uBAAlD;AACA,OAAO,+DAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAGA,IAAIC,IAAI,GAAG,IAAX;AAEA;;;;IAGMC,K;;;;;AAEJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAG;AADG,KAAb;AAFiB;AAKlB;AAED;;;;;wCACoB,CAAE;;;6BAGb;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ,CADF,CADF,CAJF,CADF;AAiBD;;;;EA/BiBlB,S;;AAkCpB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAACF,KAAD,EAAW;AACjC;AACA,SAAM;AACJG,IAAAA,GAAG,EAACH,KAAK,CAACI;AADN,GAAN;AAGD,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACL;AACA;AACA;AACA;AACAC,IAAAA,WAAW,EAAE,qBAACC,IAAD,EAAOC,SAAP,EAAkBC,IAAlB,EAA2B;AACtCf,MAAAA,MAAM,CAACgB,OAAP,CAAeL,QAAf,EAAyBE,IAAzB,EAA+BC,SAA/B,EAA0CC,IAA1C;AACD,KAPI;AASLE,IAAAA,eAAe,EAAE,yBAACJ,IAAD,EAAOC,SAAP,EAAkBI,SAAlB,EAA6BC,UAA7B,EAAyCC,QAAzC,EAAmDC,WAAnD,EAAmE,CAClF;AACD;AAXI,GAAP;AAcD,CAfD;;AAiBA,eAAehC,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CP,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink } from \"react-csv\";\nimport { Row, Col, Card, CardHeader, CardBody, Button, ButtonGroup } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\nimport Pagination from '../Pagination/Pagination';\n\n\nvar flat = true;\n \n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass Eidts extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        ini : \"\"\n    }\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {} \n \n  \n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          Administrar Combinaci√≥n\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col xs=\"6\" md=\"6\">\n                <Row>\n                    <Col>Combinancion</Col>\n                    <Col>Nombre</Col>\n                </Row>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return{\n    obj:state.DaoOrders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    },\n\n    editFileReducer: (type, colletion, component, documentId, fileEdit, newFileEdit) => { \n      //DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Eidts);\n"]},"metadata":{},"sourceType":"module"}