{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/Edit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BreadcrumbItem, Breadcrumb, Row, Label, InputGroupAddon, InputGroup, InputGroupText, Col, Button, Input, Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\nimport { set } from 'core-js/fn/dict';\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar Eidts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Eidts, _Component);\n\n  function Eidts(props) {\n    var _this;\n\n    _classCallCheck(this, Eidts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Eidts).call(this, props));\n    _this.state = {\n      atributes: [{\n        _id: \"0\",\n        label: \"\"\n      }],\n      auxType: \"text\",\n      auxValue: \"\",\n      auxValColor: \"\",\n      auxValText: \"\"\n    };\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(Eidts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.loadReducer(\"loadCombinations\", \"combinations/\", {});\n    }\n  }, {\n    key: \"option\",\n    value: function option() {\n      var options = [];\n\n      try {\n        options.push(React.createElement(\"option\", {\n          key: \"comb0\",\n          value: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Combinaciones\"));\n        this.props.obj.totalcombinations.label.forEach(function (elemt, item) {\n          var key = \"comb\" + (item + 1);\n          options.push(React.createElement(\"option\", {\n            key: key,\n            value: elemt,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, elemt));\n        });\n      } catch (e) {}\n\n      return options;\n    }\n  }, {\n    key: \"formCombinations\",\n    value: function formCombinations(val) {\n      var html = [];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Combinaci\\xF3n: \"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Ingrese el nombre de la Combinaci\\xF3n\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Tabla\"));\n    }\n  }, {\n    key: \"typeAux\",\n    value: function typeAux(cell, row) {\n      var key = row._id;\n      if (row.type == \"color\") return React.createElement(Input, {\n        key: key,\n        type: \"color\",\n        name: \"color\",\n        id: \"exampleColor\",\n        placeholder: \"color placeholder\",\n        defaultValue: \"#ff0000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n      if (row.type == \"text\") return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, row.aux);\n    }\n  }, {\n    key: \"dataForm\",\n    value: function dataForm() {\n      var valOption = window.document.getElementById(\"combinacion\").value;\n      var combinations = [];\n      this.props.obj.listCombination.forEach(function (val, item) {\n        if (val.label == valOption) combinations.push(val);\n      });\n\n      if (this.props.obj.listCombination.length > 0) {\n        this.setState({\n          atributes: combinations\n        });\n      }\n    }\n  }, {\n    key: \"chageType\",\n    value: function chageType() {\n      var valType = window.document.getElementById(\"typefeature\").value;\n      var valAux = window.document.getElementById(\"featureaux\").value;\n      this.setState({\n        auxType: valType,\n        auxValue: \"ddd\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Editar o Crear un nuevo producto\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"hola mundo\"))))));\n    }\n  }]);\n\n  return Eidts;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    obj: state.DaoProducts\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Eidts);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/Edit.js"],"names":["React","Component","connect","BreadcrumbItem","Breadcrumb","Row","Label","InputGroupAddon","InputGroup","InputGroupText","Col","Button","Input","Card","CardHeader","CardBody","BootstrapTable","TableHeaderColumn","DbCrud","set","Eidts","props","state","atributes","_id","label","auxType","auxValue","auxValColor","auxValText","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","loadReducer","push","obj","totalcombinations","forEach","elemt","item","key","e","val","html","cell","row","type","aux","valOption","window","document","getElementById","value","combinations","listCombination","length","setState","valType","valAux","mapStateToProps","DaoProducts","mapDispatchToProps","dispatch","colletion","body","dbMLoad"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BreadcrumbItem, Breadcrumb, Row, Label, InputGroupAddon, InputGroup, InputGroupText, Col, Button, Input, Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\nimport { set } from 'core-js/fn/dict';\n \n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass Eidts extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n       atributes:[{\n           _id:\"0\",\n           label:\"\"\n       }],\n       auxType:\"text\",\n       auxValue:\"\",\n       auxValColor:\"\",\n       auxValText:\"\",\n    }\n\n    this.options = {\n        sortIndicator: true,\n        hideSizePerPage: true,\n        paginationSize: 5,\n        hidePageListOnlyOnePage: true,\n        alwaysShowAllBtns: false,\n        withFirstAndLast: false\n      }\n\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    this.props.loadReducer(\"loadCombinations\", \"combinations/\", {});\n  } \n \n  option(){\n      var options = [];\n      try{\n        options.push(<option key=\"comb0\" value=\"0\">Combinaciones</option>)\n        this.props.obj.totalcombinations.label.forEach((elemt, item) => {\n           var key = \"comb\"+(item+1);\n           options.push(<option key={key} value={elemt}>{elemt}</option>)\n        });\n      }catch(e){}\n      return options;\n  }\n\n  formCombinations(val){\n    var html = [];\n    return(\n        <Row>\n            <Col>\n                <Row>\n                    <Col>\n                        <Label>Combinación: </Label>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText><i className=\"fa fa-calendar\"></i></InputGroupText>\n                            </InputGroupAddon>\n                            <Input type=\"text\" id=\"name\" placeholder=\"Ingrese el nombre de la Combinación\" required />\n                        </InputGroup>\n                    </Col>\n                </Row>\n            </Col>\n            <Col>\n                Tabla\n            </Col>\n        </Row>\n    )\n  }\n\n  typeAux(cell, row){\n    var key = row._id;\n    if(row.type == \"color\") return (\n        <Input\n            key={key}\n            type=\"color\"\n            name=\"color\"\n            id=\"exampleColor\"\n            placeholder=\"color placeholder\"\n            defaultValue=\"#ff0000\"\n        />\n    );\n    if(row.type == \"text\") return <div>{row.aux}</div>;\n   }\n\n  dataForm(){\n    var valOption = window.document.getElementById(\"combinacion\").value;\n    var combinations =  [];\n    this.props.obj.listCombination.forEach((val, item) => {\n        if(val.label == valOption) combinations.push(val);\n    })\n    if(this.props.obj.listCombination.length > 0){\n        this.setState({\n            atributes:combinations\n        });\n    }\n  }\n\n  chageType(){\n     var valType = window.document.getElementById(\"typefeature\").value;\n     var valAux = window.document.getElementById(\"featureaux\").value;\n     this.setState({\n        auxType:valType,\n        auxValue:\"ddd\"\n     })\n  }\n\n  render() {\n\n    return (\n\n      <Row>\n        <Col xs=\"12\" md=\"12\">\n            <Row>\n                <Col xs=\"12\" md=\"12\">\n                    <Card>\n                        <CardHeader>\n                            Editar o Crear un nuevo producto\n                        </CardHeader>\n                        <CardBody>\n                            hola mundo\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Col>\n      </Row>\n       \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    obj:state.DaoProducts\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Eidts);\n"]},"metadata":{},"sourceType":"module"}