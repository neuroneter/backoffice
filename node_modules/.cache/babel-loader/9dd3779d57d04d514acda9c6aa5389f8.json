{"ast":null,"code":"import _defineProperty from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Label, Input, Col, Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css'; //import DbCrud from '../../../Pojo/DbCrud';\n\nimport Data from './Enumerators/Data';\nvar objStatus = Data.StatusOrder;\nvar objStores = Data.Stores;\nvar flat = true;\nvar UrlServerless = \"https://us-central1-serverless-278902.cloudfunctions.net/serverless\";\nvar UrlLocal = \"http://localhost:5555\";\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar OrdersList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrdersList, _Component);\n\n  function OrdersList(props) {\n    var _this;\n\n    _classCallCheck(this, OrdersList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrdersList).call(this, props));\n    _this.state = {};\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false //this.toggleDanger = this.toggleDanger.bind(this);\n\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(OrdersList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (flat) {\n        flat = false;\n        this.props.loadReducer('loadOrders', \"orders/find\");\n        var queryUrl = UrlServerless + \"/group\";\n        var data = {\n          \"pag\": \"1\",\n          \"limit\": \"100\",\n          \"filFile\": \"group\",\n          \"filValue\": \"StatusOrder\",\n          \"sorts\": [{\n            \"file\": \"code\",\n            \"value\": 1\n          }]\n        };\n        var requestOptions = {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        }; // Where we're fetching data from\n\n        fetch(queryUrl, requestOptions).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          _this2.setState({\n            Status: \"Hola\"\n          });\n        }) // Catch any errors we hit and update the app\n        .catch(function (error) {\n          console.log(\"No se pudo hacer conexion a Ordenes\" + error);\n        });\n      }\n    } //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n\n  }, {\n    key: \"callEdit\",\n    value: function callEdit(row) {\n      this.props.history.push({\n        pathname: '/Geo/CountriesAdd',\n        row: row\n      });\n    } //Cambia el valor a visible del mensaje de alerta \n    //guarda el identificador de la fila que sera afectada \n\n  }, {\n    key: \"toggleDanger\",\n    value: function toggleDanger(row) {\n      this.setState({\n        danger: !this.state.danger,\n        tmpRow: row.documentId\n      });\n    } //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n\n  }, {\n    key: \"editFormatter\",\n    value: function editFormatter(cell, row) {\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.callEdit.bind(this, row),\n        size: \"sm\",\n        className: \"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.toggleDanger.bind(this, row),\n        size: \"sm\",\n        className: \"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Lista Ordenes\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/AllenFang/react-bootstrap-table\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Aprende\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Form, {\n        action: \"\",\n        method: \"post\",\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"4\",\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"objStatus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, objStatus.map(function (e, key) {\n        return React.createElement(\"option\", {\n          value: e.value,\n          disabled: e.disabled,\n          selected: e.selected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, e.label);\n      }))), React.createElement(Col, {\n        xs: \"4\",\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"objStores\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, objStores.map(function (e, key) {\n        return React.createElement(\"option\", {\n          value: e.value,\n          disabled: e.disabled,\n          selected: e.selected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, e.label);\n      }))), React.createElement(Col, {\n        xs: \"4\",\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa icon-layers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"input1-group1\",\n        name: \"input1-group1\",\n        placeholder: \"# Orden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })))))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa icon-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), \"\\xA0Crear Estado\"), React.createElement(Button, (_React$createElement = {\n        className: \"float-right\",\n        color: \"secondary\"\n      }, _defineProperty(_React$createElement, \"className\", \"float-right\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"i\", {\n        className: \"fa icon-arrow-left-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), \"\\xA0Regresar\"), React.createElement(BootstrapTable, {\n        data: this.props.obj,\n        striped: true,\n        hover: true,\n        pagination: true,\n        search: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"status\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Estado\"), React.createElement(TableHeaderColumn, {\n        width: '10%',\n        dataField: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Orden\"), React.createElement(TableHeaderColumn, {\n        dataField: \"reference\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Referencia\"), React.createElement(TableHeaderColumn, {\n        width: '30%',\n        dataField: \"skuName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Producto\"), React.createElement(TableHeaderColumn, {\n        dataField: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Ciudad\"), React.createElement(TableHeaderColumn, {\n        dataField: \"guide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Guia\"), React.createElement(TableHeaderColumn, {\n        dataField: \"invoice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Factura\"), React.createElement(TableHeaderColumn, {\n        dataField: \"unit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Procesado\"), React.createElement(TableHeaderColumn, {\n        dataField: \"store\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Tienda\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.editFormatter.bind(this),\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Accion\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"_id\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Identifier ID\")))));\n    }\n  }]);\n\n  return OrdersList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return {\n    obj: state.DaoOrders,\n    test: function test() {\n      console.log(\"test correcto\");\n    }\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: function loadReducer(type, colletion) {\n      var queryUrl = UrlServerless + \"/\" + colletion;\n      var data = {\n        \"pag\": \"1\",\n        \"limit\": \"3\",\n        \"filFile\": \"customer\",\n        \"filValue\": \"s\",\n        \"sorts\": [{\n          \"file\": \"customer\",\n          \"value\": 1\n        }, {\n          \"file\": \"skuName\",\n          \"value\": -1\n        }]\n      };\n      var requestOptions = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }; // Where we're fetching data from\n\n      fetch(queryUrl, requestOptions).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        dispatch({\n          type: type,\n          data: data\n        });\n      }) // Catch any errors we hit and update the app\n      .catch(function (error) {\n        console.log(\"No se pudo hacer conexion a Ordenes\" + error);\n      });\n    },\n    deleteReducer: function deleteReducer(type, colletion, component, documentId) {//DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n    editFileReducer: function editFileReducer(type, colletion, component, documentId, fileEdit, newFileEdit) {//DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js"],"names":["React","Component","connect","Row","InputGroup","InputGroupAddon","InputGroupText","Form","FormGroup","Label","Input","Col","Card","CardHeader","CardBody","Modal","ModalHeader","ModalBody","ModalFooter","Button","ButtonGroup","AppSwitch","BootstrapTable","TableHeaderColumn","Data","objStatus","StatusOrder","objStores","Stores","flat","UrlServerless","UrlLocal","OrdersList","props","state","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","loadReducer","queryUrl","data","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","setState","Status","catch","error","console","log","row","history","push","pathname","danger","tmpRow","documentId","cell","callEdit","bind","toggleDanger","map","e","key","value","disabled","selected","label","obj","editFormatter","mapStateToProps","DaoOrders","test","mapDispatchToProps","dispatch","type","colletion","deleteReducer","component","editFileReducer","fileEdit","newFileEdit"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAaC,UAAb,EAAyBC,eAAzB,EAA0CC,cAA1C,EAA0DC,IAA1D,EAAgEC,SAAhE,EAA2EC,KAA3E,EAAkFC,KAAlF,EAAyFC,GAAzF,EAA8FC,IAA9F,EAAoGC,UAApG,EAAgHC,QAAhH,EAA0HC,KAA1H,EAAiIC,WAAjI,EAA8IC,SAA9I,EAAyJC,WAAzJ,EAAsKC,MAAtK,EAA8KC,WAA9K,QAAiM,YAAjM;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,uBAAlD;AACA,OAAO,+DAAP,C,CACA;;AAGA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,IAAMC,SAAS,GAAGD,IAAI,CAACE,WAAvB;AACA,IAAMC,SAAS,GAAGH,IAAI,CAACI,MAAvB;AAEA,IAAIC,IAAI,GAAG,IAAX;AAEA,IAAIC,aAAa,GAAG,qEAApB;AACA,IAAIC,QAAQ,GAAG,uBAAf;AAEA;;;;IAGMC,U;;;;;AAEJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AACA,UAAKC,OAAL,GAAe;AACbC,MAAAA,aAAa,EAAE,IADF;AAEbC,MAAAA,eAAe,EAAE,IAFJ;AAGbC,MAAAA,cAAc,EAAE,CAHH;AAIbC,MAAAA,uBAAuB,EAAE,IAJZ;AAKbC,MAAAA,iBAAiB,EAAE,KALN;AAMbC,MAAAA,gBAAgB,EAAE,KANL,CAQf;;AARe,KAAf;AAHiB;AAYlB;AAED;;;;;wCACoB;AAAA;;AAClB,UAAIZ,IAAJ,EAAU;AACRA,QAAAA,IAAI,GAAG,KAAP;AACA,aAAKI,KAAL,CAAWS,WAAX,CAAuB,YAAvB,EAAqC,aAArC;AAEA,YAAIC,QAAQ,GAAGb,aAAa,GAAC,QAA7B;AACA,YAAIc,IAAI,GAAG;AACT,iBAAM,GADG;AAET,mBAAQ,KAFC;AAGT,qBAAU,OAHD;AAIT,sBAAY,aAJH;AAKT,mBAAQ,CACN;AACE,oBAAO,MADT;AAEE,qBAAQ;AAFV,WADM;AALC,SAAX;AAaA,YAAMC,cAAc,GAAG;AACrBC,UAAAA,MAAM,EAAE,MADa;AAErBC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAFY;AAKrBC,UAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALgB,SAAvB,CAlBQ,CA0BR;;AACAO,QAAAA,KAAK,CAACR,QAAD,EAAUE,cAAV,CAAL,CACCO,IADD,CACM,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SADd,EAECF,IAFD,CAEM,UAAAR,IAAI,EAAI;AACZ,UAAA,MAAI,CAACW,QAAL,CAAc;AACZC,YAAAA,MAAM,EAAE;AADI,WAAd;AAGD,SAND,EAOA;AAPA,SAQCC,KARD,CAQO,UAAUC,KAAV,EAAiB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCF,KAApD;AACH,SAVD;AAYD;AACF,K,CAED;;;;6BACSG,G,EAAK;AACZ,WAAK5B,KAAL,CAAW6B,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,QAAAA,QAAQ,EAAE,mBADY;AAEtBH,QAAAA,GAAG,EAAEA;AAFiB,OAAxB;AAID,K,CAED;AACA;;;;iCACaA,G,EAAK;AAChB,WAAKN,QAAL,CAAc;AACZU,QAAAA,MAAM,EAAE,CAAC,KAAK/B,KAAL,CAAW+B,MADR;AAEZC,QAAAA,MAAM,EAAEL,GAAG,CAACM;AAFA,OAAd;AAID,K,CAGD;;;;kCACcC,I,EAAMP,G,EAAK;AACvB,aACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKQ,QAAL,CAAcC,IAAd,CAAmB,IAAnB,EAAyBT,GAAzB,CAAjB;AAAgD,QAAA,IAAI,EAAC,IAArD;AAA0D,QAAA,SAAS,EAAC,+DAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKU,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,EAA6BT,GAA7B,CAAjB;AAAoD,QAAA,IAAI,EAAC,IAAzD;AAA8D,QAAA,SAAS,EAAC,8DAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF;AAUD;;;6BAEQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,oDAAR;AAA6D,QAAA,GAAG,EAAC,qBAAjE;AAAuF,QAAA,MAAM,EAAC,QAA9F;AAAuG,QAAA,SAAS,EAAC,oBAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CAFF,CADF,EASE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAC,EAAb;AAAgB,QAAA,MAAM,EAAC,MAAvB;AAA8B,QAAA,SAAS,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,QAA1B;AAAmC,QAAA,EAAE,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCpC,SAAS,CAAC+C,GAAV,CAAc,UAACC,CAAD,EAAIC,GAAJ,EAAY;AACvB,eAAO;AAAQ,UAAA,KAAK,EAAED,CAAC,CAACE,KAAjB;AAAwB,UAAA,QAAQ,EAAEF,CAAC,CAACG,QAApC;AAA8C,UAAA,QAAQ,EAAEH,CAAC,CAACI,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqEJ,CAAC,CAACK,KAAvE,CAAP;AACH,OAFA,CADD,CADF,CADF,EAQE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,QAA1B;AAAmC,QAAA,EAAE,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCnD,SAAS,CAAC6C,GAAV,CAAc,UAACC,CAAD,EAAIC,GAAJ,EAAY;AACvB,eAAO;AAAQ,UAAA,KAAK,EAAED,CAAC,CAACE,KAAjB;AAAwB,UAAA,QAAQ,EAAEF,CAAC,CAACG,QAApC;AAA8C,UAAA,QAAQ,EAAEH,CAAC,CAACI,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqEJ,CAAC,CAACK,KAAvE,CAAP;AACH,OAFA,CADD,CADF,CARF,EAeE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAME,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,eAAtB;AAAsC,QAAA,IAAI,EAAC,eAA3C;AAA2D,QAAA,WAAW,EAAC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADJ,CAfF,CADF,CADA,CADF,CAFF,CATF,EA8CE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB,qBADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,KAAK,EAAC;AAAtC,4DAA4D,aAA5D;AAAA;AAAA;AAAA,wFACE;AAAG,QAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,iBAFF,EAKE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAK7C,KAAL,CAAW8C,GAAjC;AAAsC,QAAA,OAAO,MAA7C;AAA8C,QAAA,KAAK,MAAnD;AAAoD,QAAA,UAAU,MAA9D;AAA+D,QAAA,MAAM,MAArE;AAAsE,QAAA,OAAO,EAAE,KAAK5C,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,QAAQ,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,KAA1B;AAAiC,QAAA,SAAS,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,EAIE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,KAA1B;AAAiC,QAAA,SAAS,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAOE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAQE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,EASE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,EAUE,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAE,KAAK6C,aAAL,CAAmBV,IAAnB,CAAwB,IAAxB,CAA/B;AAA8D,QAAA,SAAS,EAAC,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAWE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,IAA1B;AAAgC,QAAA,SAAS,EAAC,KAA1C;AAAgD,QAAA,MAAM,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXF,CALF,CA9CF,CADF,CADF;AAsED;;;;EAnKsBrE,S;;AAuKzB,IAAMgF,eAAe,GAAG,SAAlBA,eAAkB,CAAC/C,KAAD,EAAW;AACjC;AACA,SAAM;AAEJ6C,IAAAA,GAAG,EAAC7C,KAAK,CAACgD,SAFN;AAGJC,IAAAA,IAAI,EAAE,gBAAM;AACVxB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AALG,GAAN;AAOD,CATD;;AAWA,IAAMwB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACL;AACA;AACA;AACA;AACA3C,IAAAA,WAAW,EAAE,qBAAC4C,IAAD,EAAOC,SAAP,EAAqB;AAChC,UAAI5C,QAAQ,GAAGb,aAAa,GAAC,GAAd,GAAkByD,SAAjC;AACA,UAAI3C,IAAI,GAAG;AACP,eAAM,GADC;AAEP,iBAAQ,GAFD;AAGP,mBAAU,UAHH;AAIP,oBAAY,GAJL;AAKP,iBAAQ,CACN;AACE,kBAAO,UADT;AAEE,mBAAQ;AAFV,SADM,EAIJ;AACA,kBAAO,SADP;AAEA,mBAAQ,CAAC;AAFT,SAJI;AALD,OAAX;AAgBA,UAAMC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFU;AAKnBC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALc,OAAvB,CAlBgC,CA0BhC;;AACAO,MAAAA,KAAK,CAACR,QAAD,EAAUE,cAAV,CAAL,CACCO,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAR,IAAI,EAAI;AACVyC,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAEA,IAAR;AAAc1C,UAAAA,IAAI,EAAEA;AAApB,SAAD,CAAR;AACH,OAJD,EAKA;AALA,OAMCa,KAND,CAMO,UAAUC,KAAV,EAAiB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCF,KAApD;AACH,OARD;AASD,KAzCI;AA2CL8B,IAAAA,aAAa,EAAE,uBAACF,IAAD,EAAOC,SAAP,EAAkBE,SAAlB,EAA6BtB,UAA7B,EAA4C,CACzD;AACD,KA7CI;AA8CLuB,IAAAA,eAAe,EAAE,yBAACJ,IAAD,EAAOC,SAAP,EAAkBE,SAAlB,EAA6BtB,UAA7B,EAAyCwB,QAAzC,EAAmDC,WAAnD,EAAmE,CAClF;AACD;AAhDI,GAAP;AAkDD,CAnDD;;AAqDA,eAAe1F,OAAO,CAAC+E,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpD,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row,InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Label, Input, Col, Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\n//import DbCrud from '../../../Pojo/DbCrud';\n\n\nimport Data from './Enumerators/Data';\nconst objStatus = Data.StatusOrder;\nconst objStores = Data.Stores;\n\nvar flat = true;\n\nvar UrlServerless = \"https://us-central1-serverless-278902.cloudfunctions.net/serverless\";\nvar UrlLocal = \"http://localhost:5555\";\n\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass OrdersList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    }\n    //this.toggleDanger = this.toggleDanger.bind(this);\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    if (flat) {\n      flat = false;\n      this.props.loadReducer('loadOrders', \"orders/find\");\n      \n      var queryUrl = UrlServerless+\"/group\";\n      var data = {\n        \"pag\":\"1\",\n        \"limit\":\"100\",\n        \"filFile\":\"group\",\n        \"filValue\": \"StatusOrder\",\n        \"sorts\":[\n          {\n            \"file\":\"code\",\n            \"value\":1\n          }\n        ]\n      }\n\n      const requestOptions = {\n        method: 'POST',\n        headers: { \n            \"Content-Type\": \"application/json\"\n        },\n        body:JSON.stringify(data)\n      };\n\n      // Where we're fetching data from\n      fetch(queryUrl,requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          Status: \"Hola\"\n        });\n      })\n      // Catch any errors we hit and update the app\n      .catch(function (error) {\n          console.log(\"No se pudo hacer conexion a Ordenes\" + error);\n      });\n\n    }\n  }\n\n  //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n  callEdit(row) {\n    this.props.history.push({\n      pathname: '/Geo/CountriesAdd',\n      row: row\n    })\n  }\n\n  //Cambia el valor a visible del mensaje de alerta \n  //guarda el identificador de la fila que sera afectada \n  toggleDanger(row) {\n    this.setState({\n      danger: !this.state.danger,\n      tmpRow: row.documentId\n    });\n  }\n  \n\n  //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n  editFormatter(cell, row) {\n    return (\n      <ButtonGroup>\n        <Button onClick={this.callEdit.bind(this, row)} size=\"sm\" className=\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-pencil\"></i>\n        </Button>\n        <Button onClick={this.toggleDanger.bind(this, row)} size=\"sm\" className=\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-trash\"></i>\n        </Button>\n      </ButtonGroup>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardHeader>\n            Lista Ordenes\n            <div className=\"card-header-actions\">\n              <a href=\"https://github.com/AllenFang/react-bootstrap-table\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"card-header-action\">\n                <small className=\"text-muted\">Aprende</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n\n            <Form action=\"\" method=\"post\" className=\"form-horizontal\">\n              <FormGroup row>\n              <Col xs=\"12\" md=\"12\">\n                <Row>\n                  <Col xs=\"4\" md=\"4\">\n                    <Input type=\"select\" name=\"select\" id=\"objStatus\">\n                    {objStatus.map((e, key) => {\n                        return <option value={e.value} disabled={e.disabled} selected={e.selected}>{e.label}</option>;\n                    })}\n                    </Input>\n                  </Col>\n                  <Col xs=\"4\" md=\"4\">\n                    <Input type=\"select\" name=\"select\" id=\"objStores\">\n                    {objStores.map((e, key) => {\n                        return <option value={e.value} disabled={e.disabled} selected={e.selected}>{e.label}</option>;\n                    })}\n                    </Input>\n                  </Col>\n                  <Col xs=\"4\" md=\"4\">\n                      <InputGroup>\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa icon-layers\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" id=\"input1-group1\" name=\"input1-group1\" placeholder=\"# Orden\" />\n                      </InputGroup>\n                    </Col>\n                </Row>\n              </Col>\n              </FormGroup>\n            </Form>\n\n          </CardBody>\n\n          <CardBody>\n            <Button color=\"primary\"><i className=\"fa icon-plus\"></i>&nbsp;Crear Estado</Button>\n            <Button className=\"float-right\" color=\"secondary\" className=\"float-right\">\n              <i className=\"fa icon-arrow-left-circle\"></i>&nbsp;Regresar\n            </Button>\n            <BootstrapTable data={this.props.obj} striped hover pagination search options={this.options}>\n              <TableHeaderColumn dataField='status' dataSort>Estado</TableHeaderColumn>\n              <TableHeaderColumn width={'10%'} dataField='order' >Orden</TableHeaderColumn>\n              <TableHeaderColumn dataField='reference' >Referencia</TableHeaderColumn>\n              <TableHeaderColumn width={'30%'} dataField='skuName' >Producto</TableHeaderColumn>\n              <TableHeaderColumn dataField='city' >Ciudad</TableHeaderColumn>\n              <TableHeaderColumn dataField='guide' >Guia</TableHeaderColumn>\n              <TableHeaderColumn dataField='invoice' >Factura</TableHeaderColumn>\n              <TableHeaderColumn dataField='unit' >Procesado</TableHeaderColumn>\n              <TableHeaderColumn dataField='store' >Tienda</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.editFormatter.bind(this)} dataAlign='right' >Accion</TableHeaderColumn>\n              <TableHeaderColumn isKey={true} dataField='_id' hidden>Identifier ID</TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return{\n\n    obj:state.DaoOrders,\n    test: () => {\n      console.log(\"test correcto\");\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: (type, colletion) => {\n      var queryUrl = UrlServerless+\"/\"+colletion;\n      var data = {\n          \"pag\":\"1\",\n          \"limit\":\"3\",\n          \"filFile\":\"customer\",\n          \"filValue\": \"s\",\n          \"sorts\":[\n            {\n              \"file\":\"customer\",\n              \"value\":1\n            },{\n              \"file\":\"skuName\",\n              \"value\":-1\n            }\n          ]\n      }\n\n      const requestOptions = {\n          method: 'POST',\n          headers: { \n              \"Content-Type\": \"application/json\"\n          },\n          body:JSON.stringify(data)\n      };\n\n      // Where we're fetching data from\n      fetch(queryUrl,requestOptions)\n      .then(response => response.json())\n      .then(data => {\n          dispatch({ type: type, data: data }) \n      })\n      // Catch any errors we hit and update the app\n      .catch(function (error) {\n          console.log(\"No se pudo hacer conexion a Ordenes\" + error);\n      });\n    },\n\n    deleteReducer: (type, colletion, component, documentId) => { \n      //DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n    editFileReducer: (type, colletion, component, documentId, fileEdit, newFileEdit) => { \n      //DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);\n"]},"metadata":{},"sourceType":"module"}