{"ast":null,"code":"import _toConsumableArray from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { PHOTOS_FETCHED, PHOTOS_UPLOADED, DELETE_UPLOADED_PHOTO } from './utils/Constants';\n\nvar PhotosListReducer = function PhotosListReducer() {\n  var photos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case PHOTOS_FETCHED:\n      return _toConsumableArray(action.photos);\n\n    case PHOTOS_UPLOADED:\n      {\n        return [].concat(_toConsumableArray(action.photos), _toConsumableArray(photos));\n      }\n\n    case DELETE_UPLOADED_PHOTO:\n      return photos.filter(function (photo) {\n        return photo.public_id !== action.publicId;\n      });\n\n    default:\n      return _toConsumableArray(photos);\n  }\n};\n\nexport default PhotosListReducer;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/Reducers/PhotosListReducer.js"],"names":["PHOTOS_FETCHED","PHOTOS_UPLOADED","DELETE_UPLOADED_PHOTO","PhotosListReducer","photos","action","type","filter","photo","public_id","publicId"],"mappings":";AAAA,SAASA,cAAT,EAAyBC,eAAzB,EAA0CC,qBAA1C,QAAuE,mBAAvE;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAyB;AAAA,MAAxBC,MAAwB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,cAAL;AACI,gCAAWK,MAAM,CAACD,MAAlB;;AACJ,SAAKH,eAAL;AAAsB;AAClB,4CAAWI,MAAM,CAACD,MAAlB,sBAA6BA,MAA7B;AACH;;AACD,SAAKF,qBAAL;AACI,aAAOE,MAAM,CAACG,MAAP,CACH,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACC,SAAN,KAAoBJ,MAAM,CAACK,QAA/B;AAAA,OADF,CAAP;;AAGJ;AACI,gCAAWN,MAAX;AAXR;AAaH,CAdD;;AAgBA,eAAeD,iBAAf","sourcesContent":["import { PHOTOS_FETCHED, PHOTOS_UPLOADED, DELETE_UPLOADED_PHOTO } from './utils/Constants';\n\nconst PhotosListReducer = (photos = [], action) => {\n    switch (action.type) {\n        case PHOTOS_FETCHED:\n            return [...action.photos];\n        case PHOTOS_UPLOADED: {\n            return [...action.photos, ...photos];\n        }\n        case DELETE_UPLOADED_PHOTO:\n            return photos.filter(\n                photo => photo.public_id !== action.publicId\n            );\n        default:\n            return [...photos];\n    }\n};\n\nexport default PhotosListReducer;\n"]},"metadata":{},"sourceType":"module"}