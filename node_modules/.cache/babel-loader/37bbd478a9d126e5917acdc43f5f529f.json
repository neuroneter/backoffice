{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/Edit.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Row, Form, FormGroup, CardHeader, Col, CardBody, Card } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nvar flat = true;\n\nvar Edit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Edit, _Component);\n\n  function Edit(props) {\n    var _this;\n\n    _classCallCheck(this, Edit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Edit).call(this, props));\n\n    _this.onFormSubmit = function (e) {\n      e.preventDefault();\n      var target = e.target;\n      var tmpfFile = \"\";\n      var tmpfValue = \"\"; //Se selecciona de atras para delante un solo filtro \n\n      if (target.customer.value != \"\") {\n        tmpfFile = \"customer\";\n        tmpfValue = target.customer.value + \"\";\n      } else {\n        if (target.dni.value != \"\") {\n          tmpfFile = \"dni\";\n          tmpfValue = target.dni.value + \"\";\n        } else {\n          if (target.order.value != \"\") {\n            tmpfFile = \"order\";\n            tmpfValue = target.order.value + \"\";\n          } else {\n            if (target.supplier.value != \"0\") {\n              tmpfFile = \"supplier\";\n              tmpfValue = target.supplier.value + \"\";\n            } else {\n              if (target.brand.value != \"0\") {\n                tmpfFile = \"brand\";\n                tmpfValue = e.target.brand.value + \"\";\n              } else {\n                if (target.store.value != \"0\") {\n                  tmpfFile = \"store\";\n                  tmpfValue = e.target.store.value + \"\";\n                } else {\n                  if (target.status.value != \"0\") {\n                    tmpfFile = \"status\";\n                    tmpfValue = e.target.status.value + \"\";\n                    console.log(tmpfValue);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (tmpfValue == \"0\") tmpfValue = \"\"; //Se realiza la solicitud nuevamente para recargar los registros \n\n      _this.props.loadReducer('loadOrders', \"orders/find\", {\n        pag: 1,\n        limit: 5,\n        filFile: tmpfFile,\n        filValue: tmpfValue,\n        sorts: _this.state.orders.sorts\n      }); //Actualizamos el esta con los valores de filtros seleccionados esto por si se utiliza la \n      //paginacion por lo que se requiere que el estado mantenga el filtro de campo \n\n\n      _this.setState({\n        orders: {\n          pag: 1,\n          limit: 5,\n          filFile: tmpfFile,\n          filValue: tmpfValue,\n          sorts: _this.state.orders.sorts\n        }\n      });\n    };\n\n    _this.state = {\n      orders: {\n        pag: \"1\",\n        limit: \"20\",\n        filFile: \"order\",\n        filValue: \"\" + _this.props.match.params.Order,\n        sorts: [{\n          file: \"oderDate\",\n          value: 1\n        }]\n      }\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(Edit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (flat) {\n        flat = false;\n        this.props.loadReducer('loadOrders', \"orders/find\", this.state.orders);\n      }\n    }\n  }, {\n    key: \"callList\",\n    value: function callList() {\n      this.props.history.push('/Orders/List');\n    }\n  }, {\n    key: \"callSave\",\n    value: function callSave(e) {\n      e.preventDefault(); //this.props.update('updateGeo', \"geo\", \"CountriesList\", this, this.state.documentId);\n\n      this.props.history.push('/Orders/List');\n    }\n  }, {\n    key: \"formOrders\",\n    value: function formOrders() {\n      var nodes = this.props.obj.listOrders;\n      var formOrders = [];\n      var onSubmit = this.onFormSubmit.bind();\n      var flag = true;\n      Object.keys(nodes).forEach(function (key) {\n        var keyname = \"order\" + key;\n\n        if (flag) {\n          flag = false;\n          formOrders.push(React.createElement(CardBody, {\n            key: \"headOrder\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(Col, {\n            xs: \"4\",\n            md: \"4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, \"Orden: \", nodes[key].order), React.createElement(Col, {\n            xs: \"4\",\n            md: \"4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, \"Fecha: \", nodes[key].date.substr(0, 10)), React.createElement(Col, {\n            xs: \"4\",\n            md: \"4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"Cliente: \", nodes[key].customer), React.createElement(Col, {\n            xs: \"4\",\n            md: \"4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"DNI: \", nodes[key].dni), React.createElement(Col, {\n            xs: \"4\",\n            md: \"4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, \"Celular: \", nodes[key].phone), React.createElement(Col, {\n            xs: \"4\",\n            md: \"4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"Departamento: \", nodes[key].state), React.createElement(Col, {\n            xs: \"4\",\n            md: \"4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, \"Ciudad: \", nodes[key].city), React.createElement(Col, {\n            xs: \"4\",\n            md: \"4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, \"Direcci\\xF3n: \", nodes[key].address, \" \", nodes[key].addAddress, \" - \", nodes[key].neighborhood))));\n        }\n\n        formOrders.push(React.createElement(Row, {\n          key: keyname,\n          xs: \"12\",\n          md: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(Form, {\n          action: \"\",\n          onSubmit: onSubmit,\n          method: \"post\",\n          className: \"form-horizontal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          row: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: \"12\",\n          md: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: \"2\",\n          md: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"Orden: \", nodes[key].order), React.createElement(Col, {\n          xs: \"2\",\n          md: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"Fecha: \", nodes[key].date.substr(0, 10)), React.createElement(Col, {\n          xs: \"4\",\n          md: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \"Cliente: \", nodes[key].customer))))))));\n      });\n      return formOrders;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.formOrders()));\n    }\n  }]);\n\n  return Edit;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return {\n    obj: state.DaoOrders\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/Edit.js"],"names":["connect","React","Component","Row","Form","FormGroup","CardHeader","Col","CardBody","Card","BootstrapTable","TableHeaderColumn","DbCrud","flat","Edit","props","onFormSubmit","e","preventDefault","target","tmpfFile","tmpfValue","customer","value","dni","order","supplier","brand","store","status","console","log","loadReducer","pag","limit","filFile","filValue","sorts","state","orders","setState","match","params","Order","file","history","push","nodes","obj","listOrders","formOrders","onSubmit","bind","flag","Object","keys","forEach","key","keyname","date","substr","phone","city","address","addAddress","neighborhood","mapStateToProps","DaoOrders","mapDispatchToProps","dispatch","type","colletion","body","dbMLoad"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Row, Form, FormGroup, CardHeader, Col, CardBody, Card } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\n\nvar flat = true;\n\nclass Edit extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: {\n        pag:\"1\",\n        limit:\"20\",\n        filFile:\"order\",\n        filValue: \"\"+this.props.match.params.Order,\n        sorts:[\n          {\n            file:\"oderDate\",\n            value:1\n          }\n        ]\n      }\n    }\n\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    if (flat) {\n      flat = false;\n      this.props.loadReducer('loadOrders', \"orders/find\",this.state.orders);\n    }\n  }\n\n  callList() { \n    this.props.history.push('/Orders/List'); \n  }\n\n  callSave(e) {\n    e.preventDefault();\n    //this.props.update('updateGeo', \"geo\", \"CountriesList\", this, this.state.documentId);\n    this.props.history.push('/Orders/List');\n  }\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    const target = e.target;\n    var tmpfFile = \"\";\n    var tmpfValue = \"\";\n\n    //Se selecciona de atras para delante un solo filtro \n    if(target.customer.value != \"\"){\n      tmpfFile = \"customer\";\n      tmpfValue = target.customer.value+\"\";\n    }else{\n      if(target.dni.value != \"\"){\n        tmpfFile = \"dni\";\n        tmpfValue = target.dni.value+\"\";\n      }else{\n        if(target.order.value != \"\"){\n          tmpfFile = \"order\";\n          tmpfValue = target.order.value+\"\";\n        }else{\n          if(target.supplier.value != \"0\"){\n            tmpfFile = \"supplier\";\n            tmpfValue = target.supplier.value+\"\";\n          }else{\n            if(target.brand.value != \"0\"){\n              tmpfFile = \"brand\";\n              tmpfValue = e.target.brand.value+\"\";\n            }else{\n              if(target.store.value != \"0\"){\n                tmpfFile = \"store\";\n                tmpfValue = e.target.store.value+\"\";\n              }else{\n                if(target.status.value != \"0\"){\n                  tmpfFile = \"status\";\n                  tmpfValue = e.target.status.value+\"\";\n                  console.log(tmpfValue);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if(tmpfValue == \"0\") tmpfValue = \"\";\n\n    //Se realiza la solicitud nuevamente para recargar los registros \n    this.props.loadReducer('loadOrders', \"orders/find\", {\n      pag:1,\n      limit:5,\n      filFile:tmpfFile,\n      filValue:tmpfValue,\n      sorts:this.state.orders.sorts\n    });\n    \n    //Actualizamos el esta con los valores de filtros seleccionados esto por si se utiliza la \n    //paginacion por lo que se requiere que el estado mantenga el filtro de campo \n    this.setState({\n        orders:{\n          pag:1,\n          limit:5,\n          filFile:tmpfFile,\n          filValue:tmpfValue,\n          sorts:this.state.orders.sorts\n        }\n      }\n    );\n  }\n\n  formOrders(){\n    const nodes = this.props.obj.listOrders;\n    const formOrders = [];\n    const onSubmit = this.onFormSubmit.bind();\n    var flag = true;\n    Object.keys(nodes).forEach(function(key){\n      var keyname = \"order\"+key;\n      if(flag){\n        flag = false;\n        formOrders.push(\n          <CardBody key=\"headOrder\">\n            <Row>\n              <Col xs=\"4\" md=\"4\">Orden: {nodes[key].order}</Col>\n              <Col xs=\"4\" md=\"4\">Fecha: {(nodes[key].date).substr(0,10)}</Col>\n              <Col xs=\"4\" md=\"4\">Cliente: {nodes[key].customer}</Col>\n              <Col xs=\"4\" md=\"4\">DNI: {nodes[key].dni}</Col>\n              <Col xs=\"4\" md=\"4\">Celular: {nodes[key].phone}</Col>\n              <Col xs=\"4\" md=\"4\">Departamento: {nodes[key].state}</Col>\n              <Col xs=\"4\" md=\"4\">Ciudad: {nodes[key].city}</Col>\n              <Col xs=\"4\" md=\"4\">Dirección: {nodes[key].address} {nodes[key].addAddress} - {nodes[key].neighborhood}</Col>\n            </Row>\n          </CardBody>\n        )\n      }\n      formOrders.push(\n          <Row key={keyname} xs=\"12\" md=\"12\">\n            <CardBody>\n              <Form action=\"\" onSubmit={onSubmit} method=\"post\" className=\"form-horizontal\">\n                  <FormGroup row>\n                  <Col xs=\"12\" md=\"12\">\n                      <Row>\n                        <Col xs=\"2\" md=\"2\">Orden: {nodes[key].order}</Col>\n                        <Col xs=\"2\" md=\"2\">Fecha: {(nodes[key].date).substr(0,10)}</Col>\n                        <Col xs=\"4\" md=\"4\">Cliente: {nodes[key].customer}</Col>\n                      </Row>\n                  </Col>\n                  </FormGroup>\n              </Form>\n            </CardBody>\n          </Row>\n      )\n    })\n    return formOrders;\n    \n  }\n\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Card>\n          {this.formOrders()}\n        </Card>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return{\n    obj:state.DaoOrders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);"]},"metadata":{},"sourceType":"module"}