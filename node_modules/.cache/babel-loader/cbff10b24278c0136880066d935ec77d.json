{"ast":null,"code":"import _objectSpread from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/Reducers/utils/PhotoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { openUploadWidget } from './CloudinaryService';\nimport { photosUploaded } from './actions';\nimport Photo from './Photo';\nimport { CloudinaryContext } from 'cloudinary-react';\n\nvar PhotoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PhotoList, _Component);\n\n  function PhotoList() {\n    _classCallCheck(this, PhotoList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PhotoList).apply(this, arguments));\n  }\n\n  _createClass(PhotoList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"photoList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"upload_link\",\n        onClick: this.uploadImageWithCloudinary.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Add photos with Cloudinary File upload\")));\n    }\n  }, {\n    key: \"uploadImageWithCloudinary\",\n    value: function uploadImageWithCloudinary() {\n      var _this = this;\n\n      var uploadOptions = _objectSpread({\n        tags: 'myphotoalbum'\n      }, this.context);\n\n      openUploadWidget(uploadOptions, function (error, photos) {\n        if (!error) {\n          _this.props.onPhotosUploaded(photos);\n        } else {\n          console.log(error);\n        }\n      });\n    }\n  }]);\n\n  return PhotoList;\n}(Component);\n\nPhotoList.contextType = CloudinaryContext.contextType;\nPhotoList.propTypes = {\n  photos: PropTypes.array,\n  onPhotosUploaded: PropTypes.func\n};\nvar PhotoListContainer = connect(function (state) {\n  return {\n    photos: state.photos\n  };\n}, {\n  onPhotosUploaded: photosUploaded\n})(PhotoList);\nObject.assign(PhotoListContainer.contextTypes, PhotoList.contextTypes);\nexport default PhotoListContainer;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/Reducers/utils/PhotoList.js"],"names":["React","Component","connect","PropTypes","openUploadWidget","photosUploaded","Photo","CloudinaryContext","PhotoList","uploadImageWithCloudinary","bind","uploadOptions","tags","context","error","photos","props","onPhotosUploaded","console","log","contextType","propTypes","array","func","PhotoListContainer","state","Object","assign","contextTypes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,iBAAR,QAAgC,kBAAhC;;IAEMC,S;;;;;;;;;;;;;6BACO;AACL,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAA2B,QAAA,OAAO,EAAE,KAAKC,yBAAL,CAA+BC,IAA/B,CAAoC,IAApC,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,CADJ,CADJ;AASH;;;gDAE2B;AAAA;;AACxB,UAAMC,aAAa;AAAKC,QAAAA,IAAI,EAAE;AAAX,SAA8B,KAAKC,OAAnC,CAAnB;;AACAT,MAAAA,gBAAgB,CAACO,aAAD,EAAgB,UAACG,KAAD,EAAQC,MAAR,EAAmB;AAC/C,YAAI,CAACD,KAAL,EAAY;AACR,UAAA,KAAI,CAACE,KAAL,CAAWC,gBAAX,CAA4BF,MAA5B;AACH,SAFD,MAEO;AACHG,UAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH;AACJ,OANe,CAAhB;AAOH;;;;EAtBmBb,S;;AAAlBO,S,CAwBKY,W,GAAcb,iBAAiB,CAACa,W;AAG3CZ,SAAS,CAACa,SAAV,GAAsB;AAClBN,EAAAA,MAAM,EAAEZ,SAAS,CAACmB,KADA;AAElBL,EAAAA,gBAAgB,EAAEd,SAAS,CAACoB;AAFV,CAAtB;AAKA,IAAMC,kBAAkB,GAAGtB,OAAO,CAC9B,UAAAuB,KAAK;AAAA,SAAK;AAAEV,IAAAA,MAAM,EAAEU,KAAK,CAACV;AAAhB,GAAL;AAAA,CADyB,EAE9B;AACIE,EAAAA,gBAAgB,EAAEZ;AADtB,CAF8B,CAAP,CAKzBG,SALyB,CAA3B;AAOAkB,MAAM,CAACC,MAAP,CAAcH,kBAAkB,CAACI,YAAjC,EAA+CpB,SAAS,CAACoB,YAAzD;AAEA,eAAeJ,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { openUploadWidget } from './CloudinaryService';\nimport { photosUploaded } from './actions';\nimport Photo from './Photo';\nimport {CloudinaryContext} from 'cloudinary-react';\n\nclass PhotoList extends Component {\n    render() {\n        return (\n            <div className=\"photoList\">\n                <div className=\"actions\">\n                    <a className=\"upload_link\" onClick={this.uploadImageWithCloudinary.bind(this)} >\n                        Add photos with Cloudinary File upload\n                    </a>\n                </div>\n            </div>\n        );\n    }\n\n    uploadImageWithCloudinary() {\n        const uploadOptions = { tags: 'myphotoalbum', ...this.context };\n        openUploadWidget(uploadOptions, (error, photos) => {\n            if (!error) {\n                this.props.onPhotosUploaded(photos);\n            } else {\n                console.log(error);\n            }\n        });\n    }\n\n    static contextType = CloudinaryContext.contextType;\n}\n\nPhotoList.propTypes = {\n    photos: PropTypes.array,\n    onPhotosUploaded: PropTypes.func,\n};\n\nconst PhotoListContainer = connect(\n    state => ({ photos: state.photos }),\n    {\n        onPhotosUploaded: photosUploaded,\n    }\n)(PhotoList);\n\nObject.assign(PhotoListContainer.contextTypes, PhotoList.contextTypes);\n\nexport default PhotoListContainer;"]},"metadata":{},"sourceType":"module"}