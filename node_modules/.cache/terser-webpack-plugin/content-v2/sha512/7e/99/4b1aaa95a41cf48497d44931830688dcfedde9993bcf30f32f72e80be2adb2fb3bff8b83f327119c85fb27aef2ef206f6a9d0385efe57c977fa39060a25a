{"map":"{\"version\":3,\"sources\":[\"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/Seller/backoffice/src/views/Owner/Geo/CitiesList.js\"],\"names\":[\"List\",\"props\",\"_this\",\"Object\",\"_Users_danielobedortegahernandez_iCloud_Documents_GitHub_Seller_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__\",\"this\",\"_Users_danielobedortegahernandez_iCloud_Documents_GitHub_Seller_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__\",\"_Users_danielobedortegahernandez_iCloud_Documents_GitHub_Seller_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__\",\"call\",\"options\",\"sortIndicator\",\"hideSizePerPage\",\"paginationSize\",\"hidePageListOnlyOnePage\",\"alwaysShowAllBtns\",\"withFirstAndLast\",\"state\",\"documentId\",\"match\",\"params\",\"idDocument\",\"countryObj\",\"statesObj\",\"citiesObj\",\"obj\",\"length\",\"history\",\"push\",\"forEach\",\"country\",\"states\",\"code\",\"Code\",\"cities\",\"bind\",\"_Users_danielobedortegahernandez_iCloud_Documents_GitHub_Seller_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__\",\"error\",\"errorInfo\",\"console\",\"log\",\"cell\",\"row\",\"react__WEBPACK_IMPORTED_MODULE_6___default\",\"a\",\"createElement\",\"reactstrap__WEBPACK_IMPORTED_MODULE_8__\",\"size\",\"className\",\"id\",\"_this2\",\"onClick\",\"editObject\",\"geopoint\",\"latitude\",\"longitude\",\"active\",\"_coreui_react__WEBPACK_IMPORTED_MODULE_9__\",\"variant\",\"color\",\"label\",\"checked\",\"callBackCountry\",\"countryName\",\"callBackState\",\"stateName\",\"href\",\"rel\",\"target\",\"react_bootstrap_table__WEBPACK_IMPORTED_MODULE_10__\",\"data\",\"striped\",\"hover\",\"pagination\",\"search\",\"dataField\",\"dataSort\",\"isKey\",\"dataFormat\",\"dataAlign\",\"editFormatter\",\"Component\",\"connect\",\"DaoGeo\",\"dispatch\",\"dispReducer\",\"type\",\"colletion\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, {Component} from 'react';\\nimport { connect } from 'react-redux';\\nimport {Card, CardHeader, CardBody, Button, ButtonGroup, Row} from 'reactstrap';\\nimport { AppSwitch } from '@coreui/react'\\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\\nimport DbCrud from '../../../Actions/DbCrud';\\n\\nclass List extends Component { \\n\\n  constructor(props) {\\n    super(props);\\n    this.options = {\\n        sortIndicator: true,\\n        hideSizePerPage: true,\\n        paginationSize: 3,\\n        hidePageListOnlyOnePage: true,\\n        alwaysShowAllBtns: false,\\n        withFirstAndLast: false\\n      }\\n    this.state = {\\n        documentId: this.props.match.params.idDocument,\\n        countryObj:\\\"\\\",\\n        statesObj:\\\"\\\",\\n        citiesObj:\\\"\\\"\\n    };\\n\\n    if(this.props.obj.length == 0){\\n     this.props.history.push('/Geo/CountriesList');\\n    }else{\\n        this.props.obj.forEach(function(country) {\\n            if(country.documentId == this.props.match.params.idDocument){\\n                country.states.forEach(function(states) {\\n                    if(states.code == this.props.match.params.Code){\\n                        this.state = {\\n                            documentId: this.props.match.params.idDocument,\\n                            countryObj:country,\\n                            statesObj:states,\\n                            citiesObj:states.cities\\n                        };\\n\\n                    }\\n                }.bind(this));\\n            }\\n        }.bind(this));\\n    }\\n  }\\n\\n  componentDidCatch (error, errorInfo) { \\n    console.log(\\\"Cat\\\")\\n   } \\n\\n  loadStates(){\\n    console.log(\\\"id\\\");\\n  }\\n\\n editFormatter(cell, row) {\\n    return(\\n        <ButtonGroup>\\n            <Button size=\\\"sm\\\"  className=\\\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\\\">\\n              <i className=\\\"icon-pencil\\\"></i>\\n            </Button>\\n            <Button size=\\\"sm\\\" className=\\\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\\\">\\n              <i className=\\\"icon-trash\\\"></i>\\n            </Button>\\n        </ButtonGroup>\\n    )\\n}\\n\\neditObject(row) {\\n  this.props.history.push('/Geo/StatesList/'+row.id);\\n}\\n\\nloadStates(cell,row){\\n  return(\\n    <Button size=\\\"sm\\\"  onClick={()=>this.editObject(row)} className=\\\"btn-dropbox btn-brand text mr-1 mb-1 btn btn-secondary btn-lg\\\">\\n        Ver Estados\\n    </Button>\\n  ) \\n}\\n\\ngeopoint(cell, row){\\n return(\\n    <div>\\n      Lat: {row.geopoint.latitude} Lon:{row.geopoint.longitude} \\n    </div>\\n  );\\n}\\nactive(cell, row){\\n  if(row.active == '1'){\\n      return(\\n          <AppSwitch className={'mx-1'} variant={'pill'} color={'success'} label checked/>\\n      );\\n    }else{\\n      return(\\n         <AppSwitch className={'mx-1'} variant={'pill'} color={'success'} label  />\\n      );\\n    }\\n}\\n\\ncallBackCountry(){this.props.history.push('/Geo/CountriesList');}\\ncallBackState(){this.props.history.push('/Geo/StatesList/'+this.state.documentId);}\\n\\nrender() {\\n\\n  return (\\n      <div className=\\\"animated\\\">\\n        <Card>\\n          <CardHeader>\\n            <i onClick={this.callBackCountry.bind(this)} className=\\\"btn btn-link\\\">Pais: {this.state.countryObj.countryName}</i>\\n            <i onClick={this.callBackState.bind(this)} className=\\\"btn btn-link\\\">Estado: {this.state.statesObj.stateName}</i>\\n            <div className=\\\"card-header-actions\\\">\\n              <a href=\\\"https://github.com/AllenFang/react-bootstrap-table\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\" className=\\\"card-header-action\\\">\\n                <small className=\\\"text-muted\\\">Aprende</small>\\n              </a>\\n            </div>\\n          </CardHeader>\\n          <CardBody>\\n              \\n            <Button color=\\\"primary\\\" ><i className=\\\"fa icon-plus\\\"></i>&nbsp;Crear Ciudad</Button>\\n            <Button color=\\\"secondary\\\" onClick={this.callBackState.bind(this)} className=\\\"float-right\\\"><i className=\\\"fa icon-arrow-left-circle\\\"></i>&nbsp;Regresar</Button>\\n            <Row>&nbsp;</Row>\\n            <BootstrapTable data={this.state.citiesObj} striped hover pagination search options={this.options} >\\n              <TableHeaderColumn dataField='cityName' dataSort>Estado</TableHeaderColumn>\\n              <TableHeaderColumn isKey dataField='code' >Codigo General</TableHeaderColumn>\\n              <TableHeaderColumn dataFormat={this.geopoint.bind(this)} >Geo Punto</TableHeaderColumn>\\n              <TableHeaderColumn dataFormat={this.active.bind(this)} dataAlign='center' >Activo</TableHeaderColumn>\\n              <TableHeaderColumn dataFormat={this.editFormatter} dataAlign='right' >Action</TableHeaderColumn>\\n            </BootstrapTable>\\n          </CardBody>\\n        </Card>\\n      </div>\\n    );\\n  }\\n}\\nconst mapStateToProps = (state) => {\\n  return{\\n    obj: state.DaoGeo\\n  }\\n}\\n\\nconst mapDispatchToProps = (dispatch) => {\\n  return{ \\n    dispReducer: (type, colletion) => {\\n        //   DbCrud.dbFindColletion(dispatch, type, colletion);\\n    }\\n  }\\n}\\n\\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{1204:function(e,t,a){\"use strict\";a.r(t);var n=a(7),i=a(8),s=a(10),c=a(9),o=a(11),r=a(36),l=a(1),m=a.n(l),d=a(37),u=a(2),b=a(5),h=a(409),p=(a(410),a(191),function(e){function t(e){var a;return Object(n.a)(this,t),(a=Object(s.a)(this,Object(c.a)(t).call(this,e))).options={sortIndicator:!0,hideSizePerPage:!0,paginationSize:3,hidePageListOnlyOnePage:!0,alwaysShowAllBtns:!1,withFirstAndLast:!1},a.state={documentId:a.props.match.params.idDocument,countryObj:\"\",statesObj:\"\",citiesObj:\"\"},0==a.props.obj.length?a.props.history.push(\"/Geo/CountriesList\"):a.props.obj.forEach(function(e){e.documentId==this.props.match.params.idDocument&&e.states.forEach(function(t){t.code==this.props.match.params.Code&&(this.state={documentId:this.props.match.params.idDocument,countryObj:e,statesObj:t,citiesObj:t.cities})}.bind(this))}.bind(Object(r.a)(Object(r.a)(a)))),a}return Object(o.a)(t,e),Object(i.a)(t,[{key:\"componentDidCatch\",value:function(e,t){console.log(\"Cat\")}},{key:\"loadStates\",value:function(){console.log(\"id\")}},{key:\"editFormatter\",value:function(e,t){return m.a.createElement(u.g,null,m.a.createElement(u.e,{size:\"sm\",className:\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\"},m.a.createElement(\"i\",{className:\"icon-pencil\"})),m.a.createElement(u.e,{size:\"sm\",className:\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\"},m.a.createElement(\"i\",{className:\"icon-trash\"})))}},{key:\"editObject\",value:function(e){this.props.history.push(\"/Geo/StatesList/\"+e.id)}},{key:\"loadStates\",value:function(e,t){var a=this;return m.a.createElement(u.e,{size:\"sm\",onClick:function(){return a.editObject(t)},className:\"btn-dropbox btn-brand text mr-1 mb-1 btn btn-secondary btn-lg\"},\"Ver Estados\")}},{key:\"geopoint\",value:function(e,t){return m.a.createElement(\"div\",null,\"Lat: \",t.geopoint.latitude,\" Lon:\",t.geopoint.longitude)}},{key:\"active\",value:function(e,t){return\"1\"==t.active?m.a.createElement(b.m,{className:\"mx-1\",variant:\"pill\",color:\"success\",label:!0,checked:!0}):m.a.createElement(b.m,{className:\"mx-1\",variant:\"pill\",color:\"success\",label:!0})}},{key:\"callBackCountry\",value:function(){this.props.history.push(\"/Geo/CountriesList\")}},{key:\"callBackState\",value:function(){this.props.history.push(\"/Geo/StatesList/\"+this.state.documentId)}},{key:\"render\",value:function(){return m.a.createElement(\"div\",{className:\"animated\"},m.a.createElement(u.i,null,m.a.createElement(u.n,null,m.a.createElement(\"i\",{onClick:this.callBackCountry.bind(this),className:\"btn btn-link\"},\"Pais: \",this.state.countryObj.countryName),m.a.createElement(\"i\",{onClick:this.callBackState.bind(this),className:\"btn btn-link\"},\"Estado: \",this.state.statesObj.stateName),m.a.createElement(\"div\",{className:\"card-header-actions\"},m.a.createElement(\"a\",{href:\"https://github.com/AllenFang/react-bootstrap-table\",rel:\"noopener noreferrer\",target:\"_blank\",className:\"card-header-action\"},m.a.createElement(\"small\",{className:\"text-muted\"},\"Aprende\")))),m.a.createElement(u.j,null,m.a.createElement(u.e,{color:\"primary\"},m.a.createElement(\"i\",{className:\"fa icon-plus\"}),\"\\xa0Crear Ciudad\"),m.a.createElement(u.e,{color:\"secondary\",onClick:this.callBackState.bind(this),className:\"float-right\"},m.a.createElement(\"i\",{className:\"fa icon-arrow-left-circle\"}),\"\\xa0Regresar\"),m.a.createElement(u.ib,null,\"\\xa0\"),m.a.createElement(h.BootstrapTable,{data:this.state.citiesObj,striped:!0,hover:!0,pagination:!0,search:!0,options:this.options},m.a.createElement(h.TableHeaderColumn,{dataField:\"cityName\",dataSort:!0},\"Estado\"),m.a.createElement(h.TableHeaderColumn,{isKey:!0,dataField:\"code\"},\"Codigo General\"),m.a.createElement(h.TableHeaderColumn,{dataFormat:this.geopoint.bind(this)},\"Geo Punto\"),m.a.createElement(h.TableHeaderColumn,{dataFormat:this.active.bind(this),dataAlign:\"center\"},\"Activo\"),m.a.createElement(h.TableHeaderColumn,{dataFormat:this.editFormatter,dataAlign:\"right\"},\"Action\")))))}}]),t}(l.Component));t.default=Object(d.b)(function(e){return{obj:e.DaoGeo}},function(e){return{dispReducer:function(e,t){}}})(p)}}]);","extractedComments":[]}