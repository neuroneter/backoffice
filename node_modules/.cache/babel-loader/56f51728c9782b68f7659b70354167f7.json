{"ast":null,"code":"var _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/Reducers/utils/PhotoThumbnails.js\";\nimport React from 'react';\nimport { Image, Transformation } from 'cloudinary-react';\nvar transformations = [[{\n  crop: 'fill',\n  width: '150',\n  height: '150',\n  radius: '10'\n}], [{\n  crop: 'scale',\n  width: '150',\n  height: '150'\n}], [{\n  crop: 'fit',\n  width: '150',\n  height: '150'\n}], [{\n  crop: 'thumb',\n  gravity: 'face',\n  width: '150',\n  height: '150'\n}], [{\n  crop: 'fill',\n  effect: 'sepia',\n  gravity: 'north',\n  width: '150',\n  height: '150',\n  radius: '20'\n}, {\n  angle: '20'\n}]];\n\nvar PhotoThumbnails = function PhotoThumbnails(_ref) {\n  var publicId = _ref.publicId;\n  return React.createElement(\"table\", {\n    className: \"thumbnails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, transformations.map(function (transformation, transformationIndex) {\n    return React.createElement(\"td\", {\n      key: transformationIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"thumbnail_holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Image, {\n      publicId: publicId,\n      className: \"thumbnail inline\",\n      format: \"jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, transformation.map(function (subTransformation, subTransformationIndex) {\n      return React.createElement(Transformation, Object.assign({}, subTransformation, {\n        key: subTransformationIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }))), React.createElement(\"table\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, transformation.map(function (subTransformation) {\n      return Object.keys(subTransformation).map(function (prop, propIndex) {\n        return React.createElement(\"tr\", {\n          key: propIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, prop), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, subTransformation[prop]));\n      });\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }))));\n};\n\nexport default PhotoThumbnails;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/Reducers/utils/PhotoThumbnails.js"],"names":["React","Image","Transformation","transformations","crop","width","height","radius","gravity","effect","angle","PhotoThumbnails","publicId","map","transformation","transformationIndex","subTransformation","subTransformationIndex","Object","keys","prop","propIndex"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,kBAAtC;AAEA,IAAMC,eAAe,GAAG,CACpB,CAAC;AAAEC,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE,KAAvB;AAA8BC,EAAAA,MAAM,EAAE,KAAtC;AAA6CC,EAAAA,MAAM,EAAE;AAArD,CAAD,CADoB,EAEpB,CAAC;AAAEH,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,KAAK,EAAE,KAAxB;AAA+BC,EAAAA,MAAM,EAAE;AAAvC,CAAD,CAFoB,EAGpB,CAAC;AAAEF,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE,KAAtB;AAA6BC,EAAAA,MAAM,EAAE;AAArC,CAAD,CAHoB,EAIpB,CAAC;AAAEF,EAAAA,IAAI,EAAE,OAAR;AAAiBI,EAAAA,OAAO,EAAE,MAA1B;AAAkCH,EAAAA,KAAK,EAAE,KAAzC;AAAgDC,EAAAA,MAAM,EAAE;AAAxD,CAAD,CAJoB,EAKpB,CACI;AACIF,EAAAA,IAAI,EAAE,MADV;AAEIK,EAAAA,MAAM,EAAE,OAFZ;AAGID,EAAAA,OAAO,EAAE,OAHb;AAIIH,EAAAA,KAAK,EAAE,KAJX;AAKIC,EAAAA,MAAM,EAAE,KALZ;AAMIC,EAAAA,MAAM,EAAE;AANZ,CADJ,EASI;AAAEG,EAAAA,KAAK,EAAE;AAAT,CATJ,CALoB,CAAxB;;AAkBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,SACpB;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,eAAe,CAACU,GAAhB,CAAoB,UAACC,cAAD,EAAiBC,mBAAjB,EAAyC;AAC1D,WACI;AAAI,MAAA,GAAG,EAAEA,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,QAAQ,EAAEH,QADd;AAEI,MAAA,SAAS,EAAC,kBAFd;AAGI,MAAA,MAAM,EAAC,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKE,cAAc,CAACD,GAAf,CACG,UAACG,iBAAD,EAAoBC,sBAApB,EAA+C;AAC3C,aACI,oBAAC,cAAD,oBACQD,iBADR;AAEI,QAAA,GAAG,EAAEC,sBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAMH,KARJ,CALL,CADJ,CADJ,EAmBI;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCH,cAAc,CAACD,GAAf,CAAmB,UAAAG,iBAAiB,EAAI;AACrC,aAAOE,MAAM,CAACC,IAAP,CAAYH,iBAAZ,EAA+BH,GAA/B,CACH,UAACO,IAAD,EAAOC,SAAP,EAAqB;AACjB,eACI;AAAI,UAAA,GAAG,EAAEA,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,IAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKJ,iBAAiB,CAACI,IAAD,CADtB,CAFJ,CADJ;AAQH,OAVE,CAAP;AAYH,KAbA,CADD,CADJ,CAnBJ,EAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCJ,CADJ;AAyCH,GA1CA,CADL,CADA,CADJ,CADoB;AAAA,CAAxB;;AAoDA,eAAeT,eAAf","sourcesContent":["import React from 'react';\nimport { Image, Transformation } from 'cloudinary-react';\n\nconst transformations = [\n    [{ crop: 'fill', width: '150', height: '150', radius: '10' }],\n    [{ crop: 'scale', width: '150', height: '150' }],\n    [{ crop: 'fit', width: '150', height: '150' }],\n    [{ crop: 'thumb', gravity: 'face', width: '150', height: '150' }],\n    [\n        {\n            crop: 'fill',\n            effect: 'sepia',\n            gravity: 'north',\n            width: '150',\n            height: '150',\n            radius: '20',\n        },\n        { angle: '20' },\n    ],\n];\n\nconst PhotoThumbnails = ({publicId}) => (\n    <table className=\"thumbnails\">\n        <tbody>\n        <tr>\n            {transformations.map((transformation, transformationIndex) => {\n                return (\n                    <td key={transformationIndex}>\n                        <div className=\"thumbnail_holder\">\n                            <Image\n                                publicId={publicId}\n                                className=\"thumbnail inline\"\n                                format=\"jpg\"\n                            >\n                                {transformation.map(\n                                    (subTransformation, subTransformationIndex) => {\n                                        return (\n                                            <Transformation\n                                                {...subTransformation}\n                                                key={subTransformationIndex}\n                                            />\n                                        );\n                                    }\n                                )}\n                            </Image>\n                        </div>\n                        <table className=\"info\">\n                            <tbody>\n                            {transformation.map(subTransformation => {\n                                return Object.keys(subTransformation).map(\n                                    (prop, propIndex) => {\n                                        return (\n                                            <tr key={propIndex}>\n                                                <td>{prop}</td>\n                                                <td>\n                                                    {subTransformation[prop]}\n                                                </td>\n                                            </tr>\n                                        );\n                                    }\n                                );\n                            })}\n                            </tbody>\n                        </table>\n                        <br />\n                    </td>\n                );\n            })}\n        </tr>\n        </tbody>\n    </table>\n);\n\nexport default PhotoThumbnails;\n"]},"metadata":{},"sourceType":"module"}