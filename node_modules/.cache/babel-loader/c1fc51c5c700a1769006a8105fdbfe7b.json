{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { Row, InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Label, Input, Col, Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nvar flat = true;\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar OrdersList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrdersList, _Component);\n\n  function OrdersList(props) {\n    var _this;\n\n    _classCallCheck(this, OrdersList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrdersList).call(this, props));\n    _this.pageChanged = _this.pageChanged.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      orders: {\n        pag: \"1\",\n        limit: \"1000000\",\n        filFile: \"\",\n        filValue: \"\",\n        sorts: [{\n          file: \"oderDate\",\n          value: 1\n        }]\n      },\n      groups: {\n        filFile: \"group\",\n        filValue: \"StatusOrder\",\n        sorts: [{\n          file: \"name\",\n          value: 1\n        }]\n      }\n    };\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false //this.toggleDanger = this.toggleDanger.bind(this);\n\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(OrdersList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (flat) {\n        flat = false;\n        this.props.loadReducer('loadOrders', \"orders/find\", this.state.orders);\n        this.props.loadReducer('loadGroups', \"groups/find\", this.state.groups);\n        this.props.loadReducer('loadStores', \"stores/find\", {});\n      }\n    } //Cambia la paginacion\n\n  }, {\n    key: \"pageChanged\",\n    value: function pageChanged(e) {\n      console.log(e.target.text);\n    }\n  }, {\n    key: \"paginationBasic\",\n    value: function paginationBasic() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, items), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, items), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, items));\n    } //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n\n  }, {\n    key: \"callEdit\",\n    value: function callEdit(row) {\n      this.props.history.push({\n        pathname: '/Geo/CountriesAdd',\n        row: row\n      });\n    } //Cambia el valor a visible del mensaje de alerta \n    //guarda el identificador de la fila que sera afectada \n\n  }, {\n    key: \"toggleDanger\",\n    value: function toggleDanger(row) {\n      this.setState({\n        danger: !this.state.danger,\n        tmpRow: row.documentId\n      });\n    }\n    /*\n      onFormSubmit = (e) => {\n        e.preventDefault();\n        const target = e.target;\n        //console.log(e.target.status.value)\n        //this.state.orders.filValue = \"JULIAN\";\n        console.log(e.target.)\n        //this.props.loadReducer('loadOrders', \"orders/find\",this.state.orders);\n      }\n    */\n\n  }, {\n    key: \"ccclik\",\n    value: function ccclik() {\n      //this.props.obj.listOrders\n      console.log(\"hola\");\n      return;\n    } //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n\n  }, {\n    key: \"editFormatter\",\n    value: function editFormatter(cell, row) {\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.callEdit.bind(this, row),\n        size: \"sm\",\n        className: \"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.toggleDanger.bind(this, row),\n        size: \"sm\",\n        className: \"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Lista Ordenes\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/AllenFang/react-bootstrap-table\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Aprende\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        data: this.props.obj.listOrders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Descargar Todo\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        id: \"oders\",\n        data: this.props.obj.listOrders,\n        containerStyle: {\n          width: '100%',\n          overflowX: 'scroll'\n        },\n        striped: true,\n        hover: true,\n        pagination: true,\n        search: true,\n        options: this.options,\n        exportCSV: {\n          fileName: 'orders.csv',\n          separator: '|',\n          ignoreHeader: true,\n          noAutoBOM: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"status\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Estado\"), React.createElement(TableHeaderColumn, {\n        width: '10%',\n        dataField: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Orden\"), React.createElement(TableHeaderColumn, {\n        dataField: \"dni\",\n        width: '10%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"DNI\"), React.createElement(TableHeaderColumn, {\n        width: '20%',\n        dataField: \"customer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Cliente\"), React.createElement(TableHeaderColumn, {\n        width: '20%',\n        dataField: \"skuName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Producto\"), React.createElement(TableHeaderColumn, {\n        dataField: \"city\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Ciudad\"), React.createElement(TableHeaderColumn, {\n        dataField: \"guide\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Guia\"), React.createElement(TableHeaderColumn, {\n        dataField: \"invoice\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Factura\"), React.createElement(TableHeaderColumn, {\n        dataField: \"unit\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Procesado\"), React.createElement(TableHeaderColumn, {\n        dataField: \"store\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Tienda\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.editFormatter.bind(this),\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Accion\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"_id\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Identifier ID\"))))));\n    }\n  }]);\n\n  return OrdersList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return {\n    obj: state.DaoOrders\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    },\n    deleteReducer: function deleteReducer(type, colletion, component, documentId) {//DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n    editFileReducer: function editFileReducer(type, colletion, component, documentId, fileEdit, newFileEdit) {//DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js"],"names":["React","Component","connect","CSVLink","CSVDownload","Row","InputGroup","InputGroupAddon","InputGroupText","Form","FormGroup","Label","Input","Col","Card","CardHeader","CardBody","Modal","ModalHeader","ModalBody","ModalFooter","Button","ButtonGroup","AppSwitch","BootstrapTable","TableHeaderColumn","DbCrud","flat","OrdersList","props","pageChanged","bind","state","orders","pag","limit","filFile","filValue","sorts","file","value","groups","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","loadReducer","e","console","log","target","text","items","row","history","push","pathname","setState","danger","tmpRow","documentId","cell","callEdit","toggleDanger","obj","listOrders","width","overflowX","fileName","separator","ignoreHeader","noAutoBOM","editFormatter","mapStateToProps","DaoOrders","mapDispatchToProps","dispatch","type","colletion","body","dbMLoad","deleteReducer","component","editFileReducer","fileEdit","newFileEdit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { Row,InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Label, Input, Col, Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\n\nvar flat = true;\n\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass OrdersList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.pageChanged = this.pageChanged.bind(this);\n    \n    this.state = {\n      orders: {\n        pag:\"1\",\n        limit:\"1000000\",\n        filFile:\"\",\n        filValue: \"\",\n        sorts:[\n          {\n            file:\"oderDate\",\n            value:1\n          }\n        ]\n      },\n      groups : {\n        filFile:\"group\",\n        filValue:\"StatusOrder\",\n        sorts:[{file:\"name\",value:1}]\n      }\n    }\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    }\n\n    \n    //this.toggleDanger = this.toggleDanger.bind(this);\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    if (flat) {\n      flat = false;\n      this.props.loadReducer('loadOrders', \"orders/find\",this.state.orders);\n      this.props.loadReducer('loadGroups', \"groups/find\",this.state.groups);\n      this.props.loadReducer('loadStores', \"stores/find\",{});\n    }\n  }\n\n  //Cambia la paginacion\n  pageChanged(e){\n    console.log(e.target.text)\n  }\n\n  paginationBasic(){\n    return (\n      <div>\n        <Pagination>{items}</Pagination>\n        <br />\n        <Pagination size=\"lg\">{items}</Pagination>\n        <br />\n        <Pagination size=\"sm\">{items}</Pagination>\n      </div>\n    )\n  }\n  \n\n  //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n  callEdit(row) {\n    this.props.history.push({\n      pathname: '/Geo/CountriesAdd',\n      row: row\n    })\n  }\n\n  //Cambia el valor a visible del mensaje de alerta \n  //guarda el identificador de la fila que sera afectada \n  toggleDanger(row) {\n    this.setState({\n      danger: !this.state.danger,\n      tmpRow: row.documentId\n    });\n  }\n/*\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    const target = e.target;\n    //console.log(e.target.status.value)\n    //this.state.orders.filValue = \"JULIAN\";\n    console.log(e.target.)\n    //this.props.loadReducer('loadOrders', \"orders/find\",this.state.orders);\n  }\n*/\nccclik(){\n  //this.props.obj.listOrders\n  console.log(\"hola\");\n  return ;\n}\n\n\n  //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n  editFormatter(cell, row) {\n    return (\n      <ButtonGroup>\n        <Button onClick={this.callEdit.bind(this, row)} size=\"sm\" className=\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-pencil\"></i>\n        </Button>\n        <Button onClick={this.toggleDanger.bind(this, row)} size=\"sm\" className=\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-trash\"></i>\n        </Button>\n      </ButtonGroup>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardHeader>\n            Lista Ordenes\n            <div className=\"card-header-actions\">\n              <a href=\"https://github.com/AllenFang/react-bootstrap-table\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"card-header-action\">\n                <small className=\"text-muted\">Aprende</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <CSVLink data={this.props.obj.listOrders}>Descargar Todo</CSVLink>\n          </CardBody>\n\n          <CardBody>\n            <div>\n              <BootstrapTable id=\"oders\" data={this.props.obj.listOrders} containerStyle={{width: '100%',overflowX: 'scroll'}}  striped hover pagination search options={this.options} \n             exportCSV={{\n                fileName: 'orders.csv',\n                separator: '|',\n                ignoreHeader: true,\n                noAutoBOM: false\n              }}>\n              <TableHeaderColumn dataField='status' dataSort>Estado</TableHeaderColumn>\n              <TableHeaderColumn width={'10%'} dataField='order' >Orden</TableHeaderColumn>\n              <TableHeaderColumn dataField='dni'width={'10%'} >DNI</TableHeaderColumn>\n              <TableHeaderColumn width={'20%'} dataField='customer' >Cliente</TableHeaderColumn>\n              <TableHeaderColumn width={'20%'} dataField='skuName' >Producto</TableHeaderColumn>\n              <TableHeaderColumn dataField='city'width={'20%'} >Ciudad</TableHeaderColumn>\n              <TableHeaderColumn dataField='guide' width={'20%'}>Guia</TableHeaderColumn>\n              <TableHeaderColumn dataField='invoice' width={'20%'}>Factura</TableHeaderColumn>\n              <TableHeaderColumn dataField='unit' width={'20%'}>Procesado</TableHeaderColumn>\n              <TableHeaderColumn dataField='store' width={'20%'}>Tienda</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.editFormatter.bind(this)} dataAlign='right' >Accion</TableHeaderColumn>\n              <TableHeaderColumn isKey={true} dataField='_id' hidden>Identifier ID</TableHeaderColumn>\n            </BootstrapTable>\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return{\n    obj:state.DaoOrders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    },\n\n    deleteReducer: (type, colletion, component, documentId) => { \n      //DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n\n    editFileReducer: (type, colletion, component, documentId, fileEdit, newFileEdit) => { \n      //DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);\n"]},"metadata":{},"sourceType":"module"}