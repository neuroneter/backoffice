{"version":3,"sources":["views/Forms/ValidationForms/ValidationForms.js"],"names":["validationSchema","values","Yup","shape","firstName","min","required","lastName","userName","email","password","concat","matches","confirmPassword","oneOf","accept","test","value","getErrorsFromValidationError","validationError","inner","reduce","errors","error","Object","_Users_danielobedortegahernandez_iCloud_Documents_GitHub_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_7__","_Users_danielobedortegahernandez_iCloud_Documents_GitHub_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__","path","initialValues","onSubmit","_ref","setSubmitting","setErrors","setTimeout","alert","JSON","stringify","ValidationForms","props","_this","_Users_danielobedortegahernandez_iCloud_Documents_GitHub_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_danielobedortegahernandez_iCloud_Documents_GitHub_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_danielobedortegahernandez_iCloud_Documents_GitHub_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","touchAll","bind","_Users_danielobedortegahernandez_iCloud_Documents_GitHub_backoffice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","formName","hasError","form","document","forms","i","length","name","focus","findFirstError","fieldName","Boolean","setTouched","validateForm","getValidationSchema","_this2","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_9__","href","target","rel","formik__WEBPACK_IMPORTED_MODULE_10__","validate","validateSync","abortEarly","render","_ref2","touched","handleChange","status","dirty","handleBlur","handleSubmit","isSubmitting","isValid","handleReset","lg","noValidate","for","type","id","placeholder","autoComplete","valid","invalid","autoFocus","onChange","onBlur","md","label","color","disabled","onClick","React","Component"],"mappings":"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","file":"static/js/38.b5a5982e.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Card, CardHeader, CardBody, Col, CustomInput, Form, FormFeedback, FormGroup, Label, Input,  Row} from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport './ValidationForms.css'\n\nconst validationSchema = function (values) {\n  return Yup.object().shape({\n    firstName: Yup.string()\n    .min(2, `First name has to be at least 2 characters`)\n    .required('First name is required'),\n    lastName: Yup.string()\n    .min(1, `Last name has to be at least 1 character`)\n    .required('Last name is required'),\n    userName: Yup.string()\n    .min(5, `Username has to be at least 5 characters`)\n    .required('Username is required'),\n    email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required!'),\n    password: Yup.string()\n    .min(6, `Password has to be at least ${6} characters!`)\n    .matches(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/, 'Password must contain: numbers, uppercase and lowercase letters\\n')\n    .required('Password is required'),\n    confirmPassword: Yup.string()\n    .oneOf([values.password], 'Passwords must match')\n    .required('Password confirmation is required'),\n    accept: Yup.bool()\n    .required('* required')\n    .test('accept', 'You have to accept our Terms and Conditions!', value => value === true),\n  })\n}\n\nconst validate = (getValidationSchema) => {\n  return (values) => {\n    const validationSchema = getValidationSchema(values)\n    try {\n      validationSchema.validateSync(values, { abortEarly: false })\n      return {}\n    } catch (error) {\n      return getErrorsFromValidationError(error)\n    }\n  }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n  const FIRST_ERROR = 0\n  return validationError.inner.reduce((errors, error) => {\n    return {\n      ...errors,\n      [error.path]: error.errors[FIRST_ERROR],\n    }\n  }, {})\n}\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  userName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  accept: false\n}\n\nconst onSubmit = (values, { setSubmitting, setErrors }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2))\n    // console.log('User has been successfully saved!', values)\n    setSubmitting(false)\n  }, 2000)\n}\n\nclass ValidationForms extends React.Component {\n  constructor(props){\n    super(props)\n    this.touchAll = this.touchAll.bind(this)\n\n  }\n\n  findFirstError (formName, hasError) {\n    const form = document.forms[formName]\n    for (let i = 0; i < form.length; i++) {\n      if (hasError(form[i].name)) {\n        form[i].focus()\n        break\n      }\n    }\n  }\n\n  validateForm (errors) {\n    this.findFirstError('simpleForm', (fieldName) => {\n      return Boolean(errors[fieldName])\n    })\n  }\n\n  touchAll(setTouched, errors) {\n    setTouched({\n        firstName: true,\n        lastName: true,\n        userName: true,\n        email: true,\n        password: true,\n        confirmPassword: true,\n        accept: true\n      }\n    )\n    this.validateForm(errors)\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Card>\n          <CardHeader>\n            <i className=\"icon-note\"></i><strong>Form Validation</strong>\n            <a href=\"https://coreui.io/pro/react/\" className=\"badge badge-danger ml-1\">CoreUI Pro</a>\n            <div className=\"card-header-actions\">\n              <a className=\"card-header-action\" href=\"https://github.com/jaredpalmer/formik\" target=\"_blank\" rel=\"noreferrer noopener\">\n                <small className=\"text-muted\">docs</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <a href=\"https://github.com/jaredpalmer/formik\" target=\"_blank\" rel=\"noreferrer noopener\">Formik</a> <cite>Build forms in React, without the tears</cite> with <a href=\"https://github.com/jquense/yup\" target=\"_blank\" rel=\"noreferrer noopener\">Yup</a> <cite>Dead simple Object schema\n            validation</cite>\n            <hr />\n            <Formik\n              initialValues={initialValues}\n              validate={validate(validationSchema)}\n              onSubmit={onSubmit}\n              render={\n                ({\n                  values,\n                  errors,\n                  touched,\n                  status,\n                  dirty,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  handleReset,\n                  setTouched\n                }) => (\n                  <Row>\n                    <Col lg=\"6\">\n                      <Form onSubmit={handleSubmit} noValidate name='simpleForm'>\n                        <FormGroup>\n                          <Label for=\"firstName\">First Name</Label>\n                          <Input type=\"text\"\n                                 name=\"firstName\"\n                                 id=\"firstName\"\n                                 placeholder=\"First Name\"\n                                 autoComplete=\"given-name\"\n                                 valid={!errors.firstName}\n                                 invalid={touched.firstName && !!errors.firstName}\n                                 autoFocus={true}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.firstName} />\n                          <FormFeedback>{errors.firstName}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"lastName\">Last Name</Label>\n                          <Input type=\"text\"\n                                 name=\"lastName\"\n                                 id=\"lastName\"\n                                 placeholder=\"Last Name\"\n                                 autoComplete=\"family-name\"\n                                 valid={!errors.lastName}\n                                 invalid={touched.lastName && !!errors.lastName}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.lastName} />\n                          <FormFeedback>{errors.lastName}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"userName\">User Name</Label>\n                          <Input type=\"text\"\n                                 name=\"userName\"\n                                 id=\"userName\"\n                                 placeholder=\"User Name\"\n                                 autoComplete=\"username\"\n                                 valid={!errors.userName}\n                                 invalid={touched.userName && !!errors.userName}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.userName} />\n                          <FormFeedback>{errors.userName}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"email\">Email</Label>\n                          <Input type=\"email\"\n                                 name=\"email\"\n                                 id=\"email\"\n                                 placeholder=\"Email\"\n                                 autoComplete=\"email\"\n                                 valid={!errors.email}\n                                 invalid={touched.email && !!errors.email}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.email} />\n                          <FormFeedback>{errors.email}</FormFeedback>\n                        </FormGroup>\n                        <Row>\n                          <Col md={6}>\n                            <FormGroup>\n                              <Label for=\"password\">Password</Label>\n                              <Input type=\"password\"\n                                     name=\"password\"\n                                     id=\"password\"\n                                     placeholder=\"Password\"\n                                     autoComplete=\"new-password\"\n                                     valid={!errors.password}\n                                     invalid={touched.password && !!errors.password}\n                                     required\n                                     onChange={handleChange}\n                                     onBlur={handleBlur}\n                                     value={values.password} />\n                              {/*<FormFeedback>Required password containing at least: number, uppercase and lowercase letter, 8 characters</FormFeedback>*/}\n                              <FormFeedback>{errors.password}</FormFeedback>\n                            </FormGroup>\n                          </Col>\n                          <Col md={6}>\n                            <FormGroup>\n                              <Label for=\"confirmPassword\">Password</Label>\n                              <Input type=\"password\"\n                                     name=\"confirmPassword\"\n                                     id=\"confirmPassword\"\n                                     placeholder=\"Confirm password\"\n                                     autoComplete=\"new-password\"\n                                     valid={!errors.confirmPassword}\n                                     invalid={touched.confirmPassword && !!errors.confirmPassword}\n                                     required\n                                     onChange={handleChange}\n                                     onBlur={handleBlur}\n                                     value={values.confirmPassword} />\n                              <FormFeedback>{errors.confirmPassword}</FormFeedback>\n                            </FormGroup>\n                          </Col>\n                        </Row>\n                        <FormGroup>\n                          <CustomInput\n                            type=\"checkbox\"\n                            id=\"accept\"\n                            label=\"I accept the terms of use\"\n                            required\n                            valid={!errors.accept}\n                            invalid={touched.accept && !!errors.accept}\n                            onChange={handleChange}\n                            onBlur={handleBlur} >\n                            <FormFeedback>{errors.accept}</FormFeedback>\n                          </CustomInput>\n                        </FormGroup>\n                        <FormGroup>\n                          <Button type=\"submit\" color=\"primary\" className=\"mr-1\" disabled={isSubmitting || !isValid}>{isSubmitting ? 'Wait...' : 'Submit'}</Button>\n                          <Button type=\"button\" color=\"success\" className=\"mr-1\" onClick={() => this.touchAll(setTouched, errors)}  disabled={isValid}>Validate</Button>\n                          <Button type=\"reset\" color=\"danger\" className=\"mr-1\" onClick={handleReset}>Reset</Button>\n                        </FormGroup>\n                      </Form>\n                    </Col>\n                    <Col lg=\"6\">\n                      <Card className={isValid ? 'bg-info' : 'bg-secondary'}>\n                        <CardBody>\n                          <pre>values: {JSON.stringify(values, null, 2)}</pre>\n                          <pre>errors: {JSON.stringify(errors, null, 2)}</pre>\n                          <pre>touched: {JSON.stringify(touched, null, 2)}</pre>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n                )} />\n          </CardBody>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default ValidationForms;\n"],"sourceRoot":""}