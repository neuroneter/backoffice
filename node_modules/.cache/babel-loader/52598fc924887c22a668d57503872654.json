{"ast":null,"code":"import firebase from '../Pojo/Firebase.js';\nvar db = firebase.firestore(); // Estructura de DB para Usuario\n\nvar company = {\n  email: \"Email de cuenta llave primaria\",\n  companyName: \"Nombre de la Compañía\",\n  tradeName: \"Nombre Comercial\",\n  nit: \"Numero fiscal\",\n  logo: \"ulrLogo\",\n  location: {\n    office: {\n      address: \"dirección completa\",\n      neighborhood: \"Barrio de la dirección\",\n      phone: \"Número de telefono\",\n      mobile: \"Número de celular\",\n      email: \"Correo de dirección\",\n      notificationId: \"Ide de Celular para notificaciones\",\n      postalcode: \"Codigo Postal\",\n      country: \"Pais\",\n      state: \"Departamento\",\n      city: \"Ciudad\",\n      info: \"Información a tener en cuenta\"\n    },\n    warehous: {\n      address: \"dirección completa\",\n      neighborhood: \"Barrio de la dirección\",\n      phone: \"Número de telefono\",\n      mobile: \"Número de celular\",\n      email: \"Correo de dirección\",\n      notificationId: \"Ide de Celular para notificaciones\",\n      postalcode: \"Codigo Postal\",\n      country: \"Pais\",\n      state: \"Departamento\",\n      city: \"Ciudad\",\n      info: \"Información a tener en cuenta\"\n    }\n  },\n  banks: {\n    0: {\n      bankName: \"Nombre entidad Bancaria\",\n      number: \"23423423423\",\n      type: \"Tipo de cuenta Ahorro, Corrient, Credito\",\n      title: \"Titular de la cuenta Bancaria\"\n    }\n  }\n};\n\nfunction DUser() {} // Cargamos el registro de la empresa a la que corresponde \n// 1. Obtenemos el registro de información basica de la empresa\n\n/*\n    db.collection(\"users\").add({\n        first: \"Ada\",\n        last: \"Lovelace\",\n        born: 1815\n    })\n    .then(function(docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch(function(error) {\n        console.error(\"Error adding document: \", error);\n    });\n\n\n    db.collection(\"Company\").where(\"email\", \"==\", \"ohernandez83@hotmail.com\").onSnapshot(function(snapshot) {\n        console.log(\"Current users born before 1815:\");\n        snapshot.forEach(function (userSnapshot) {\n            console.log(userSnapshot.data())\n        });\n    });\n\n    // db.collection(\"user\").doc(\"company\").onSnapshot(function(doc) {\n        //  console.log(\"Current data: \", doc.data());\n    // });\n\n*/\n//se pasa un estado por defecto para definicion de estructura\n\n\nvar userAdd = function userAdd() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : company;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  // console.log(\"Llamada Dispacth userAdd  \"+action.type);\n  var NewState = Object.assign({}, state);\n\n  if (action.type == \"loadCompany\") {\n    db.collection(\"company\").where(\"email\", \"==\", action.email).then(function (snapshot) {\n      snapshot.forEach(function (userSnapshot) {\n        // console.log(userSnapshot.data().banks[0]);\n        NewState.email = action.email;\n        NewState.companyName = userSnapshot.data().companyName;\n        NewState.tradeName = userSnapshot.data().tradeName;\n        NewState.nit = userSnapshot.data().nit;\n        NewState.logo = userSnapshot.data().logo;\n        return NewState;\n      });\n    });\n  }\n\n  return state;\n};\n\nvar DaoLogin = {\n  userAdd: userAdd\n};\nexport default DaoLogin;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/Documents/GitHub/codifica/src/Dao/DaoMyAcoount.js"],"names":["firebase","db","firestore","company","email","companyName","tradeName","nit","logo","location","office","address","neighborhood","phone","mobile","notificationId","postalcode","country","state","city","info","warehous","banks","bankName","number","type","title","DUser","userAdd","action","NewState","Object","assign","collection","where","then","snapshot","forEach","userSnapshot","data","DaoLogin"],"mappings":"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","sourcesContent":["import firebase from '../Pojo/Firebase.js';\nlet db = firebase.firestore();\n\n// Estructura de DB para Usuario\nconst company = {\n    email       :   \"Email de cuenta llave primaria\",\n    companyName :   \"Nombre de la Compañía\",\n    tradeName   :   \"Nombre Comercial\",\n    nit :   \"Numero fiscal\",\n    logo : \"ulrLogo\",\n    location    :   {\n        office   :  {\n            address :   \"dirección completa\",\n            neighborhood    :   \"Barrio de la dirección\",\n            phone   :   \"Número de telefono\",\n            mobile  :   \"Número de celular\",\n            email   :   \"Correo de dirección\",\n            notificationId  :   \"Ide de Celular para notificaciones\",\n            postalcode  :   \"Codigo Postal\",\n            country :   \"Pais\",\n            state   :   \"Departamento\",\n            city    :   \"Ciudad\",\n            info    :   \"Información a tener en cuenta\"\n        },\n        warehous   :  {\n            address :   \"dirección completa\",\n            neighborhood    :   \"Barrio de la dirección\",\n            phone   :   \"Número de telefono\",\n            mobile  :   \"Número de celular\",\n            email   :   \"Correo de dirección\",\n            notificationId  :   \"Ide de Celular para notificaciones\",\n            postalcode  :   \"Codigo Postal\",\n            country :   \"Pais\",\n            state   :   \"Departamento\",\n            city    :   \"Ciudad\",\n            info    :   \"Información a tener en cuenta\"\n        }\n    },\n    banks   :   {\n        0   :   {\n            bankName    :   \"Nombre entidad Bancaria\",\n            number      :   \"23423423423\",\n            type        :   \"Tipo de cuenta Ahorro, Corrient, Credito\",\n            title       :   \"Titular de la cuenta Bancaria\"\n        }\n    }\n}\n\nfunction DUser(){\n\n    \n\n    // Cargamos el registro de la empresa a la que corresponde \n\n    // 1. Obtenemos el registro de información basica de la empresa\n/*\n    db.collection(\"users\").add({\n        first: \"Ada\",\n        last: \"Lovelace\",\n        born: 1815\n    })\n    .then(function(docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch(function(error) {\n        console.error(\"Error adding document: \", error);\n    });\n\n\n    db.collection(\"Company\").where(\"email\", \"==\", \"ohernandez83@hotmail.com\").onSnapshot(function(snapshot) {\n        console.log(\"Current users born before 1815:\");\n        snapshot.forEach(function (userSnapshot) {\n            console.log(userSnapshot.data())\n        });\n    });\n\n    // db.collection(\"user\").doc(\"company\").onSnapshot(function(doc) {\n        //  console.log(\"Current data: \", doc.data());\n    // });\n\n*/\n}\n\n//se pasa un estado por defecto para definicion de estructura\nconst userAdd = (state = company, action) => {\n    // console.log(\"Llamada Dispacth userAdd  \"+action.type);\n    var NewState = Object.assign({},state);\n    if(action.type == \"loadCompany\"){\n        db.collection(\"company\").where(\"email\", \"==\", action.email).then(function(snapshot) {\n            snapshot.forEach(function (userSnapshot) {\n                // console.log(userSnapshot.data().banks[0]);\n                NewState.email = action.email;\n                NewState.companyName = userSnapshot.data().companyName;\n                NewState.tradeName = userSnapshot.data().tradeName;\n                NewState.nit = userSnapshot.data().nit;\n                NewState.logo = userSnapshot.data().logo;\n                return NewState;\n            });\n        });\n    }\n    return state;\n}\n\nconst DaoLogin = {userAdd}\n\nexport default DaoLogin;"]},"metadata":{},"sourceType":"module"}