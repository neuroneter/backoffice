{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/Edit.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Row, Form, FormGroup, Col, CardBody } from 'reactstrap';\nimport DbCrud from '../../../Pojo/DbCrud';\nvar flat = true;\n\nvar Edit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Edit, _Component);\n\n  function Edit(props) {\n    var _this;\n\n    _classCallCheck(this, Edit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Edit).call(this, props));\n    _this.state = {\n      orders: {\n        pag: \"1\",\n        limit: \"20\",\n        filFile: \"order\",\n        filValue: \"\" + _this.props.match.params.Order,\n        sorts: [{\n          file: \"oderDate\",\n          value: 1\n        }]\n      }\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(Edit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (flat) {\n        flat = false;\n        this.props.loadReducer('loadOrders', \"orders/find\", this.state.orders);\n      }\n    }\n  }, {\n    key: \"callList\",\n    value: function callList() {\n      this.props.history.push('/Orders/List');\n    }\n  }, {\n    key: \"callSave\",\n    value: function callSave(e) {\n      e.preventDefault(); //this.props.update('updateGeo', \"geo\", \"CountriesList\", this, this.state.documentId);\n\n      this.props.history.push('/Orders/List');\n    }\n  }, {\n    key: \"buildOrdersForm\",\n    value: function buildOrdersForm(node) {\n      return React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Form, {\n        action: \"\",\n        onSubmit: this.onFormSubmit,\n        method: \"post\",\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"node.status\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"hola\"))))));\n    }\n  }, {\n    key: \"formOrders\",\n    value: function formOrders() {\n      var nodes = this.props.obj.listOrders;\n      var formOrders = [];\n      Object.keys(nodes).forEach(function (key) {\n        console.log(nodes[key].status);\n        formOrders.push(this.buildOrdersForm(nodes[key]));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.formOrders());\n    }\n  }]);\n\n  return Edit;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return {\n    obj: state.DaoOrders\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/Edit.js"],"names":["connect","React","Component","Row","Form","FormGroup","Col","CardBody","DbCrud","flat","Edit","props","state","orders","pag","limit","filFile","filValue","match","params","Order","sorts","file","value","loadReducer","history","push","e","preventDefault","node","onFormSubmit","nodes","obj","listOrders","formOrders","Object","keys","forEach","key","console","log","status","buildOrdersForm","mapStateToProps","DaoOrders","mapDispatchToProps","dispatch","type","colletion","body","dbMLoad"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Row,Form, FormGroup, Col, CardBody } from 'reactstrap';\nimport DbCrud from '../../../Pojo/DbCrud';\n\nvar flat = true;\n\nclass Edit extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: {\n        pag:\"1\",\n        limit:\"20\",\n        filFile:\"order\",\n        filValue: \"\"+this.props.match.params.Order,\n        sorts:[\n          {\n            file:\"oderDate\",\n            value:1\n          }\n        ]\n      }\n    }\n\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    if (flat) {\n      flat = false;\n      this.props.loadReducer('loadOrders', \"orders/find\",this.state.orders);\n    }\n  }\n\n  callList() { \n    this.props.history.push('/Orders/List'); \n  }\n\n  callSave(e) {\n    e.preventDefault();\n    //this.props.update('updateGeo', \"geo\", \"CountriesList\", this, this.state.documentId);\n    this.props.history.push('/Orders/List');\n  }\n\n  buildOrdersForm(node){\n    return(\n      <CardBody>\n          <Form action=\"\" onSubmit={this.onFormSubmit} method=\"post\" className=\"form-horizontal\">\n              <FormGroup row>\n              <Col xs=\"12\" md=\"12\">\n                  <Row>\n                    <Col>node.status</Col><Col>hola</Col>\n                  </Row>\n              </Col>\n              </FormGroup>\n          </Form>\n      </CardBody>\n    )\n  }\n\n  formOrders(){\n    const nodes = this.props.obj.listOrders;\n    const formOrders = [];\n\n    Object.keys(nodes).forEach(function(key){\n      console.log(nodes[key].status);\n      formOrders.push(this.buildOrdersForm(nodes[key]));\n    })\n\n    \n  }\n\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n        {this.formOrders()}\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return{\n    obj:state.DaoOrders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);"]},"metadata":{},"sourceType":"module"}