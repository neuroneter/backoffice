{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { Row, InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Label, Input, Col, Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nimport Pagination from '../Pagination/Pagination';\nvar flat = true;\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar OrdersList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrdersList, _Component);\n\n  function OrdersList(props) {\n    var _this;\n\n    _classCallCheck(this, OrdersList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrdersList).call(this, props));\n\n    _this.onFormSubmit = function (e) {\n      e.preventDefault();\n      var target = e.target;\n      console.log(e.target.status.value);\n      console.log(_this.props.obj.listStatus); //e.target.status.value\n      //e.target.NameCustomer.value\n      //Se realiza la solicitud nuevamente para recargar los registros \n\n      _this.props.loadReducer('loadOrders', \"orders/find\", {\n        pag: 1,\n        limit: 5,\n        filFile: \"customer\",\n        filValue: \"\" + e.target.NameCustomer.value,\n        sorts: _this.state.orders.sorts\n      });\n\n      _this.setState({\n        orders: {\n          pag: 1,\n          limit: 5,\n          filFile: \"customer\",\n          filValue: e.target.NameCustomer.value,\n          sorts: _this.state.orders.sorts\n        }\n      });\n    };\n\n    _this.state = {\n      orders: {\n        pag: \"1\",\n        limit: \"5\",\n        filFile: \"\",\n        filValue: \"\",\n        sorts: [{\n          file: \"oderDate\",\n          value: 1\n        }]\n      }\n    };\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    };\n    _this.pagLoad = _this.pagLoad.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.toggleDanger = this.toggleDanger.bind(this);\n\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(OrdersList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (flat) {\n        flat = false; //Typo: para ser asignado los valores al tener una respuesta del servidor \n        //EndPoint: al que tenemos que llamar para recupuerar datos\n        //Obj Filtro: el objeto que permite realizar una filto en la busqueda\n\n        this.props.loadReducer('loadOrders', \"orders/find\", this.state.orders);\n        this.props.loadReducer('loadFilters', \"orders/filters\", {});\n      }\n    } //Cambia la paginacion\n\n  }, {\n    key: \"pageChanged\",\n    value: function pageChanged(e) {} //console.log(e.target.text)\n    //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n\n  }, {\n    key: \"callEdit\",\n    value: function callEdit(row) {\n      this.props.history.push({\n        pathname: '/Geo/CountriesAdd',\n        row: row\n      });\n    } //Cambia el valor a visible del mensaje de alerta \n    //guarda el identificador de la fila que sera afectada \n\n  }, {\n    key: \"toggleDanger\",\n    value: function toggleDanger(row) {\n      this.setState({\n        danger: !this.state.danger,\n        tmpRow: row.documentId\n      });\n    } // Esta funcion escucha los eventos del componente Pagination\n\n  }, {\n    key: \"pagLoad\",\n    value: function pagLoad(pagNum, limit) {\n      //Se realiza la solicitud nuevamente para recargar los registros \n      this.props.loadReducer('loadOrders', \"orders/find\", {\n        pag: pagNum,\n        limit: limit,\n        filFile: this.state.orders.filFile,\n        filValue: this.state.orders.filValue,\n        sorts: this.state.orders.sorts\n      });\n      this.setState({\n        orders: {\n          pag: pagNum,\n          limit: limit,\n          filFile: this.state.orders.filFile,\n          filValue: this.state.orders.filValue,\n          sorts: this.state.orders.sorts\n        }\n      });\n    }\n  }, {\n    key: \"renderPagination\",\n    //resibe \n    value: function renderPagination() {\n      if (this.props.obj.pagination.NumPages != undefined) return React.createElement(Pagination, {\n        info: this.props.obj.pagination,\n        pagLoad: this.pagLoad.bind(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Pag...\");\n    } //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n\n  }, {\n    key: \"editFormatter\",\n    value: function editFormatter(cell, row) {\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.callEdit.bind(this, row),\n        size: \"sm\",\n        className: \"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.toggleDanger.bind(this, row),\n        size: \"sm\",\n        className: \"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"test\",\n    value: function test() {\n      this.props.obj.listOrders.map(function (val, index) {\n        console.log(val);\n        console.log(val._id); //val.map((info, dd) => { console.log(info); })\n      });\n      this.props.obj.listFilters.map(function (val, index) {\n        console.log(val); //console.log(val._id);\n        //val.map((info, dd) => { console.log(info); })\n      }); //console.log(this.props.obj.listFilters[0]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Lista Ordenes\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        data: this.props.obj.listOrders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Descargar Busqueda\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Form, {\n        action: \"\",\n        onSubmit: this.onFormSubmit,\n        method: \"post\",\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"2\",\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"statssus\",\n        id: \"stssatus\",\n        key: \"stasstus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, this.test() //this.props.obj.listFilters.status.map((value, index) => {\n      //return <opction key={index}>{value}</opction>\n      //})\n      ))))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this.renderPagination())))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.props.obj.listOrders,\n        striped: true,\n        hover: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"status\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Estado\"), React.createElement(TableHeaderColumn, {\n        width: '10%',\n        dataField: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Orden\"), React.createElement(TableHeaderColumn, {\n        dataField: \"dni\",\n        width: '10%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"DNI\"), React.createElement(TableHeaderColumn, {\n        width: '20%',\n        dataField: \"customer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Cliente\"), React.createElement(TableHeaderColumn, {\n        width: '20%',\n        dataField: \"skuName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Producto\"), React.createElement(TableHeaderColumn, {\n        dataField: \"city\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Ciudad\"), React.createElement(TableHeaderColumn, {\n        dataField: \"guide\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Guia\"), React.createElement(TableHeaderColumn, {\n        dataField: \"invoice\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Factura\"), React.createElement(TableHeaderColumn, {\n        dataField: \"unit\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Procesado\"), React.createElement(TableHeaderColumn, {\n        dataField: \"store\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Tienda\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.editFormatter.bind(this),\n        width: '10%',\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Accion\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"_id\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Identifier ID\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, this.renderPagination()))))));\n    }\n  }]);\n\n  return OrdersList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return {\n    obj: state.DaoOrders\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    },\n    deleteReducer: function deleteReducer(type, colletion, component, documentId) {//DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n    editFileReducer: function editFileReducer(type, colletion, component, documentId, fileEdit, newFileEdit) {//DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js"],"names":["React","Component","connect","CSVLink","CSVDownload","Row","InputGroup","InputGroupAddon","InputGroupText","Form","FormGroup","Label","Input","Col","Card","CardHeader","CardBody","Modal","ModalHeader","ModalBody","ModalFooter","Button","ButtonGroup","AppSwitch","BootstrapTable","TableHeaderColumn","DbCrud","Pagination","flat","OrdersList","props","onFormSubmit","e","preventDefault","target","console","log","status","value","obj","listStatus","loadReducer","pag","limit","filFile","filValue","NameCustomer","sorts","state","orders","setState","file","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","pagLoad","bind","row","history","push","pathname","danger","tmpRow","documentId","pagNum","pagination","NumPages","undefined","cell","callEdit","toggleDanger","listOrders","map","val","index","_id","listFilters","test","renderPagination","editFormatter","mapStateToProps","DaoOrders","mapDispatchToProps","dispatch","type","colletion","body","dbMLoad","deleteReducer","component","editFileReducer","fileEdit","newFileEdit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { Row,InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Label, Input, Col, Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nimport Pagination from '../Pagination/Pagination';\n\n\nvar flat = true;\n\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass OrdersList extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      orders: {\n        pag:\"1\",\n        limit:\"5\",\n        filFile:\"\",\n        filValue: \"\",\n        sorts:[\n          {\n            file:\"oderDate\",\n            value:1\n          }\n        ]\n      }\n    }\n\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    }\n    this.pagLoad = this.pagLoad.bind(this);\n    //this.toggleDanger = this.toggleDanger.bind(this);\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    if (flat) {\n      flat = false;\n      //Typo: para ser asignado los valores al tener una respuesta del servidor \n      //EndPoint: al que tenemos que llamar para recupuerar datos\n      //Obj Filtro: el objeto que permite realizar una filto en la busqueda\n      this.props.loadReducer('loadOrders', \"orders/find\",this.state.orders);\n      this.props.loadReducer('loadFilters', \"orders/filters\",{});\n    }\n  }\n\n  //Cambia la paginacion\n  pageChanged(e){\n    //console.log(e.target.text)\n  }\n\n  //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n  callEdit(row) {\n    this.props.history.push({\n      pathname: '/Geo/CountriesAdd',\n      row: row\n    })\n  }\n\n  //Cambia el valor a visible del mensaje de alerta \n  //guarda el identificador de la fila que sera afectada \n  toggleDanger(row) {\n    this.setState({\n      danger: !this.state.danger,\n      tmpRow: row.documentId\n    });\n  }\n\n  // Esta funcion escucha los eventos del componente Pagination\n  pagLoad(pagNum,limit) {\n      //Se realiza la solicitud nuevamente para recargar los registros \n      this.props.loadReducer('loadOrders', \"orders/find\", {\n        pag:pagNum,\n        limit:limit,\n        filFile:this.state.orders.filFile,\n        filValue:this.state.orders.filValue,\n        sorts:this.state.orders.sorts\n      });\n      \n      this.setState({\n        orders:{\n          pag:pagNum,\n          limit:limit,\n          filFile:this.state.orders.filFile,\n          filValue:this.state.orders.filValue,\n          sorts:this.state.orders.sorts\n        }\n      });\n      \n  }\n\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    const target = e.target;\n\n    console.log(e.target.status.value)\n    console.log(this.props.obj.listStatus);\n    //e.target.status.value\n    //e.target.NameCustomer.value\n\n    //Se realiza la solicitud nuevamente para recargar los registros \n    this.props.loadReducer('loadOrders', \"orders/find\", {\n      pag:1,\n      limit:5,\n      filFile:\"customer\",\n      filValue:\"\"+e.target.NameCustomer.value,\n      sorts:this.state.orders.sorts\n    });\n    \n    this.setState({\n        orders:{\n          pag:1,\n          limit:5,\n          filFile:\"customer\",\n          filValue:e.target.NameCustomer.value,\n          sorts:this.state.orders.sorts\n        }\n      }\n    );\n  }\n\n  //resibe \n  renderPagination(){\n    if(this.props.obj.pagination.NumPages != undefined)\n    return <Pagination info={this.props.obj.pagination} pagLoad={this.pagLoad.bind()}/>\n    return (<div>Pag...</div>);\n  }\n\n  //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n  editFormatter(cell, row) {\n    return (\n      <ButtonGroup>\n        <Button onClick={this.callEdit.bind(this, row)} size=\"sm\" className=\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-pencil\"></i>\n        </Button>\n        <Button onClick={this.toggleDanger.bind(this, row)} size=\"sm\" className=\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-trash\"></i>\n        </Button>\n      </ButtonGroup>\n    )\n  }\n\n  test(){\n    this.props.obj.listOrders.map(\n      (val, index) => {\n        console.log(val);\n        console.log(val._id);\n        //val.map((info, dd) => { console.log(info); })\n      }\n    )\n\n    this.props.obj.listFilters.map(\n      (val, index) => {\n        console.log(val);\n        //console.log(val._id);\n        //val.map((info, dd) => { console.log(info); })\n      }\n    )\n    \n    //console.log(this.props.obj.listFilters[0]);\n  }\n\n  render() {\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardHeader>\n            Lista Ordenes\n            <div className=\"card-header-actions\">\n              <CSVLink data={this.props.obj.listOrders}>Descargar Busqueda</CSVLink>\n            </div>\n          </CardHeader>\n          <CardBody>\n          <Form action=\"\" onSubmit={this.onFormSubmit} method=\"post\" className=\"form-horizontal\">\n              <FormGroup row>\n                <Col xs=\"12\" md=\"12\">\n                  <Row>\n                    <Col xs=\"2\" md=\"2\">\n                      <Input type=\"select\" name=\"statssus\" id=\"stssatus\" key=\"stasstus\">\n                        \n                          {\n                            this.test()\n                            //this.props.obj.listFilters.status.map((value, index) => {\n                              //return <opction key={index}>{value}</opction>\n                            //})\n                          }\n                        \n                      </Input>\n                    </Col>\n                  </Row>\n                </Col>\n              </FormGroup>\n          </Form>\n          </CardBody>\n          <CardBody>\n            <Row>\n              <Col xs=\"12\" md=\"12\">\n                <div className=\"pull-right\">{this.renderPagination()}</div>\n              </Col>\n            </Row>\n          </CardBody>\n\n          <CardBody>\n              <BootstrapTable  data={this.props.obj.listOrders} striped hover options={this.options}>\n              <TableHeaderColumn dataField='status' dataSort>Estado</TableHeaderColumn>\n              <TableHeaderColumn width={'10%'} dataField='order' >Orden</TableHeaderColumn>\n              <TableHeaderColumn dataField='dni'width={'10%'} >DNI</TableHeaderColumn>\n              <TableHeaderColumn width={'20%'} dataField='customer' >Cliente</TableHeaderColumn>\n              <TableHeaderColumn width={'20%'} dataField='skuName' >Producto</TableHeaderColumn>\n              <TableHeaderColumn dataField='city'width={'20%'} >Ciudad</TableHeaderColumn>\n              <TableHeaderColumn dataField='guide' width={'20%'}>Guia</TableHeaderColumn>\n              <TableHeaderColumn dataField='invoice' width={'20%'}>Factura</TableHeaderColumn>\n              <TableHeaderColumn dataField='unit' width={'20%'}>Procesado</TableHeaderColumn>\n              <TableHeaderColumn dataField='store'>Tienda</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.editFormatter.bind(this)} width={'10%'} dataAlign='right' >Accion</TableHeaderColumn>\n              <TableHeaderColumn isKey={true} dataField='_id' hidden>Identifier ID</TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n\n          <CardBody>\n            <Row>\n              <Col xs=\"12\" md=\"12\">\n                <div className=\"pull-right\">{this.renderPagination()}</div>\n              </Col>\n            </Row>\n          </CardBody>\n          \n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return{\n    obj:state.DaoOrders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    },\n\n    deleteReducer: (type, colletion, component, documentId) => { \n      //DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n\n    editFileReducer: (type, colletion, component, documentId, fileEdit, newFileEdit) => { \n      //DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);\n"]},"metadata":{},"sourceType":"module"}