{"ast":null,"code":"import firebase from './Firebase.js';\nimport { reset } from 'redux-form';\nvar db = firebase.firestore();\nvar UrlServerless = \"https://us-central1-serverless-278902.cloudfunctions.net/serverless\"; //var UrlLocal = \"http://localhost:5555\";\n\nfunction dbMLoad(dispatch, type, route, body) {\n  var method = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'POST';\n  //console.log(\"llego la solicitud DbCrud dbMload\")\n  var queryUrl = UrlServerless + \"/\" + route;\n  var bodyTmp = '{\"_id\": \"5f1a52cc0e41040002b9de36\",\"bDimensions\": { \"heigth\": \"21.9\", \"width\": \"30.9\", \"deep\": \"4.8\", \"weight\": \"0.3\"},\"cDate\": \"2020-07-27T00:00:00.000Z\",\"categories\": [';\n  bodyTmp += '{\"id\": \"5f21e815e740a0527ca94c27\",\"name\": \"Accesorios\"}';\n  bodyTmp += '],\"code\": \"0071641162020\", \"cost\": \"21794\",\"dWarranty\": \"Por defectos de fabricación y\",';\n  bodyTmp += '\"description\": \"<p>Permanente en la mayoría de las superficies. Tinta resistente al agua, de rápido secado que no se decolora. Fórmula no tóxica certificada por AP. Amplia variedad colores para que tu escritura sea única</p>\",';\n  bodyTmp += '\"dimensions\": {\"heigth\": \"21.9\", \"width\": \"30.9\",\"deep\": \"4.8\",\"weight\": \"1.3\"},';\n  bodyTmp += '\"discount\": [{\"stores\": [\"5ee05f8d74e35d0002344c79\", \"5ee05f8d74e35d0002344c7b\"],\"value\": \"20000\",\"startDate\": \"2020/08/10\",\"endDate\": \"2020/08/12\"';\n  bodyTmp += '},{\"stores\": [\"all\"], \"value\": \"15000\", \"startDate\": \"2020/08/28\", \"endDate\": \"2020/09/02\"}';\n  bodyTmp += '],\"document\": [],\"freeShipping\": \"false\",\"idBrand\": \"5f23095f9c0dc3b1daee287a\",\"idSupplier\": \"5f233ee09c0dc3b1daee287e\",';\n  bodyTmp += '\"idTax\": \"5f23589b9c0dc3b1daee2885\",\"images\": [{\"url\": \"product/PACK_SHARPIE_SALUDOS_0071641162020_14552027\",';\n  bodyTmp += '\"title\": \"\", \"alt\": \"\"}],';\n  bodyTmp += '\"keyWords\": [],\"logchange\": [], \"margin\": \"28\",\"name\": \"SPACK SHARPIE SALUDOS\",\"pvp\": \"25934\",\"reference\": \"2071146\",';\n  bodyTmp += '\"sDescription\": \"<p>Pack Sharpie Saludos x18 piezas: 7 Sharpie Fine + 5 Sharpie Metalizados + 6 Tarjetas personalizables, Permanente en la mayoría de las superficies. Tinta resistente al agua, de rápido secado que no se decolora. Fórmula no tóxica certificada por AP. Amplia variedad colores para que tu escritura sea única</p>\",';\n  bodyTmp += '\"specifications\": \"Polipropileno\",\"status\": \"true\",\"stock\": \"800\",\"tags\": [],\"total\": \"46000\",\"video\": [],\"warranty\": \"3\"}';\n  var requestOptions = {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: bodyTmp\n  };\n  console.log(body); // Where we're fetching data from\n\n  fetch(queryUrl, requestOptions).then(function (data) {\n    return data.json();\n  }) //.then(response => {\n  //  return response.json();\n  //})\n  .then(function (data) {\n    dispatch({\n      type: type,\n      data: data\n    });\n  }) // Catch any errors we hit and update the app\n  .catch(function (error) {\n    console.log(\"Error cargando datos \" + error);\n  });\n} //Busca un registro puntual utilizando una llave o value fijo para en un campo o file \n\n\nfunction dbFindRegister(dispatch, type, colletion, file, value) {\n  db.collection(colletion).where(file, \"==\", value).get().then(function (snapshot) {\n    snapshot.forEach(function (doc) {\n      dispatch({\n        type: type,\n        data: doc.data()\n      });\n    });\n  }).catch(function (error) {\n    console.log(\"Error getting documents: \" + error);\n  });\n} //Recupera todos los valores de una Collection de datos \n\n\nfunction dbFindColletion(dispatch, type, colletion) {\n  //Hacemos la llamada a la bd para buscar todos los datos de una collection\n  db.collection(colletion).get().then(function (snapshot) {\n    dispatch({\n      type: type,\n      data: snapshot\n    });\n  }).catch(function (error) {\n    console.log(\"Error getting documents: \" + error);\n  });\n}\n\nfunction objDb(e) {\n  //Recuperamos todos los objetos que tienen una etiqueta refs\n  var dateRef = e.refs;\n  var formData = {};\n  var latitude = 0;\n  var longitude = 0;\n  var valorTmp = ''; //Recorremos el array con todas las etiquetas refs\n\n  for (var field in dateRef) {\n    //Recuperamos el valor que tiene el objeto del formulario \n    valorTmp = document.getElementById(field).value; //Como los tipos Geopoint se component de dos datos tenemos un if que nos permite identificarlos para posteriormente construir el array que correponde a la cordenada\n\n    if (dateRef[field].props.format == 'latitude') latitude = parseFloat(valorTmp);else if (dateRef[field].props.format == 'longitude') longitude = parseFloat(valorTmp);else formData[field] = valorTmp; //Al utilizar maskaras en input utilizamos el caracter * que rechena valores blancos por lo que antes de almacenar \n    //en la bd tenemos que retirar estos caracteres\n  }\n\n  if (latitude != 0 && longitude != 0) formData[\"geopoint\"] = new firebase.firestore.GeoPoint(latitude, longitude);\n  return formData;\n} //Crea un nuevo registro en la base de datos \n\n\nfunction dbCreate(dispatch, type, colletion, component, e) {\n  var formData = objDb(e); //Procedemos ha ingresar el valor en la collection, utilizando como documento id un valor autogenerado \n  //dejamos que Firebase sea quien lo genere \n\n  db.collection(colletion).add(formData).then(function (docRef) {\n    //agregamos al objeto nuevo el valor retornado de identificación \n    formData[\"documentId\"] = docRef.id; //Para tener los listados actualizados reseteamos el componente listado\n\n    dispatch(reset(component)); //Ahora procedemos a llamar la funcion dispatcher quien se encargara de adicionar al state el nuevo objeto \n    //sin tener que realizar una consulta a la bd para recargar los datos.\n\n    dispatch({\n      type: type,\n      data: formData\n    });\n  }).catch(function (error) {\n    console.error(\"Error al crear documento \", error);\n  });\n} //Eliminar un registro o documento en una collection\n\n\nfunction dbDelete(dispatch, type, colletion, component, documentId) {\n  db.collection(colletion).doc(documentId).delete().then(function () {\n    dispatch(reset(component));\n    dispatch({\n      type: type,\n      data: documentId\n    });\n  }).catch(function (error) {\n    console.error(\"Error removing document: \", error);\n  });\n} //Actualizar un registro\n\n\nfunction dbUpdate(dispatch, type, colletion, component, e, documentId) {\n  var formData = objDb(e);\n  formData[\"documentId\"] = documentId; // To update age and favorite color:\n\n  db.collection(colletion).doc(documentId).update(formData).then(function () {\n    dispatch(reset(component));\n    dispatch({\n      type: type,\n      data: formData\n    });\n  });\n} //Actualizar el campo de un registro \n\n\nfunction dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit) {\n  var formData = {};\n  formData[fileEdit] = newFileEdit;\n  var coll = db.collection(colletion).doc(documentId).update(formData).then(function () {\n    dispatch(reset(component));\n    dispatch({\n      type: type,\n      data: formData\n    });\n  });\n}\n\nvar DbCrud = {\n  dbMLoad: dbMLoad,\n  dbFindRegister: dbFindRegister,\n  dbFindColletion: dbFindColletion,\n  dbCreate: dbCreate,\n  dbDelete: dbDelete,\n  dbUpdate: dbUpdate,\n  dbEditFile: dbEditFile\n};\nexport default DbCrud;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/Actions/DbCrud.js"],"names":["firebase","reset","db","firestore","UrlServerless","dbMLoad","dispatch","type","route","body","method","queryUrl","bodyTmp","requestOptions","headers","console","log","fetch","then","data","json","catch","error","dbFindRegister","colletion","file","value","collection","where","get","snapshot","forEach","doc","dbFindColletion","objDb","e","dateRef","refs","formData","latitude","longitude","valorTmp","field","document","getElementById","props","format","parseFloat","GeoPoint","dbCreate","component","add","docRef","id","dbDelete","documentId","delete","dbUpdate","update","dbEditFile","fileEdit","newFileEdit","coll","DbCrud"],"mappings":"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","sourcesContent":["import firebase from './Firebase.js';\nimport { reset } from 'redux-form';\nlet db = firebase.firestore();\n\nvar UrlServerless = \"https://us-central1-serverless-278902.cloudfunctions.net/serverless\";\n//var UrlLocal = \"http://localhost:5555\";\n\nfunction dbMLoad(dispatch, type, route, body, method = 'POST'){\n    //console.log(\"llego la solicitud DbCrud dbMload\")\n    var queryUrl = UrlServerless+\"/\"+route;\n    var bodyTmp = '{\"_id\": \"5f1a52cc0e41040002b9de36\",\"bDimensions\": { \"heigth\": \"21.9\", \"width\": \"30.9\", \"deep\": \"4.8\", \"weight\": \"0.3\"},\"cDate\": \"2020-07-27T00:00:00.000Z\",\"categories\": [';\n    bodyTmp += '{\"id\": \"5f21e815e740a0527ca94c27\",\"name\": \"Accesorios\"}';\n    bodyTmp += '],\"code\": \"0071641162020\", \"cost\": \"21794\",\"dWarranty\": \"Por defectos de fabricación y\",';\n    bodyTmp += '\"description\": \"<p>Permanente en la mayoría de las superficies. Tinta resistente al agua, de rápido secado que no se decolora. Fórmula no tóxica certificada por AP. Amplia variedad colores para que tu escritura sea única</p>\",';\n    bodyTmp += '\"dimensions\": {\"heigth\": \"21.9\", \"width\": \"30.9\",\"deep\": \"4.8\",\"weight\": \"1.3\"},';\n    bodyTmp += '\"discount\": [{\"stores\": [\"5ee05f8d74e35d0002344c79\", \"5ee05f8d74e35d0002344c7b\"],\"value\": \"20000\",\"startDate\": \"2020/08/10\",\"endDate\": \"2020/08/12\"';\n    bodyTmp += '},{\"stores\": [\"all\"], \"value\": \"15000\", \"startDate\": \"2020/08/28\", \"endDate\": \"2020/09/02\"}';\n    bodyTmp += '],\"document\": [],\"freeShipping\": \"false\",\"idBrand\": \"5f23095f9c0dc3b1daee287a\",\"idSupplier\": \"5f233ee09c0dc3b1daee287e\",';\n    bodyTmp += '\"idTax\": \"5f23589b9c0dc3b1daee2885\",\"images\": [{\"url\": \"product/PACK_SHARPIE_SALUDOS_0071641162020_14552027\",';\n    bodyTmp += '\"title\": \"\", \"alt\": \"\"}],';\n    bodyTmp += '\"keyWords\": [],\"logchange\": [], \"margin\": \"28\",\"name\": \"SPACK SHARPIE SALUDOS\",\"pvp\": \"25934\",\"reference\": \"2071146\",';\n    bodyTmp += '\"sDescription\": \"<p>Pack Sharpie Saludos x18 piezas: 7 Sharpie Fine + 5 Sharpie Metalizados + 6 Tarjetas personalizables, Permanente en la mayoría de las superficies. Tinta resistente al agua, de rápido secado que no se decolora. Fórmula no tóxica certificada por AP. Amplia variedad colores para que tu escritura sea única</p>\",';\n    bodyTmp += '\"specifications\": \"Polipropileno\",\"status\": \"true\",\"stock\": \"800\",\"tags\": [],\"total\": \"46000\",\"video\": [],\"warranty\": \"3\"}';\n    const requestOptions = {\n        method: method,\n        headers: { \n            \"Content-Type\": \"application/json\"\n        },\n        body:bodyTmp\n     };\n     console.log(body);\n\n    // Where we're fetching data from\n    fetch(queryUrl,requestOptions)\n    .then(data => data.json())\n    //.then(response => {\n      //  return response.json();\n    //})\n    .then(data => {\n        dispatch({ type: type, data: data }) \n    })\n    // Catch any errors we hit and update the app\n    .catch(function (error) {\n        console.log(\"Error cargando datos \" + error);\n    });      \n}\n\n\n\n//Busca un registro puntual utilizando una llave o value fijo para en un campo o file \nfunction dbFindRegister(dispatch, type, colletion, file, value) {\n    db.collection(colletion)\n        .where(file, \"==\", value).get()\n        .then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n                dispatch({ type: type, data: doc.data() })\n            });\n        })\n        .catch(function (error) {\n            console.log(\"Error getting documents: \" + error);\n        });\n}\n\n//Recupera todos los valores de una Collection de datos \nfunction dbFindColletion(dispatch, type, colletion) {\n    //Hacemos la llamada a la bd para buscar todos los datos de una collection\n    db.collection(colletion)\n        .get()\n        .then(function (snapshot) {\n            dispatch({ type: type, data: snapshot });\n        })\n        .catch(function (error) {\n            console.log(\"Error getting documents: \" + error);\n        });\n}\n\nfunction objDb(e){\n     //Recuperamos todos los objetos que tienen una etiqueta refs\n     const dateRef = e.refs;\n     const formData = {};\n     var latitude = 0;\n     var longitude = 0;\n     var valorTmp = '';\n     //Recorremos el array con todas las etiquetas refs\n     for (const field in dateRef) {\n         //Recuperamos el valor que tiene el objeto del formulario \n         valorTmp = document.getElementById(field).value;\n         //Como los tipos Geopoint se component de dos datos tenemos un if que nos permite identificarlos para posteriormente construir el array que correponde a la cordenada\n         if (dateRef[field].props.format == 'latitude') latitude = parseFloat(valorTmp);\n         else if (dateRef[field].props.format == 'longitude') longitude = parseFloat(valorTmp);\n         else formData[field] = valorTmp;\n         //Al utilizar maskaras en input utilizamos el caracter * que rechena valores blancos por lo que antes de almacenar \n         //en la bd tenemos que retirar estos caracteres\n     }\n \n     if (latitude != 0 && longitude != 0) formData[\"geopoint\"] = new firebase.firestore.GeoPoint(latitude, longitude);\n     return formData;\n}\n\n//Crea un nuevo registro en la base de datos \nfunction dbCreate(dispatch, type, colletion, component, e) {\n    const formData = objDb(e);\n    //Procedemos ha ingresar el valor en la collection, utilizando como documento id un valor autogenerado \n    //dejamos que Firebase sea quien lo genere \n    db.collection(colletion).add(formData)\n        .then(function (docRef) {\n            //agregamos al objeto nuevo el valor retornado de identificación \n            formData[\"documentId\"] = docRef.id;\n            //Para tener los listados actualizados reseteamos el componente listado\n            dispatch(reset(component));\n            //Ahora procedemos a llamar la funcion dispatcher quien se encargara de adicionar al state el nuevo objeto \n            //sin tener que realizar una consulta a la bd para recargar los datos.\n            dispatch({ type: type, data: formData });\n        })\n        .catch(function (error) { console.error(\"Error al crear documento \", error); });\n}\n\n//Eliminar un registro o documento en una collection\nfunction dbDelete(dispatch, type, colletion, component, documentId) {\n    db.collection(colletion).doc(documentId).delete().then(function () {\n        dispatch(reset(component));\n        dispatch({ type: type, data: documentId });\n    }).catch(function (error) { console.error(\"Error removing document: \", error); });\n}\n\n//Actualizar un registro\nfunction dbUpdate(dispatch, type, colletion, component, e, documentId) {\n    const formData = objDb(e);\n    formData[\"documentId\"] = documentId;\n    // To update age and favorite color:\n    db.collection(colletion).doc(documentId).update(formData)\n    .then(function () {\n        dispatch(reset(component));\n        dispatch({ type: type, data: formData });\n    });\n\n}\n\n//Actualizar el campo de un registro \nfunction dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit){\n    const formData = {};\n    formData[fileEdit] = newFileEdit;\n    var coll = db.collection(colletion).doc(documentId)\n    .update(formData)\n    .then(function () {\n        dispatch(reset(component));\n        dispatch({ type: type, data: formData });\n    });\n}\n\nconst DbCrud = { dbMLoad, dbFindRegister, dbFindColletion, dbCreate, dbDelete, dbUpdate, dbEditFile }\n\nexport default DbCrud;"]},"metadata":{},"sourceType":"module"}