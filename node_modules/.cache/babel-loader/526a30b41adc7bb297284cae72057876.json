{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/src/views/Owner/Geo/CitiesList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardBody, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    };\n    _this.state = {\n      documentId: _this.props.match.params.idDocument,\n      countryObj: \"\",\n      statesObj: \"\",\n      citiesObj: \"\"\n    };\n\n    if (_this.props.obj.length == 0) {\n      _this.props.history.push('/Geo/CountriesList');\n    } else {\n      _this.props.obj.forEach(function (country) {\n        if (country.documentId == this.props.match.params.idDocument) {\n          country.states.forEach(function (states) {\n            if (states.code == this.props.match.params.Code) {\n              this.state = {\n                documentId: this.props.match.params.idDocument,\n                countryObj: country,\n                statesObj: states,\n                citiesObj: states.cities\n              };\n            }\n          }.bind(this));\n        }\n      }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    }\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      console.log(\"Cat\");\n    }\n  }, {\n    key: \"loadStates\",\n    value: function loadStates() {\n      console.log(\"id\");\n    }\n  }, {\n    key: \"editFormatter\",\n    value: function editFormatter(cell, row) {\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        className: \"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(Button, {\n        size: \"sm\",\n        className: \"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"editObject\",\n    value: function editObject(row) {\n      this.props.history.push('/Geo/StatesList/' + row.id);\n    }\n  }, {\n    key: \"loadStates\",\n    value: function loadStates(cell, row) {\n      var _this2 = this;\n\n      return React.createElement(Button, {\n        size: \"sm\",\n        onClick: function onClick() {\n          return _this2.editObject(row);\n        },\n        className: \"btn-dropbox btn-brand text mr-1 mb-1 btn btn-secondary btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Ver Estados\");\n    }\n  }, {\n    key: \"geopoint\",\n    value: function geopoint(cell, row) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Lat: \", row.geopoint.latitude, \" Lon:\", row.geopoint.longitude);\n    }\n  }, {\n    key: \"active\",\n    value: function active(cell, row) {\n      if (row.active == '1') {\n        return React.createElement(AppSwitch, {\n          className: 'mx-1',\n          variant: 'pill',\n          color: 'success',\n          label: true,\n          checked: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(AppSwitch, {\n          className: 'mx-1',\n          variant: 'pill',\n          color: 'success',\n          label: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"callBackCountry\",\n    value: function callBackCountry() {\n      this.props.history.push('/Geo/CountriesList');\n    }\n  }, {\n    key: \"callBackState\",\n    value: function callBackState() {\n      this.props.history.push('/Geo/StatesList/' + this.state.documentId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        onClick: this.callBackCountry.bind(this),\n        className: \"btn btn-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Pais: \", this.state.countryObj.countryName), React.createElement(\"i\", {\n        onClick: this.callBackState.bind(this),\n        className: \"btn btn-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Estado: \", this.state.statesObj.stateName), React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/AllenFang/react-bootstrap-table\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Aprende\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa icon-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), \"\\xA0Crear Ciudad\"), React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.callBackState.bind(this),\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa icon-arrow-left-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), \"\\xA0Regresar\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(BootstrapTable, {\n        data: this.state.citiesObj,\n        striped: true,\n        hover: true,\n        pagination: true,\n        search: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"cityName\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Estado\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Codigo General\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.geopoint.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Geo Punto\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.active.bind(this),\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Activo\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.editFormatter,\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Action\")))));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    obj: state.DaoGeo\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispReducer: function dispReducer(type, colletion) {//   DbCrud.dbFindColletion(dispatch, type, colletion);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/src/views/Owner/Geo/CitiesList.js"],"names":["React","Component","connect","Card","CardHeader","CardBody","Button","ButtonGroup","AppSwitch","BootstrapTable","TableHeaderColumn","DbCrud","List","props","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","state","documentId","match","params","idDocument","countryObj","statesObj","citiesObj","obj","length","history","push","forEach","country","states","code","Code","cities","bind","error","errorInfo","console","log","cell","row","id","editObject","geopoint","latitude","longitude","active","callBackCountry","countryName","callBackState","stateName","editFormatter","mapStateToProps","DaoGeo","mapDispatchToProps","dispatch","dispReducer","type","colletion"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {Card, CardHeader, CardBody, Button, ButtonGroup} from 'reactstrap';\nimport { AppSwitch } from '@coreui/react'\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\n\nclass List extends Component {\n\n  constructor(props) {\n    super(props);\n    this.options = {\n        sortIndicator: true,\n        hideSizePerPage: true,\n        paginationSize: 3,\n        hidePageListOnlyOnePage: true,\n        alwaysShowAllBtns: false,\n        withFirstAndLast: false\n      }\n    this.state = {\n        documentId: this.props.match.params.idDocument,\n        countryObj:\"\",\n        statesObj:\"\",\n        citiesObj:\"\"\n    };\n\n    if(this.props.obj.length == 0){\n     this.props.history.push('/Geo/CountriesList');\n    }else{\n        this.props.obj.forEach(function(country) {\n            if(country.documentId == this.props.match.params.idDocument){\n                country.states.forEach(function(states) {\n                    if(states.code == this.props.match.params.Code){\n                        this.state = {\n                            documentId: this.props.match.params.idDocument,\n                            countryObj:country,\n                            statesObj:states,\n                            citiesObj:states.cities\n                        };\n\n                    }\n                }.bind(this));\n            }\n        }.bind(this));\n    }\n  }\n\n  componentDidCatch (error, errorInfo) { \n    console.log(\"Cat\")\n   } \n\n  loadStates(){\n    console.log(\"id\");\n  }\n\n editFormatter(cell, row) {\n    return(\n        <ButtonGroup>\n            <Button size=\"sm\"  className=\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n              <i className=\"icon-pencil\"></i>\n            </Button>\n            <Button size=\"sm\" className=\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n              <i className=\"icon-trash\"></i>\n            </Button>\n        </ButtonGroup>\n    )\n}\n\neditObject(row) {\n  this.props.history.push('/Geo/StatesList/'+row.id);\n}\n\nloadStates(cell,row){\n  return(\n    <Button size=\"sm\"  onClick={()=>this.editObject(row)} className=\"btn-dropbox btn-brand text mr-1 mb-1 btn btn-secondary btn-lg\">\n        Ver Estados\n    </Button>\n  ) \n}\n\ngeopoint(cell, row){\n return(\n    <div>\n      Lat: {row.geopoint.latitude} Lon:{row.geopoint.longitude} \n    </div>\n  );\n}\nactive(cell, row){\n  if(row.active == '1'){\n      return(\n          <AppSwitch className={'mx-1'} variant={'pill'} color={'success'} label checked/>\n      );\n    }else{\n      return(\n         <AppSwitch className={'mx-1'} variant={'pill'} color={'success'} label  />\n      );\n    }\n}\n\ncallBackCountry(){this.props.history.push('/Geo/CountriesList');}\ncallBackState(){this.props.history.push('/Geo/StatesList/'+this.state.documentId);}\n\nrender() {\n\n  return (\n      <div className=\"animated\">\n        <Card>\n          <CardHeader>\n            <i onClick={this.callBackCountry.bind(this)} className=\"btn btn-link\">Pais: {this.state.countryObj.countryName}</i>\n            <i onClick={this.callBackState.bind(this)} className=\"btn btn-link\">Estado: {this.state.statesObj.stateName}</i>\n            <div className=\"card-header-actions\">\n              <a href=\"https://github.com/AllenFang/react-bootstrap-table\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"card-header-action\">\n                <small className=\"text-muted\">Aprende</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n              \n            <Button color=\"primary\" ><i className=\"fa icon-plus\"></i>&nbsp;Crear Ciudad</Button>\n            <Button color=\"secondary\" onClick={this.callBackState.bind(this)} className=\"float-right\"><i className=\"fa icon-arrow-left-circle\"></i>&nbsp;Regresar</Button>\n            <Row>&nbsp;</Row>\n            <BootstrapTable data={this.state.citiesObj} striped hover pagination search options={this.options} >\n              <TableHeaderColumn dataField='cityName' dataSort>Estado</TableHeaderColumn>\n              <TableHeaderColumn isKey dataField='code' >Codigo General</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.geopoint.bind(this)} >Geo Punto</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.active.bind(this)} dataAlign='center' >Activo</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.editFormatter} dataAlign='right' >Action</TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return{\n    obj: state.DaoGeo\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{ \n    dispReducer: (type, colletion) => {\n        //   DbCrud.dbFindColletion(dispatch, type, colletion);\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n"]},"metadata":{},"sourceType":"module"}