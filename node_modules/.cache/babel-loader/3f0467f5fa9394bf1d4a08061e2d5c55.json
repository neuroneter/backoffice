{"ast":null,"code":"// Estructura de DB para Usuario\nvar ordersModel = [{\n  status: undefined,\n  order: undefined,\n  date: undefined,\n  reference: undefined,\n  code: undefined,\n  skuName: undefined,\n  lot: undefined,\n  value: undefined,\n  discount: undefined,\n  points: undefined,\n  price: undefined,\n  shipping: undefined,\n  totalPay: undefined,\n  discountName: undefined,\n  customer: undefined,\n  dni: undefined,\n  phone: undefined,\n  state: undefined,\n  city: undefined,\n  divipola: undefined,\n  neighborhood: undefined,\n  address: undefined,\n  addAddress: undefined,\n  deliveryOnName: undefined,\n  slaType: undefined,\n  estimatedShippingDate: undefined,\n  ansDelivery: undefined,\n  oderDate: undefined,\n  stock: undefined,\n  guide: undefined,\n  dispatch: undefined,\n  carrier: undefined,\n  trakingUrl: undefined,\n  invoice: undefined,\n  invoiceUrl: undefined,\n  observations: undefined,\n  unit: undefined,\n  employee: undefined\n}];\nvar orders = {\n  listOrders: [],\n  listFilters: [],\n  pagination: [],\n  listOrdersEdit: [] //se pasa un estado por defecto para definicion de estructura\n\n};\n\nfunction Orders() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : orders;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  //console.log(action.data);\n  var NewState = Object.assign({}, state);\n\n  if (action.type == \"loadOrders\") {\n    NewState.pagination = action.data.info;\n    NewState.listOrders = action.data.data;\n  }\n\n  if (action.type == \"loadFilters\") {\n    //action.data.data.unshift({_id:0,code:0,name:\"Todas los Proveedores\"});\n    //console.log(action.data.status);\n    NewState.listFilters = action.data;\n  }\n\n  if (action.type == \"loadOrdersEdit\") {\n    NewState.listOrdersEdit = action.data.data;\n  }\n\n  return NewState;\n}\n\nvar DaoOrders = {\n  Orders: Orders\n};\nexport default DaoOrders;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/Dao/DaoOrders.js"],"names":["ordersModel","status","undefined","order","date","reference","code","skuName","lot","value","discount","points","price","shipping","totalPay","discountName","customer","dni","phone","state","city","divipola","neighborhood","address","addAddress","deliveryOnName","slaType","estimatedShippingDate","ansDelivery","oderDate","stock","guide","dispatch","carrier","trakingUrl","invoice","invoiceUrl","observations","unit","employee","orders","listOrders","listFilters","pagination","listOrdersEdit","Orders","action","NewState","Object","assign","type","data","info","DaoOrders"],"mappings":"AACA;AACA,IAAMA,WAAW,GAAG,CAChB;AACAC,EAAAA,MAAM,EAACC,SADP;AAEAC,EAAAA,KAAK,EAACD,SAFN;AAGAE,EAAAA,IAAI,EAACF,SAHL;AAIAG,EAAAA,SAAS,EAACH,SAJV;AAKAI,EAAAA,IAAI,EAACJ,SALL;AAMAK,EAAAA,OAAO,EAACL,SANR;AAOAM,EAAAA,GAAG,EAACN,SAPJ;AAQAO,EAAAA,KAAK,EAACP,SARN;AASAQ,EAAAA,QAAQ,EAACR,SATT;AAUAS,EAAAA,MAAM,EAACT,SAVP;AAWAU,EAAAA,KAAK,EAACV,SAXN;AAYAW,EAAAA,QAAQ,EAACX,SAZT;AAaAY,EAAAA,QAAQ,EAACZ,SAbT;AAcAa,EAAAA,YAAY,EAACb,SAdb;AAeAc,EAAAA,QAAQ,EAACd,SAfT;AAgBAe,EAAAA,GAAG,EAACf,SAhBJ;AAiBAgB,EAAAA,KAAK,EAAChB,SAjBN;AAkBAiB,EAAAA,KAAK,EAACjB,SAlBN;AAmBAkB,EAAAA,IAAI,EAAClB,SAnBL;AAoBAmB,EAAAA,QAAQ,EAACnB,SApBT;AAqBAoB,EAAAA,YAAY,EAACpB,SArBb;AAsBAqB,EAAAA,OAAO,EAACrB,SAtBR;AAuBAsB,EAAAA,UAAU,EAACtB,SAvBX;AAwBAuB,EAAAA,cAAc,EAACvB,SAxBf;AAyBAwB,EAAAA,OAAO,EAACxB,SAzBR;AA0BAyB,EAAAA,qBAAqB,EAACzB,SA1BtB;AA2BA0B,EAAAA,WAAW,EAAC1B,SA3BZ;AA4BA2B,EAAAA,QAAQ,EAAC3B,SA5BT;AA6BA4B,EAAAA,KAAK,EAAC5B,SA7BN;AA8BA6B,EAAAA,KAAK,EAAC7B,SA9BN;AA+BA8B,EAAAA,QAAQ,EAAC9B,SA/BT;AAgCA+B,EAAAA,OAAO,EAAC/B,SAhCR;AAiCAgC,EAAAA,UAAU,EAAChC,SAjCX;AAkCAiC,EAAAA,OAAO,EAACjC,SAlCR;AAmCAkC,EAAAA,UAAU,EAAClC,SAnCX;AAoCAmC,EAAAA,YAAY,EAACnC,SApCb;AAqCAoC,EAAAA,IAAI,EAACpC,SArCL;AAsCAqC,EAAAA,QAAQ,EAACrC;AAtCT,CADgB,CAApB;AA0CA,IAAMsC,MAAM,GAAG;AAACC,EAAAA,UAAU,EAAC,EAAZ;AAAgBC,EAAAA,WAAW,EAAC,EAA5B;AAAgCC,EAAAA,UAAU,EAAC,EAA3C;AAA+CC,EAAAA,cAAc,EAAC,EAA9D,CAEf;;AAFe,CAAf;;AAGA,SAASC,MAAT,GAAuC;AAAA,MAAvB1B,KAAuB,uEAAfqB,MAAe;AAAA,MAAPM,MAAO;AACnC;AACA,MAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiB9B,KAAjB,CAAf;;AACA,MAAG2B,MAAM,CAACI,IAAP,IAAe,YAAlB,EAA+B;AAC3BH,IAAAA,QAAQ,CAACJ,UAAT,GAAsBG,MAAM,CAACK,IAAP,CAAYC,IAAlC;AACAL,IAAAA,QAAQ,CAACN,UAAT,GAAsBK,MAAM,CAACK,IAAP,CAAYA,IAAlC;AACH;;AACD,MAAGL,MAAM,CAACI,IAAP,IAAe,aAAlB,EAAgC;AAC5B;AACA;AACAH,IAAAA,QAAQ,CAACL,WAAT,GAAuBI,MAAM,CAACK,IAA9B;AACH;;AACD,MAAGL,MAAM,CAACI,IAAP,IAAe,gBAAlB,EAAmC;AAC/BH,IAAAA,QAAQ,CAACH,cAAT,GAA0BE,MAAM,CAACK,IAAP,CAAYA,IAAtC;AACH;;AACD,SAAOJ,QAAP;AACH;;AAED,IAAMM,SAAS,GAAG;AAACR,EAAAA,MAAM,EAANA;AAAD,CAAlB;AAEA,eAAeQ,SAAf","sourcesContent":["\n// Estructura de DB para Usuario\nconst ordersModel = [\n    {\n    status:undefined,\n    order:undefined,\n    date:undefined,\n    reference:undefined,\n    code:undefined,\n    skuName:undefined,\n    lot:undefined,\n    value:undefined,\n    discount:undefined,\n    points:undefined,\n    price:undefined,\n    shipping:undefined,\n    totalPay:undefined,\n    discountName:undefined,\n    customer:undefined,\n    dni:undefined,\n    phone:undefined,\n    state:undefined,\n    city:undefined,\n    divipola:undefined,\n    neighborhood:undefined,\n    address:undefined,\n    addAddress:undefined,\n    deliveryOnName:undefined,\n    slaType:undefined,\n    estimatedShippingDate:undefined,\n    ansDelivery:undefined,\n    oderDate:undefined,\n    stock:undefined,\n    guide:undefined,\n    dispatch:undefined,\n    carrier:undefined,\n    trakingUrl:undefined,\n    invoice:undefined,\n    invoiceUrl:undefined,\n    observations:undefined,\n    unit:undefined,\n    employee:undefined\n}]\n\nconst orders = {listOrders:[], listFilters:[], pagination:[], listOrdersEdit:[]}\n\n//se pasa un estado por defecto para definicion de estructura\nfunction Orders(state = orders, action){\n    //console.log(action.data);\n    var NewState = Object.assign({},state);\n    if(action.type == \"loadOrders\"){\n        NewState.pagination = action.data.info;\n        NewState.listOrders = action.data.data;\n    }\n    if(action.type == \"loadFilters\"){\n        //action.data.data.unshift({_id:0,code:0,name:\"Todas los Proveedores\"});\n        //console.log(action.data.status);\n        NewState.listFilters = action.data;\n    }\n    if(action.type == \"loadOrdersEdit\"){\n        NewState.listOrdersEdit = action.data.data;\n    }\n    return NewState;\n}\n\nconst DaoOrders = {Orders}\n\nexport default DaoOrders;"]},"metadata":{},"sourceType":"module"}