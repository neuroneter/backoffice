{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _CloudinaryComponent2 = _interopRequireDefault(require(\"../CloudinaryComponent\"));\n\nvar _Util = require(\"../../Util\");\n\nvar _cloudinaryCore = require(\"cloudinary-core\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar RESPONSIVE_OVERRIDE_WARNING = [\"Warning: passing a number value for width cancels the 'responsive' prop's effect on the image transformation.\", \"The 'responsive' prop affects the image transformation only when width === 'auto'.\", \"Passing 'width=\\\"auto\\\" responsive' will affect the actual image width that is fetched from Cloudinary.\", \"The 'responsive' prop causes the Image component to request an image which width is equal to the width of it's container.\", \"When passing 'width=\\\"auto\\\" responsive', you can set the <img> element width by passing a 'style' prop\"].join('\\n');\n/**\n * A component representing a Cloudinary served image\n */\n\nvar Image =\n/*#__PURE__*/\nfunction (_CloudinaryComponent) {\n  _inherits(Image, _CloudinaryComponent);\n\n  var _super = _createSuper(Image);\n\n  function Image(props, context) {\n    var _this;\n\n    _classCallCheck(this, Image);\n\n    _this = _super.call(this, props, context);\n\n    _defineProperty(_assertThisInitialized(_this), \"isResponsive\", function () {\n      var _this$getExtendedProp = _this.getExtendedProps(),\n          responsive = _this$getExtendedProp.responsive,\n          width = _this$getExtendedProp.width;\n\n      if (responsive && width !== 'auto') {\n        console.warn(RESPONSIVE_OVERRIDE_WARNING);\n      }\n\n      return responsive && _this.imgElement && _this.imgElement.current;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getOptions\", function () {\n      var extendedProps = _this.getExtendedProps();\n\n      var _extendedProps$_this$ = _objectSpread(_objectSpread({}, extendedProps), _this.getTransformation(extendedProps)),\n          children = _extendedProps$_this$.children,\n          innerRef = _extendedProps$_this$.innerRef,\n          options = _objectWithoutProperties(_extendedProps$_this$, [\"children\", \"innerRef\"]);\n\n      if (!_this.shouldLazyLoad()) {\n        delete options.loading;\n      }\n\n      return options;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAttributes\", function () {\n      var additionalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var placeholder = additionalOptions.placeholder;\n\n      var options = _objectSpread(_objectSpread({}, _this.getOptions()), additionalOptions);\n\n      var _extractCloudinaryPro = (0, _Util.extractCloudinaryProps)(options),\n          nonCloudinaryProps = _extractCloudinaryPro.nonCloudinaryProps; // React requires camelCase instead of snake_case attributes\n\n\n      var attributes = _objectSpread(_objectSpread({}, _cloudinaryCore.Util.withCamelCaseKeys((0, _Util.getImageTag)(options).attributes())), nonCloudinaryProps); // We want to keep 'data-src' if it exists\n\n\n      if (attributes.dataSrc) {\n        attributes['data-src'] = attributes.dataSrc;\n      } // Set placeholder Id\n\n\n      if (placeholder && attributes.id) {\n        attributes.id = attributes.id + '-cld-placeholder';\n      } // Set data-src if lazy loading and not in view\n\n\n      if (_this.shouldLazyLoad()) {\n        attributes['data-src'] = attributes.dataSrc || attributes.src;\n        delete attributes.src;\n      } // Remove unneeded attributes,\n\n\n      ['dataSrc', 'accessibility', 'placeholder', 'breakpoints'].forEach(function (attr) {\n        delete attributes[attr];\n      });\n      return attributes;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function () {\n      // Handle lazy loading\n      if (_this.shouldLazyLoad()) {\n        // Will set this.state.isInView = true when in view\n        _cloudinaryCore.Util.detectIntersection(_this.imgElement.current, _this.onIntersect);\n      } else {\n        // Handle responsive only if lazy loading wasn't requested or already handled\n        if (_this.isResponsive()) {\n          var options = _this.getOptions();\n\n          var placeholder = _this.getPlaceholderType(); // Make placeholder responsive\n\n\n          if (placeholder) {\n            var removePlaceholderListener = (0, _Util.makeElementResponsive)(_this.placeholderElement.current, _objectSpread(_objectSpread({}, options), {}, {\n              placeholder: placeholder\n            }));\n\n            _this.listenerRemovers.push(removePlaceholderListener);\n          } // Make original image responsive\n\n\n          var removeImgListener = (0, _Util.makeElementResponsive)(_this.imgElement.current, options);\n\n          _this.listenerRemovers.push(removeImgListener);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"attachRef\", function (imgElement) {\n      var innerRef = _this.props.innerRef;\n      _this.imgElement.current = imgElement;\n\n      if (innerRef) {\n        if (innerRef instanceof Function) {\n          innerRef(imgElement);\n        } else {\n          innerRef.current = imgElement;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"shouldLazyLoad\", function () {\n      var _this$getExtendedProp2 = _this.getExtendedProps(),\n          loading = _this$getExtendedProp2.loading;\n\n      var isInView = _this.state.isInView;\n      return !isInView && (loading === \"lazy\" || loading === \"auto\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleImageLoaded\", function () {\n      var onLoad = _this.props.onLoad;\n\n      _this.setState({\n        isLoaded: true\n      }, function () {\n        if (onLoad) {\n          onLoad();\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPlaceholder\", function (placeholder, attributes) {\n      attributes.style = _objectSpread(_objectSpread({}, attributes.style || {}), {}, {\n        opacity: 0,\n        position: 'absolute'\n      });\n      attributes.onLoad = _this.handleImageLoaded;\n      var placeholderWrapperStyle = {\n        display: 'inline'\n      };\n\n      var placeholderAttributes = _this.getAttributes({\n        placeholder: placeholder\n      });\n\n      return (\n        /*#__PURE__*/\n        _react[\"default\"].createElement(_react.Fragment, null, _this.renderImage(attributes),\n        /*#__PURE__*/\n        _react[\"default\"].createElement(\"div\", {\n          style: placeholderWrapperStyle\n        },\n        /*#__PURE__*/\n        _react[\"default\"].createElement(\"img\", _extends({\n          ref: _this.placeholderElement\n        }, placeholderAttributes))))\n      );\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderImage\", function (attributes) {\n      return (\n        /*#__PURE__*/\n        _react[\"default\"].createElement(\"img\", _extends({\n          ref: _this.attachRef\n        }, attributes))\n      );\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPlaceholderType\", function () {\n      var _this$getExtendedProp3 = _this.getExtendedProps(),\n          children = _this$getExtendedProp3.children;\n\n      var placeholder = _this.getChildPlaceholder(children);\n\n      return placeholder ? placeholder.props.type : null;\n    });\n\n    _this.imgElement =\n    /*#__PURE__*/\n    (0, _react.createRef)();\n    _this.placeholderElement =\n    /*#__PURE__*/\n    (0, _react.createRef)();\n    _this.state = {\n      isLoaded: false\n    };\n    _this.listenerRemovers = [];\n    return _this;\n  }\n  /**\n   * @return true when this image element should be made responsive, false otherwise.\n   */\n\n\n  _createClass(Image, [{\n    key: \"componentDidMount\",\n\n    /**\n     * Invoked immediately after a component is mounted (inserted into the tree)\n     */\n    value: function componentDidMount() {\n      this.update();\n    }\n    /**\n     * Invoked immediately after updating occurs. This method is not called for the initial render.\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.update();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.listenerRemovers.forEach(function (removeListener) {\n        removeListener();\n      });\n    }\n    /**\n     * Updates this Image's isLoaded state,\n     * And fires props.onLoad if exists.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoaded = this.state.isLoaded;\n      var attributes = this.getAttributes();\n      var placeholder = this.getPlaceholderType(); //If image wasn't loaded and there's a child placeholder then we render it.\n\n      if (!isLoaded && placeholder) {\n        return this.renderPlaceholder(placeholder, attributes);\n      }\n\n      return this.renderImage(attributes);\n    }\n  }]);\n\n  return Image;\n}(_CloudinaryComponent2[\"default\"]);\n\nImage.defaultProps = {};\nImage.propTypes = _CloudinaryComponent2[\"default\"].propTypes;\nImage.propTypes.responsive = _propTypes[\"default\"].bool;\nImage.propTypes.loading = _propTypes[\"default\"].string;\nImage.propTypes.accessibility = _propTypes[\"default\"].string;\nvar _default = Image;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}