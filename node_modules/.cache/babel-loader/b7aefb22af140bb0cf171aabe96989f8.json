{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink } from \"react-csv\";\nimport { Row, InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Input, Col, Card, CardHeader, CardBody, Button, ButtonGroup } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { AppSwitch } from '@coreui/react';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\nimport Pagination from '../Pagination/Pagination';\nimport _CurrencyFormat from 'react-currency-format';\nvar flat = true;\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.state = {\n      filters: {\n        pag: \"1\",\n        limit: \"5\",\n        filFile: \"\",\n        filValue: \"\",\n        sorts: [{\n          file: \"cDate\",\n          value: 1\n        }]\n      }\n    };\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    };\n    _this.pagLoad = _this.pagLoad.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.toggleDanger = this.toggleDanger.bind(this);\n\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //console.log(this.props);\n      //console.log(this.store);\n      if (flat) {\n        flat = false; //Typo: para ser asignado los valores al tener una respuesta del servidor \n        //EndPoint: al que tenemos que llamar para recupuerar datos\n        //Obj Filtro: el objeto que permite realizar una filto en la busqueda\n\n        this.props.loadReducer('loadProducts', \"products/find\", this.state.filters); //this.props.loadReducer('loadFilters', \"orders/filters\",{});\n      }\n    } //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n\n  }, {\n    key: \"callEdit\",\n    value: function callEdit(row) {\n      localStorage.setItem('row', JSON.stringify(row));\n      localStorage.setItem('listCategories', JSON.stringify(this.props.obj.listCategories));\n      localStorage.setItem('listBrands', JSON.stringify(this.props.obj.listBrands));\n      this.props.history.push({\n        pathname: '/Products/Edit/' + row.code + '/' + row.reference + \"/\" + row._id,\n        row: row\n      });\n    } //Cambia el valor a visible del mensaje de alerta \n    //guarda el identificador de la fila que sera afectada \n\n  }, {\n    key: \"toggleDanger\",\n    value: function toggleDanger(row) {\n      this.setState({\n        danger: !this.state.danger,\n        tmpRow: row.order\n      });\n    } // Esta funcion escucha los eventos del componente Pagination\n\n  }, {\n    key: \"pagLoad\",\n    value: function pagLoad(pagNum, limit) {\n      //Se realiza la solicitud nuevamente para recargar los registros \n      this.props.loadReducer('loadProducts', \"products/find\", {\n        pag: pagNum,\n        limit: limit,\n        filFile: this.state.filters.filFile,\n        filValue: this.state.filters.filValue,\n        sorts: this.state.filters.sorts\n      });\n      this.setState({\n        orders: {\n          pag: pagNum,\n          limit: limit,\n          filFile: this.state.filters.filFile,\n          filValue: this.state.filters.filValue,\n          sorts: this.state.filters.sorts\n        }\n      });\n    }\n  }, {\n    key: \"onClickForm\",\n    value: function onClickForm(idInput) {\n      var infoTmp = document.getElementById(idInput).value;\n      if (infoTmp == \"0\") infoTmp = \"\"; //Se realiza la solicitud nuevamente para recargar los registros \n\n      this.props.loadReducer('loadOrders', \"orders/find\", {\n        pag: 1,\n        limit: 5,\n        filFile: idInput,\n        filValue: infoTmp,\n        sorts: this.state.filters.sorts\n      }); //Actualizamos el esta con los valores de filtros seleccionados esto por si se utiliza la \n      //paginacion por lo que se requiere que el estado mantenga el filtro de campo \n\n      this.setState({\n        filters: {\n          pag: 1,\n          limit: 5,\n          filFile: idInput,\n          filValue: infoTmp,\n          sorts: this.state.filters.sorts\n        }\n      });\n    } //resibe \n\n  }, {\n    key: \"renderPagination\",\n    value: function renderPagination() {\n      if (this.props.obj.pagination.NumPages != undefined) return React.createElement(Pagination, {\n        info: this.props.obj.pagination,\n        pagLoad: this.pagLoad.bind(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Pag...\");\n    } //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n\n  }, {\n    key: \"editFormatter\",\n    value: function editFormatter(cell, row) {\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.callEdit.bind(this, row),\n        size: \"sm\",\n        className: \"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.toggleDanger.bind(this, row),\n        size: \"sm\",\n        className: \"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"editCost\",\n    value: function editCost(cell, row) {\n      return this.CurrencyFormat(row.cost);\n    }\n  }, {\n    key: \"editPrice\",\n    value: function editPrice(cell, row) {\n      return this.CurrencyFormat(row.price);\n    }\n  }, {\n    key: \"editTotal\",\n    value: function editTotal(cell, row) {\n      return this.CurrencyFormat(row.total);\n    }\n  }, {\n    key: \"CurrencyFormat\",\n    value: function CurrencyFormat(value) {\n      return React.createElement(_CurrencyFormat, {\n        value: parseInt(value),\n        displayType: 'text',\n        thousandSeparator: true,\n        decimalSeparator: \"\",\n        prefix: '$',\n        renderText: function renderText(value) {\n          return value;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"nameBrand\",\n    value: function nameBrand(cell, row) {\n      console.log(row);\n      this.props.obj.listBrands.forEach(function (element) {\n        console.log(row.idBrand + \"  ---   \" + element._id);\n\n        if (row.idBrand == element._id) {\n          console.log(\"entre  \" + element.name);\n          return false;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, element.name);\n        }\n      });\n    }\n  }, {\n    key: \"active\",\n    value: function active(cell, row) {\n      if (row.status == '1') {\n        return React.createElement(AppSwitch, {\n          className: 'mx-1',\n          variant: 'pill',\n          color: 'success',\n          label: true,\n          checked: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(AppSwitch, {\n          className: 'mx-1',\n          variant: 'pill',\n          color: 'success',\n          label: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"filters\",\n    value: function filters(filter) {\n      /*\n      const tmpData = this.props.obj.listFilters;\n      const obj = [];\n       Object.keys(tmpData).forEach(function(key){\n        if(key == filter){\n          for(var i=0; i<tmpData[key].length; i++){\n            var keys = key+\"\"+i;\n            if(i==0) obj.push(<option key={keys} value=\"0\">{tmpData[key][i]}</option>)\n            else obj.push(<option key={keys} value={tmpData[key][i]}>{tmpData[key][i]}</option>)\n          }\n        }\n      })\n      return obj;\n      */\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Lista Productos\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        data: this.props.obj.listProducts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Descargar Busqueda\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, this.renderPagination())))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.props.obj.listProducts,\n        striped: true,\n        hover: true,\n        options: this.options,\n        search: true,\n        multiColumnSearch: true,\n        strictSearch: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        width: '8%',\n        dataField: \"reference\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Referencia\"), React.createElement(TableHeaderColumn, {\n        width: '12%',\n        dataField: \"code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Codigo\"), React.createElement(TableHeaderColumn, {\n        width: '20%',\n        dataField: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Nombre\"), React.createElement(TableHeaderColumn, {\n        width: '8%',\n        dataFormat: this.nameBrand.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Marca\"), React.createElement(TableHeaderColumn, {\n        width: '9%',\n        dataField: \"supplier\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Proveedor\"), React.createElement(TableHeaderColumn, {\n        width: '4%',\n        dataField: \"tax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Tax\"), React.createElement(TableHeaderColumn, {\n        width: '8%',\n        dataFormat: this.editCost.bind(this),\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Costo\"), React.createElement(TableHeaderColumn, {\n        width: '8%',\n        dataFormat: this.editPrice.bind(this),\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Precio\"), React.createElement(TableHeaderColumn, {\n        width: '8%',\n        dataFormat: this.editTotal.bind(this),\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Total\"), React.createElement(TableHeaderColumn, {\n        width: '8%',\n        dataFormat: this.active.bind(this),\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Estado\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.editFormatter.bind(this),\n        width: '8%',\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Accion\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"_id\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Identifier ID\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, this.renderPagination()))))));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return {\n    obj: state.DaoProducts\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/List.js"],"names":["React","Component","connect","CSVLink","Row","InputGroup","InputGroupAddon","InputGroupText","Form","FormGroup","Input","Col","Card","CardHeader","CardBody","Button","ButtonGroup","BootstrapTable","TableHeaderColumn","AppSwitch","DbCrud","Pagination","CurrencyFormat","flat","List","props","state","filters","pag","limit","filFile","filValue","sorts","file","value","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","pagLoad","bind","loadReducer","row","localStorage","setItem","JSON","stringify","obj","listCategories","listBrands","history","push","pathname","code","reference","_id","setState","danger","tmpRow","order","pagNum","orders","idInput","infoTmp","document","getElementById","pagination","NumPages","undefined","cell","callEdit","toggleDanger","cost","price","total","parseInt","console","log","forEach","element","idBrand","name","status","filter","listProducts","renderPagination","nameBrand","editCost","editPrice","editTotal","active","editFormatter","mapStateToProps","DaoProducts","mapDispatchToProps","dispatch","type","colletion","body","dbMLoad"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink } from \"react-csv\";\nimport { Row, InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Input, Col, Card, CardHeader, CardBody, Button, ButtonGroup } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { AppSwitch } from '@coreui/react'\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\nimport Pagination from '../Pagination/Pagination';\nimport CurrencyFormat from 'react-currency-format';\n\n\nvar flat = true;\n \n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass List extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: {\n        pag:\"1\",\n        limit:\"5\",\n        filFile:\"\",\n        filValue: \"\",\n        sorts:[\n          {\n            file:\"cDate\",\n            value:1\n          }\n        ]\n      }\n    }\n\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    }\n\n    this.pagLoad = this.pagLoad.bind(this);\n    //this.toggleDanger = this.toggleDanger.bind(this);\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    //console.log(this.props);\n    //console.log(this.store);\n    if (flat) {\n      flat = false;\n      //Typo: para ser asignado los valores al tener una respuesta del servidor \n      //EndPoint: al que tenemos que llamar para recupuerar datos\n      //Obj Filtro: el objeto que permite realizar una filto en la busqueda\n      this.props.loadReducer('loadProducts', \"products/find\",this.state.filters);\n      //this.props.loadReducer('loadFilters', \"orders/filters\",{});\n    }\n  } \n \n  //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n  callEdit(row) {\n    localStorage.setItem('row', JSON.stringify(row));\n    localStorage.setItem('listCategories',JSON.stringify(this.props.obj.listCategories));\n    localStorage.setItem('listBrands',JSON.stringify(this.props.obj.listBrands));\n    this.props.history.push({\n      pathname: '/Products/Edit/'+row.code+'/'+row.reference+\"/\"+row._id,\n      row:row\n    })\n  }\n\n  //Cambia el valor a visible del mensaje de alerta \n  //guarda el identificador de la fila que sera afectada \n  toggleDanger(row) {\n    this.setState({\n      danger: !this.state.danger,\n      tmpRow: row.order\n    });\n  }\n\n  // Esta funcion escucha los eventos del componente Pagination\n  pagLoad(pagNum,limit) {\n      //Se realiza la solicitud nuevamente para recargar los registros \n      this.props.loadReducer('loadProducts', \"products/find\", {\n        pag:pagNum,\n        limit:limit,\n        filFile:this.state.filters.filFile,\n        filValue:this.state.filters.filValue,\n        sorts:this.state.filters.sorts\n      });\n      \n      this.setState({\n        orders:{\n          pag:pagNum,\n          limit:limit,\n          filFile:this.state.filters.filFile,\n          filValue:this.state.filters.filValue,\n          sorts:this.state.filters.sorts\n        }\n      });\n      \n  }\n\n  onClickForm(idInput){\n    var infoTmp = document.getElementById(idInput).value;\n    if(infoTmp == \"0\") infoTmp = \"\";\n\n    //Se realiza la solicitud nuevamente para recargar los registros \n    this.props.loadReducer('loadOrders', \"orders/find\", {\n      pag:1,\n      limit:5,\n      filFile:idInput,\n      filValue:infoTmp,\n      sorts:this.state.filters.sorts\n    });\n    \n    //Actualizamos el esta con los valores de filtros seleccionados esto por si se utiliza la \n    //paginacion por lo que se requiere que el estado mantenga el filtro de campo \n    this.setState({\n        filters:{\n          pag:1,\n          limit:5,\n          filFile:idInput,\n          filValue:infoTmp,\n          sorts:this.state.filters.sorts\n        }\n      }\n    );\n  }\n\n  //resibe \n  renderPagination(){\n    if(this.props.obj.pagination.NumPages != undefined)\n    return <Pagination info={this.props.obj.pagination} pagLoad={this.pagLoad.bind()}/>\n    return (<div>Pag...</div>);\n  }\n\n  //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n  editFormatter(cell, row) {\n    return (\n      <ButtonGroup>\n        <Button onClick={this.callEdit.bind(this, row)} size=\"sm\" className=\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-pencil\"></i>\n        </Button>\n        <Button onClick={this.toggleDanger.bind(this, row)} size=\"sm\" className=\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-trash\"></i>\n        </Button>\n      </ButtonGroup>\n    )\n  }\n\n  editCost(cell, row){return this.CurrencyFormat(row.cost);}\n  editPrice(cell, row){return this.CurrencyFormat(row.price);}\n  editTotal(cell, row){return this.CurrencyFormat(row.total);}\n  CurrencyFormat(value){\n    return (\n      <CurrencyFormat value={parseInt(value)} displayType={'text'} thousandSeparator={true} decimalSeparator={\"\"}  prefix={'$'} renderText={value => value} />\n    )\n  }\n\n  nameBrand(cell, row){\n    console.log(row);\n    this.props.obj.listBrands.forEach(element => {\n      console.log(row.idBrand+\"  ---   \"+element._id);\n      if(row.idBrand == element._id){\n        console.log(\"entre  \"+element.name);\n        return false\n        return (<div>{element.name}</div>);\n      }\n    })\n  }\n\n  active(cell, row){\n    if(row.status == '1'){\n        return(\n            <AppSwitch className={'mx-1'} variant={'pill'} color={'success'} label checked/>\n        );\n      }else{\n        return(\n           <AppSwitch className={'mx-1'} variant={'pill'} color={'success'} label  />\n        );\n      }\n  }\n\n  filters(filter){\n    /*\n    const tmpData = this.props.obj.listFilters;\n    const obj = [];\n\n    Object.keys(tmpData).forEach(function(key){\n      if(key == filter){\n        for(var i=0; i<tmpData[key].length; i++){\n          var keys = key+\"\"+i;\n          if(i==0) obj.push(<option key={keys} value=\"0\">{tmpData[key][i]}</option>)\n          else obj.push(<option key={keys} value={tmpData[key][i]}>{tmpData[key][i]}</option>)\n        }\n      }\n    })\n    return obj;\n    */\n  }\n\n  render() {\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardHeader>\n            Lista Productos\n            <div className=\"card-header-actions\">\n              <CSVLink data={this.props.obj.listProducts}>Descargar Busqueda</CSVLink>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <Row>\n              <Col xs=\"12\" md=\"12\">\n                <div className=\"pull-right\">{this.renderPagination()}</div>\n              </Col>\n            </Row>\n          </CardBody>\n\n          <CardBody>\n              <BootstrapTable  data={this.props.obj.listProducts} striped hover options={this.options} search multiColumnSearch strictSearch > \n              <TableHeaderColumn width={'8%'} dataField='reference' >Referencia</TableHeaderColumn>\n              <TableHeaderColumn width={'12%'} dataField='code' >Codigo</TableHeaderColumn>\n              <TableHeaderColumn width={'20%'} dataField='name' >Nombre</TableHeaderColumn>\n              <TableHeaderColumn width={'8%'} dataFormat={this.nameBrand.bind(this)} >Marca</TableHeaderColumn>\n              <TableHeaderColumn width={'9%'} dataField='supplier' >Proveedor</TableHeaderColumn>\n              <TableHeaderColumn width={'4%'} dataField='tax' >Tax</TableHeaderColumn>\n              <TableHeaderColumn width={'8%'} dataFormat={this.editCost.bind(this)} dataAlign='right'>Costo</TableHeaderColumn>\n              <TableHeaderColumn width={'8%'} dataFormat={this.editPrice.bind(this)} dataAlign='right'>Precio</TableHeaderColumn>\n              <TableHeaderColumn width={'8%'} dataFormat={this.editTotal.bind(this)} dataAlign='right'>Total</TableHeaderColumn>\n              <TableHeaderColumn width={'8%'} dataFormat={this.active.bind(this)} dataAlign='center'>Estado</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.editFormatter.bind(this)} width={'8%'} dataAlign='center' >Accion</TableHeaderColumn>\n              <TableHeaderColumn isKey={true} dataField='_id' hidden>Identifier ID</TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n\n          <CardBody>\n            <Row>\n              <Col xs=\"12\" md=\"12\">\n                <div className=\"pull-right\">{this.renderPagination()}</div>\n              </Col>\n            </Row>\n          </CardBody>\n          \n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return{\n    obj:state.DaoProducts\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n"]},"metadata":{},"sourceType":"module"}