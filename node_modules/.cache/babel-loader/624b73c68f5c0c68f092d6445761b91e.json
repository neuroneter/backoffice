{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { Row, InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Label, Input, Col, Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nimport Pagination from '../Pagination/Pagination';\nvar flat = true;\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar OrdersList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrdersList, _Component);\n\n  function OrdersList(props) {\n    var _this;\n\n    _classCallCheck(this, OrdersList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrdersList).call(this, props));\n\n    _this.onFormSubmit = function (e) {\n      e.preventDefault();\n      var target = e.target;\n      console.log(e.target.status.value);\n      console.log(_this.props.obj.listStatus);\n      var tmpfFile = \"\";\n      var tmpfValue = \"\";\n\n      if (e.target.customer.value != \"\") {\n        tmpfFile = \"customer\";\n        tmpfValue = e.target.customer.value + \"\";\n      } //e.target.status.value\n      //e.target.NameCustomer.value\n      //Se realiza la solicitud nuevamente para recargar los registros \n\n\n      _this.props.loadReducer('loadOrders', \"orders/find\", {\n        pag: 1,\n        limit: 5,\n        filFile: tmpfFile,\n        filValue: tmpfValue,\n        sorts: _this.state.orders.sorts\n      });\n\n      _this.setState({\n        orders: {\n          pag: 1,\n          limit: 5,\n          filFile: tmpfFile,\n          filValue: tmpfValue,\n          sorts: _this.state.orders.sorts\n        }\n      });\n    };\n\n    _this.state = {\n      orders: {\n        pag: \"1\",\n        limit: \"5\",\n        filFile: \"\",\n        filValue: \"\",\n        sorts: [{\n          file: \"oderDate\",\n          value: 1\n        }]\n      }\n    };\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    };\n    _this.pagLoad = _this.pagLoad.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.toggleDanger = this.toggleDanger.bind(this);\n\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(OrdersList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (flat) {\n        flat = false; //Typo: para ser asignado los valores al tener una respuesta del servidor \n        //EndPoint: al que tenemos que llamar para recupuerar datos\n        //Obj Filtro: el objeto que permite realizar una filto en la busqueda\n\n        this.props.loadReducer('loadOrders', \"orders/find\", this.state.orders);\n        this.props.loadReducer('loadFilters', \"orders/filters\", {});\n      }\n    } //Cambia la paginacion\n\n  }, {\n    key: \"pageChanged\",\n    value: function pageChanged(e) {} //console.log(e.target.text)\n    //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n\n  }, {\n    key: \"callEdit\",\n    value: function callEdit(row) {\n      this.props.history.push({\n        pathname: '/Geo/CountriesAdd',\n        row: row\n      });\n    } //Cambia el valor a visible del mensaje de alerta \n    //guarda el identificador de la fila que sera afectada \n\n  }, {\n    key: \"toggleDanger\",\n    value: function toggleDanger(row) {\n      this.setState({\n        danger: !this.state.danger,\n        tmpRow: row.documentId\n      });\n    } // Esta funcion escucha los eventos del componente Pagination\n\n  }, {\n    key: \"pagLoad\",\n    value: function pagLoad(pagNum, limit) {\n      //Se realiza la solicitud nuevamente para recargar los registros \n      this.props.loadReducer('loadOrders', \"orders/find\", {\n        pag: pagNum,\n        limit: limit,\n        filFile: this.state.orders.filFile,\n        filValue: this.state.orders.filValue,\n        sorts: this.state.orders.sorts\n      });\n      this.setState({\n        orders: {\n          pag: pagNum,\n          limit: limit,\n          filFile: this.state.orders.filFile,\n          filValue: this.state.orders.filValue,\n          sorts: this.state.orders.sorts\n        }\n      });\n    }\n  }, {\n    key: \"renderPagination\",\n    //resibe \n    value: function renderPagination() {\n      if (this.props.obj.pagination.NumPages != undefined) return React.createElement(Pagination, {\n        info: this.props.obj.pagination,\n        pagLoad: this.pagLoad.bind(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Pag...\");\n    } //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n\n  }, {\n    key: \"editFormatter\",\n    value: function editFormatter(cell, row) {\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.callEdit.bind(this, row),\n        size: \"sm\",\n        className: \"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.toggleDanger.bind(this, row),\n        size: \"sm\",\n        className: \"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"filters\",\n    value: function filters(filter) {\n      var tmpData = this.props.obj.listFilters;\n      var obj = [];\n      Object.keys(tmpData).forEach(function (key) {\n        if (key == filter) {\n          for (var i = 0; i < tmpData[key].length; i++) {\n            var keys = key + \"\" + i;\n            obj.push(React.createElement(\"option\", {\n              key: keys,\n              value: tmpData[key][i],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 175\n              },\n              __self: this\n            }, tmpData[key][i]));\n          }\n        }\n      });\n      return obj;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Lista Ordenes\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        data: this.props.obj.listOrders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Descargar Busqueda\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Form, {\n        action: \"\",\n        onSubmit: this.onFormSubmit,\n        method: \"post\",\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"2\",\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"status\",\n        id: \"status\",\n        key: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.filters(\"status\"))), React.createElement(Col, {\n        xs: \"1\",\n        md: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"store\",\n        id: \"store\",\n        key: \"store\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, this.filters(\"store\"))), React.createElement(Col, {\n        xs: \"1\",\n        md: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"brand\",\n        id: \"brand\",\n        key: \"brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, this.filters(\"brand\"))), React.createElement(Col, {\n        xs: \"1\",\n        md: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"supplier\",\n        id: \"supplier\",\n        key: \"supplier\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, this.filters(\"supplier\"))), React.createElement(Col, {\n        xs: \"2\",\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa icon-layers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"Orden\",\n        name: \"Orden\",\n        placeholder: \"# Orden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: \"2\",\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-address-book-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"DNI\",\n        name: \"DNI\",\n        placeholder: \"# Documento\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: \"2\",\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-address-book-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"customer\",\n        name: \"customer\",\n        placeholder: \"Nombre Cliente\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: \"1\",\n        md: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        className: \"float-right btn btn-success btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), \"\\xA0Buscar\"))))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, this.renderPagination())))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.props.obj.listOrders,\n        striped: true,\n        hover: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        width: '10%',\n        dataField: \"status\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Estado\"), React.createElement(TableHeaderColumn, {\n        width: '15%',\n        dataField: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Orden\"), React.createElement(TableHeaderColumn, {\n        width: '25%',\n        dataField: \"customer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Cliente\"), React.createElement(TableHeaderColumn, {\n        width: '25%',\n        dataField: \"skuName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"Producto\"), React.createElement(TableHeaderColumn, {\n        dataField: \"city\",\n        width: '10%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Ciudad\"), React.createElement(TableHeaderColumn, {\n        dataField: \"invoice\",\n        width: '10%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Factura\"), React.createElement(TableHeaderColumn, {\n        dataField: \"unit\",\n        width: '10%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Procesado\"), React.createElement(TableHeaderColumn, {\n        dataField: \"store\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Tienda\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.editFormatter.bind(this),\n        width: '10%',\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Accion\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"_id\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Identifier ID\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, this.renderPagination()))))));\n    }\n  }]);\n\n  return OrdersList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return {\n    obj: state.DaoOrders\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    },\n    deleteReducer: function deleteReducer(type, colletion, component, documentId) {//DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n    editFileReducer: function editFileReducer(type, colletion, component, documentId, fileEdit, newFileEdit) {//DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js"],"names":["React","Component","connect","CSVLink","CSVDownload","Row","InputGroup","InputGroupAddon","InputGroupText","Form","FormGroup","Label","Input","Col","Card","CardHeader","CardBody","Modal","ModalHeader","ModalBody","ModalFooter","Button","ButtonGroup","AppSwitch","BootstrapTable","TableHeaderColumn","DbCrud","Pagination","flat","OrdersList","props","onFormSubmit","e","preventDefault","target","console","log","status","value","obj","listStatus","tmpfFile","tmpfValue","customer","loadReducer","pag","limit","filFile","filValue","sorts","state","orders","setState","file","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","pagLoad","bind","row","history","push","pathname","danger","tmpRow","documentId","pagNum","pagination","NumPages","undefined","cell","callEdit","toggleDanger","filter","tmpData","listFilters","Object","keys","forEach","key","i","length","listOrders","filters","renderPagination","editFormatter","mapStateToProps","DaoOrders","mapDispatchToProps","dispatch","type","colletion","body","dbMLoad","deleteReducer","component","editFileReducer","fileEdit","newFileEdit"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,WAArC;AACA,SAASC,GAAT,EAAaC,UAAb,EAAyBC,eAAzB,EAA0CC,cAA1C,EAA0DC,IAA1D,EAAgEC,SAAhE,EAA2EC,KAA3E,EAAkFC,KAAlF,EAAyFC,GAAzF,EAA8FC,IAA9F,EAAoGC,UAApG,EAAgHC,QAAhH,EAA0HC,KAA1H,EAAiIC,WAAjI,EAA8IC,SAA9I,EAAyJC,WAAzJ,EAAsKC,MAAtK,EAA8KC,WAA9K,QAAiM,YAAjM;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,uBAAlD;AACA,OAAO,+DAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAGA,IAAIC,IAAI,GAAG,IAAX;AAEA;;;;IAGMC,U;;;;;AAEJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,UAwFnBC,YAxFmB,GAwFJ,UAACC,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAGF,CAAC,CAACE,MAAjB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACE,MAAF,CAASG,MAAT,CAAgBC,KAA5B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,KAAL,CAAWS,GAAX,CAAeC,UAA3B;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,SAAS,GAAG,EAAhB;;AAEA,UAAGV,CAAC,CAACE,MAAF,CAASS,QAAT,CAAkBL,KAAlB,IAA2B,EAA9B,EAAiC;AAC/BG,QAAAA,QAAQ,GAAG,UAAX;AACAC,QAAAA,SAAS,GAAGV,CAAC,CAACE,MAAF,CAASS,QAAT,CAAkBL,KAAlB,GAAwB,EAApC;AACD,OAZmB,CAcpB;AACA;AAEA;;;AACA,YAAKR,KAAL,CAAWc,WAAX,CAAuB,YAAvB,EAAqC,aAArC,EAAoD;AAClDC,QAAAA,GAAG,EAAC,CAD8C;AAElDC,QAAAA,KAAK,EAAC,CAF4C;AAGlDC,QAAAA,OAAO,EAACN,QAH0C;AAIlDO,QAAAA,QAAQ,EAACN,SAJyC;AAKlDO,QAAAA,KAAK,EAAC,MAAKC,KAAL,CAAWC,MAAX,CAAkBF;AAL0B,OAApD;;AAQA,YAAKG,QAAL,CAAc;AACVD,QAAAA,MAAM,EAAC;AACLN,UAAAA,GAAG,EAAC,CADC;AAELC,UAAAA,KAAK,EAAC,CAFD;AAGLC,UAAAA,OAAO,EAACN,QAHH;AAILO,UAAAA,QAAQ,EAACN,SAJJ;AAKLO,UAAAA,KAAK,EAAC,MAAKC,KAAL,CAAWC,MAAX,CAAkBF;AALnB;AADG,OAAd;AAUD,KA5HkB;;AAGjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACNN,QAAAA,GAAG,EAAC,GADE;AAENC,QAAAA,KAAK,EAAC,GAFA;AAGNC,QAAAA,OAAO,EAAC,EAHF;AAINC,QAAAA,QAAQ,EAAE,EAJJ;AAKNC,QAAAA,KAAK,EAAC,CACJ;AACEI,UAAAA,IAAI,EAAC,UADP;AAEEf,UAAAA,KAAK,EAAC;AAFR,SADI;AALA;AADG,KAAb;AAeA,UAAKgB,OAAL,GAAe;AACbC,MAAAA,aAAa,EAAE,IADF;AAEbC,MAAAA,eAAe,EAAE,IAFJ;AAGbC,MAAAA,cAAc,EAAE,CAHH;AAIbC,MAAAA,uBAAuB,EAAE,IAJZ;AAKbC,MAAAA,iBAAiB,EAAE,KALN;AAMbC,MAAAA,gBAAgB,EAAE;AANL,KAAf;AAQA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,uDAAf,CA1BiB,CA2BjB;;AA3BiB;AA4BlB;AAED;;;;;wCACoB;AAClB,UAAIlC,IAAJ,EAAU;AACRA,QAAAA,IAAI,GAAG,KAAP,CADQ,CAER;AACA;AACA;;AACA,aAAKE,KAAL,CAAWc,WAAX,CAAuB,YAAvB,EAAqC,aAArC,EAAmD,KAAKM,KAAL,CAAWC,MAA9D;AACA,aAAKrB,KAAL,CAAWc,WAAX,CAAuB,aAAvB,EAAsC,gBAAtC,EAAuD,EAAvD;AACD;AACF,K,CAED;;;;gCACYZ,C,EAAE,CAEb,C,CADC;AAGF;;;;6BACS+B,G,EAAK;AACZ,WAAKjC,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,QAAAA,QAAQ,EAAE,mBADY;AAEtBH,QAAAA,GAAG,EAAEA;AAFiB,OAAxB;AAID,K,CAED;AACA;;;;iCACaA,G,EAAK;AAChB,WAAKX,QAAL,CAAc;AACZe,QAAAA,MAAM,EAAE,CAAC,KAAKjB,KAAL,CAAWiB,MADR;AAEZC,QAAAA,MAAM,EAAEL,GAAG,CAACM;AAFA,OAAd;AAID,K,CAED;;;;4BACQC,M,EAAOxB,K,EAAO;AAClB;AACA,WAAKhB,KAAL,CAAWc,WAAX,CAAuB,YAAvB,EAAqC,aAArC,EAAoD;AAClDC,QAAAA,GAAG,EAACyB,MAD8C;AAElDxB,QAAAA,KAAK,EAACA,KAF4C;AAGlDC,QAAAA,OAAO,EAAC,KAAKG,KAAL,CAAWC,MAAX,CAAkBJ,OAHwB;AAIlDC,QAAAA,QAAQ,EAAC,KAAKE,KAAL,CAAWC,MAAX,CAAkBH,QAJuB;AAKlDC,QAAAA,KAAK,EAAC,KAAKC,KAAL,CAAWC,MAAX,CAAkBF;AAL0B,OAApD;AAQA,WAAKG,QAAL,CAAc;AACZD,QAAAA,MAAM,EAAC;AACLN,UAAAA,GAAG,EAACyB,MADC;AAELxB,UAAAA,KAAK,EAACA,KAFD;AAGLC,UAAAA,OAAO,EAAC,KAAKG,KAAL,CAAWC,MAAX,CAAkBJ,OAHrB;AAILC,UAAAA,QAAQ,EAAC,KAAKE,KAAL,CAAWC,MAAX,CAAkBH,QAJtB;AAKLC,UAAAA,KAAK,EAAC,KAAKC,KAAL,CAAWC,MAAX,CAAkBF;AALnB;AADK,OAAd;AAUH;;;AAyCD;uCACkB;AAChB,UAAG,KAAKnB,KAAL,CAAWS,GAAX,CAAegC,UAAf,CAA0BC,QAA1B,IAAsCC,SAAzC,EACA,OAAO,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAE,KAAK3C,KAAL,CAAWS,GAAX,CAAegC,UAAjC;AAA6C,QAAA,OAAO,EAAE,KAAKV,OAAL,CAAaC,IAAb,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AACD,K,CAED;;;;kCACcY,I,EAAMX,G,EAAK;AACvB,aACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKY,QAAL,CAAcb,IAAd,CAAmB,IAAnB,EAAyBC,GAAzB,CAAjB;AAAgD,QAAA,IAAI,EAAC,IAArD;AAA0D,QAAA,SAAS,EAAC,+DAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKa,YAAL,CAAkBd,IAAlB,CAAuB,IAAvB,EAA6BC,GAA7B,CAAjB;AAAoD,QAAA,IAAI,EAAC,IAAzD;AAA8D,QAAA,SAAS,EAAC,8DAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF;AAUD;;;4BAEOc,M,EAAO;AAEb,UAAMC,OAAO,GAAG,KAAKhD,KAAL,CAAWS,GAAX,CAAewC,WAA/B;AACA,UAAMxC,GAAG,GAAG,EAAZ;AAEAyC,MAAAA,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,OAArB,CAA6B,UAASC,GAAT,EAAa;AACxC,YAAGA,GAAG,IAAIN,MAAV,EAAiB;AACf,eAAI,IAAIO,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACN,OAAO,CAACK,GAAD,CAAP,CAAaE,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACtC,gBAAIH,IAAI,GAAGE,GAAG,GAAC,EAAJ,GAAOC,CAAlB;AACA7C,YAAAA,GAAG,CAAC0B,IAAJ,CAAS;AAAQ,cAAA,GAAG,EAAEgB,IAAb;AAAmB,cAAA,KAAK,EAAEH,OAAO,CAACK,GAAD,CAAP,CAAaC,CAAb,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA4CN,OAAO,CAACK,GAAD,CAAP,CAAaC,CAAb,CAA5C,CAAT;AACD;AACF;AACF,OAPD;AASA,aAAO7C,GAAP;AAED;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWS,GAAX,CAAe+C,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CAFF,CADF,EAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAC,EAAb;AAAgB,QAAA,QAAQ,EAAE,KAAKvD,YAA/B;AAA6C,QAAA,MAAM,EAAC,MAApD;AAA2D,QAAA,SAAS,EAAC,iBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,QAA1B;AAAmC,QAAA,EAAE,EAAC,QAAtC;AAA+C,QAAA,GAAG,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKwD,OAAL,CAAa,QAAb,CADL,CADF,CADF,EAME,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,EAAE,EAAC,OAArC;AAA6C,QAAA,GAAG,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,OAAL,CAAa,OAAb,CADL,CADF,CANF,EAWE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,EAAE,EAAC,OAArC;AAA6C,QAAA,GAAG,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,OAAL,CAAa,OAAb,CADL,CADF,CAXF,EAgBE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAqC,QAAA,EAAE,EAAC,UAAxC;AAAmD,QAAA,GAAG,EAAC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,OAAL,CAAa,UAAb,CADL,CADF,CAhBF,EAsBE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAME,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,OAAtB;AAA8B,QAAA,IAAI,EAAC,OAAnC;AAA2C,QAAA,WAAW,EAAC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CAtBF,EAiCE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAME,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,KAAtB;AAA4B,QAAA,IAAI,EAAC,KAAjC;AAAuC,QAAA,WAAW,EAAC,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CAjCF,EA4CE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAME,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,IAAI,EAAC,UAAtC;AAAiD,QAAA,WAAW,EAAC,gBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CA5CF,EAsDE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,oCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArE,eADF,CAtDF,CADF,CADF,CADJ,CADA,CAPF,EAyEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKC,gBAAL,EAA7B,CADF,CADF,CADF,CAzEF,EAiFE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAiB,QAAA,IAAI,EAAE,KAAK1D,KAAL,CAAWS,GAAX,CAAe+C,UAAtC;AAAkD,QAAA,OAAO,MAAzD;AAA0D,QAAA,KAAK,MAA/D;AAAgE,QAAA,OAAO,EAAE,KAAKhC,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,KAA1B;AAAiC,QAAA,SAAS,EAAC,QAA3C;AAAoD,QAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,KAA1B;AAAiC,QAAA,SAAS,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,EAGA,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,KAA1B;AAAiC,QAAA,SAAS,EAAC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHA,EAIA,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,KAA1B;AAAiC,QAAA,SAAS,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,EAKA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAmC,QAAA,KAAK,EAAE,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,EAMA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,SAA7B;AAAuC,QAAA,KAAK,EAAE,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANA,EAOA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,KAAK,EAAE,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPA,EAQA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARA,EASA,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAE,KAAKmC,aAAL,CAAmB3B,IAAnB,CAAwB,IAAxB,CAA/B;AAA8D,QAAA,KAAK,EAAE,KAArE;AAA4E,QAAA,SAAS,EAAC,OAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATA,EAUA,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,IAA1B;AAAgC,QAAA,SAAS,EAAC,KAA1C;AAAgD,QAAA,MAAM,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAVA,CADJ,CAjFF,EAgGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAK0B,gBAAL,EAA7B,CADF,CADF,CADF,CAhGF,CADF,CADF;AA6GD;;;;EArRsBvF,S;;AAwRzB,IAAMyF,eAAe,GAAG,SAAlBA,eAAkB,CAACxC,KAAD,EAAW;AACjC;AACA,SAAM;AACJX,IAAAA,GAAG,EAACW,KAAK,CAACyC;AADN,GAAN;AAGD,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACL;AACA;AACA;AACA;AACAjD,IAAAA,WAAW,EAAE,qBAACkD,IAAD,EAAOC,SAAP,EAAkBC,IAAlB,EAA2B;AACtCtE,MAAAA,MAAM,CAACuE,OAAP,CAAeJ,QAAf,EAAyBC,IAAzB,EAA+BC,SAA/B,EAA0CC,IAA1C;AACD,KAPI;AASLE,IAAAA,aAAa,EAAE,uBAACJ,IAAD,EAAOC,SAAP,EAAkBI,SAAlB,EAA6B9B,UAA7B,EAA4C,CACzD;AACD,KAXI;AAaL+B,IAAAA,eAAe,EAAE,yBAACN,IAAD,EAAOC,SAAP,EAAkBI,SAAlB,EAA6B9B,UAA7B,EAAyCgC,QAAzC,EAAmDC,WAAnD,EAAmE,CAClF;AACD;AAfI,GAAP;AAkBD,CAnBD;;AAqBA,eAAepG,OAAO,CAACwF,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C/D,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { Row,InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Label, Input, Col, Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nimport Pagination from '../Pagination/Pagination';\n\n\nvar flat = true;\n\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass OrdersList extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      orders: {\n        pag:\"1\",\n        limit:\"5\",\n        filFile:\"\",\n        filValue: \"\",\n        sorts:[\n          {\n            file:\"oderDate\",\n            value:1\n          }\n        ]\n      }\n    }\n\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    }\n    this.pagLoad = this.pagLoad.bind(this);\n    //this.toggleDanger = this.toggleDanger.bind(this);\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    if (flat) {\n      flat = false;\n      //Typo: para ser asignado los valores al tener una respuesta del servidor \n      //EndPoint: al que tenemos que llamar para recupuerar datos\n      //Obj Filtro: el objeto que permite realizar una filto en la busqueda\n      this.props.loadReducer('loadOrders', \"orders/find\",this.state.orders);\n      this.props.loadReducer('loadFilters', \"orders/filters\",{});\n    }\n  }\n\n  //Cambia la paginacion\n  pageChanged(e){\n    //console.log(e.target.text)\n  }\n\n  //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n  callEdit(row) {\n    this.props.history.push({\n      pathname: '/Geo/CountriesAdd',\n      row: row\n    })\n  }\n\n  //Cambia el valor a visible del mensaje de alerta \n  //guarda el identificador de la fila que sera afectada \n  toggleDanger(row) {\n    this.setState({\n      danger: !this.state.danger,\n      tmpRow: row.documentId\n    });\n  }\n\n  // Esta funcion escucha los eventos del componente Pagination\n  pagLoad(pagNum,limit) {\n      //Se realiza la solicitud nuevamente para recargar los registros \n      this.props.loadReducer('loadOrders', \"orders/find\", {\n        pag:pagNum,\n        limit:limit,\n        filFile:this.state.orders.filFile,\n        filValue:this.state.orders.filValue,\n        sorts:this.state.orders.sorts\n      });\n      \n      this.setState({\n        orders:{\n          pag:pagNum,\n          limit:limit,\n          filFile:this.state.orders.filFile,\n          filValue:this.state.orders.filValue,\n          sorts:this.state.orders.sorts\n        }\n      });\n      \n  }\n\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    const target = e.target;\n\n    console.log(e.target.status.value)\n    console.log(this.props.obj.listStatus);\n    var tmpfFile = \"\";\n    var tmpfValue = \"\";\n\n    if(e.target.customer.value != \"\"){\n      tmpfFile = \"customer\";\n      tmpfValue = e.target.customer.value+\"\";\n    }\n\n    //e.target.status.value\n    //e.target.NameCustomer.value\n\n    //Se realiza la solicitud nuevamente para recargar los registros \n    this.props.loadReducer('loadOrders', \"orders/find\", {\n      pag:1,\n      limit:5,\n      filFile:tmpfFile,\n      filValue:tmpfValue,\n      sorts:this.state.orders.sorts\n    });\n    \n    this.setState({\n        orders:{\n          pag:1,\n          limit:5,\n          filFile:tmpfFile,\n          filValue:tmpfValue,\n          sorts:this.state.orders.sorts\n        }\n      }\n    );\n  }\n\n  //resibe \n  renderPagination(){\n    if(this.props.obj.pagination.NumPages != undefined)\n    return <Pagination info={this.props.obj.pagination} pagLoad={this.pagLoad.bind()}/>\n    return (<div>Pag...</div>);\n  }\n\n  //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n  editFormatter(cell, row) {\n    return (\n      <ButtonGroup>\n        <Button onClick={this.callEdit.bind(this, row)} size=\"sm\" className=\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-pencil\"></i>\n        </Button>\n        <Button onClick={this.toggleDanger.bind(this, row)} size=\"sm\" className=\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-trash\"></i>\n        </Button>\n      </ButtonGroup>\n    )\n  }\n\n  filters(filter){\n\n    const tmpData = this.props.obj.listFilters;\n    const obj = [];\n\n    Object.keys(tmpData).forEach(function(key){\n      if(key == filter){\n        for(var i=0; i<tmpData[key].length; i++){\n          var keys = key+\"\"+i;\n          obj.push(<option key={keys} value={tmpData[key][i]}>{tmpData[key][i]}</option>)\n        }\n      }\n    })\n\n    return obj;\n   \n  }\n\n  render() {\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardHeader>\n            Lista Ordenes\n            <div className=\"card-header-actions\">\n              <CSVLink data={this.props.obj.listOrders}>Descargar Busqueda</CSVLink>\n            </div>\n          </CardHeader>\n          <CardBody>\n          <Form action=\"\" onSubmit={this.onFormSubmit} method=\"post\" className=\"form-horizontal\">\n              <FormGroup row>\n                <Col xs=\"12\" md=\"12\">\n                  <Row>\n                    <Col xs=\"2\" md=\"2\">\n                      <Input type=\"select\" name=\"status\" id=\"status\" key=\"status\">\n                          {this.filters(\"status\")}\n                      </Input>\n                    </Col>\n                    <Col xs=\"1\" md=\"1\">\n                      <Input type=\"select\" name=\"store\" id=\"store\" key=\"store\">\n                          {this.filters(\"store\")}\n                      </Input>\n                    </Col>\n                    <Col xs=\"1\" md=\"1\">\n                      <Input type=\"select\" name=\"brand\" id=\"brand\" key=\"brand\">\n                          {this.filters(\"brand\")}\n                      </Input>\n                    </Col>\n                    <Col xs=\"1\" md=\"1\">\n                      <Input type=\"select\" name=\"supplier\" id=\"supplier\" key=\"supplier\">\n                          {this.filters(\"supplier\")}\n                      </Input>\n                    </Col>\n\n                    <Col xs=\"2\" md=\"2\">\n                      <InputGroup>\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa icon-layers\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" id=\"Orden\" name=\"Orden\" placeholder=\"# Orden\" />\n                      </InputGroup>\n                    </Col>\n\n                    <Col xs=\"2\" md=\"2\">\n                      <InputGroup>\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa fa-address-book-o\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" id=\"DNI\" name=\"DNI\" placeholder=\"# Documento\" />\n                      </InputGroup>\n                    </Col>\n\n                    <Col xs=\"2\" md=\"2\">\n                      <InputGroup>\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa fa-address-book-o\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" id=\"customer\" name=\"customer\" placeholder=\"Nombre Cliente\" />\n                      </InputGroup>\n                    </Col>\n                    <Col xs=\"1\" md=\"1\">\n                      <Button type=\"submit\" className=\"float-right btn btn-success btn-sm\"><i className=\"fa fa-search\"></i>&nbsp;Buscar</Button>\n                    </Col>\n                  </Row>\n                </Col>\n              </FormGroup>\n          </Form>\n          </CardBody>\n          <CardBody>\n            <Row>\n              <Col xs=\"12\" md=\"12\">\n                <div className=\"pull-right\">{this.renderPagination()}</div>\n              </Col>\n            </Row>\n          </CardBody>\n\n          <CardBody>\n              <BootstrapTable  data={this.props.obj.listOrders} striped hover options={this.options}>\n              <TableHeaderColumn width={'10%'} dataField='status' dataSort>Estado</TableHeaderColumn>\n              <TableHeaderColumn width={'15%'} dataField='order' >Orden</TableHeaderColumn>\n              <TableHeaderColumn width={'25%'} dataField='customer' >Cliente</TableHeaderColumn>\n              <TableHeaderColumn width={'25%'} dataField='skuName' >Producto</TableHeaderColumn>\n              <TableHeaderColumn dataField='city'width={'10%'} >Ciudad</TableHeaderColumn>\n              <TableHeaderColumn dataField='invoice' width={'10%'}>Factura</TableHeaderColumn>\n              <TableHeaderColumn dataField='unit' width={'10%'}>Procesado</TableHeaderColumn>\n              <TableHeaderColumn dataField='store'>Tienda</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.editFormatter.bind(this)} width={'10%'} dataAlign='right' >Accion</TableHeaderColumn>\n              <TableHeaderColumn isKey={true} dataField='_id' hidden>Identifier ID</TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n\n          <CardBody>\n            <Row>\n              <Col xs=\"12\" md=\"12\">\n                <div className=\"pull-right\">{this.renderPagination()}</div>\n              </Col>\n            </Row>\n          </CardBody>\n          \n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return{\n    obj:state.DaoOrders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    },\n\n    deleteReducer: (type, colletion, component, documentId) => { \n      //DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n\n    editFileReducer: (type, colletion, component, documentId, fileEdit, newFileEdit) => { \n      //DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);\n"]},"metadata":{},"sourceType":"module"}