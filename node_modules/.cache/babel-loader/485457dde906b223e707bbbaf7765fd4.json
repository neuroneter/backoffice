{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/src/views/Owner/Geo/CountriesList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardBody, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nvar flat = true;\n\nvar CountriesList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CountriesList, _Component);\n\n  function CountriesList(props) {\n    var _this;\n\n    _classCallCheck(this, CountriesList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CountriesList).call(this, props));\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    };\n    return _this;\n  }\n\n  _createClass(CountriesList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (flat) {\n        flat = false;\n        this.props.loadReducer('loadGeo', \"geo\");\n      }\n    }\n  }, {\n    key: \"trashButton\",\n    value: function trashButton(row) {\n      this.props.deleteReducer('deleteGeo', \"geo\", row.documentId);\n    }\n  }, {\n    key: \"editFormatter\",\n    value: function editFormatter(cell, row) {\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        className: \"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.trashButton.bind(this, row),\n        size: \"sm\",\n        className: \"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"editObject\",\n    value: function editObject(row) {\n      this.props.history.push('/Geo/StatesList/' + row.documentId);\n    }\n  }, {\n    key: \"loadStates\",\n    value: function loadStates(cell, row) {\n      var _this2 = this;\n\n      return React.createElement(Button, {\n        size: \"sm\",\n        onClick: function onClick() {\n          return _this2.editObject(row);\n        },\n        className: \"btn-dropbox btn-brand text mr-1 mb-1 btn btn-secondary btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Ver Estados\");\n    }\n  }, {\n    key: \"geopoint\",\n    value: function geopoint(cell, row) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Lat: \", row.geopoint.latitude, \" Lon:\", row.geopoint.longitude);\n    }\n  }, {\n    key: \"active\",\n    value: function active(cell, row) {\n      if (row.active == '1') {\n        return React.createElement(AppSwitch, {\n          className: 'mx-1',\n          variant: 'pill',\n          color: 'success',\n          label: true,\n          checked: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(AppSwitch, {\n          className: 'mx-1',\n          variant: 'pill',\n          color: 'success',\n          label: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"callCountryAdd\",\n    value: function callCountryAdd() {\n      this.props.history.push('/Geo/CountriesAdd');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Lista de Paises\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/AllenFang/react-bootstrap-table\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Aprende\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.callCountryAdd.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa icon-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), \"\\xA0Crear Pais\"), React.createElement(BootstrapTable, {\n        data: this.props.obj,\n        striped: true,\n        hover: true,\n        pagination: true,\n        search: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"countryName\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Pais\"), React.createElement(TableHeaderColumn, {\n        dataField: \"isoCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Iso Code\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"documentId\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Identifier ID\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.geopoint,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Geo Punto\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.active,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Activo\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.loadStates.bind(this),\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Estados\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.editFormatter.bind(this),\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Action\")))));\n    }\n  }]);\n\n  return CountriesList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    obj: state.DaoGeo\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadReducer: function loadReducer(type, colletion) {\n      DbCrud.dbFindColletion(dispatch, type, colletion);\n    },\n    deleteReducer: function deleteReducer(type, colletion, documentId) {\n      DbCrud.dbDelete(dispatch, type, colletion, documentId);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountriesList);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/Documents/GitHub/bobSeller/src/views/Owner/Geo/CountriesList.js"],"names":["React","Component","connect","Card","CardHeader","CardBody","Button","ButtonGroup","AppSwitch","BootstrapTable","TableHeaderColumn","DbCrud","flat","CountriesList","props","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","loadReducer","row","deleteReducer","documentId","cell","trashButton","bind","history","push","editObject","geopoint","latitude","longitude","active","callCountryAdd","obj","loadStates","editFormatter","mapStateToProps","state","DaoGeo","mapDispatchToProps","dispatch","type","colletion","dbFindColletion","dbDelete"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,WAA7C,QAAgE,YAAhE;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,uBAAlD;AACA,OAAO,+DAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,IAAIC,IAAI,GAAG,IAAX;;IAEMC,a;;;;;AAEJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AACA,UAAKC,OAAL,GAAe;AACbC,MAAAA,aAAa,EAAE,IADF;AAEbC,MAAAA,eAAe,EAAE,IAFJ;AAGbC,MAAAA,cAAc,EAAE,CAHH;AAIbC,MAAAA,uBAAuB,EAAE,IAJZ;AAKbC,MAAAA,iBAAiB,EAAE,KALN;AAMbC,MAAAA,gBAAgB,EAAE;AANL,KAAf;AAFiB;AAUlB;;;;wCAEmB;AAClB,UAAIT,IAAJ,EAAU;AACRA,QAAAA,IAAI,GAAG,KAAP;AACA,aAAKE,KAAL,CAAWQ,WAAX,CAAuB,SAAvB,EAAkC,KAAlC;AACD;AACF;;;gCAEWC,G,EAAI;AACd,WAAKT,KAAL,CAAWU,aAAX,CAAyB,WAAzB,EAAsC,KAAtC,EAA6CD,GAAG,CAACE,UAAjD;AACD;;;kCAEaC,I,EAAMH,G,EAAK;AACvB,aACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,SAAS,EAAC,+DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKI,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4BL,GAA5B,CAAjB;AAAmD,QAAA,IAAI,EAAC,IAAxD;AAA6D,QAAA,SAAS,EAAC,8DAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF;AAUD;;;+BAEUA,G,EAAK;AACd,WAAKT,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,qBAAqBP,GAAG,CAACE,UAAjD;AACD;;;+BAEUC,I,EAAMH,G,EAAK;AAAA;;AACpB,aACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACQ,UAAL,CAAgBR,GAAhB,CAAN;AAAA,SAA3B;AAAuD,QAAA,SAAS,EAAC,+DAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF;AAKD;;;6BAEQG,I,EAAMH,G,EAAK;AAClB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQA,GAAG,CAACS,QAAJ,CAAaC,QADrB,WACoCV,GAAG,CAACS,QAAJ,CAAaE,SADjD,CADF;AAKD;;;2BAEMR,I,EAAMH,G,EAAK;AAChB,UAAIA,GAAG,CAACY,MAAJ,IAAc,GAAlB,EAAuB;AACrB,eACE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAE,MAAtB;AAA8B,UAAA,OAAO,EAAE,MAAvC;AAA+C,UAAA,KAAK,EAAE,SAAtD;AAAiE,UAAA,KAAK,MAAtE;AAAuE,UAAA,OAAO,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJD,MAIO;AACL,eACE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAE,MAAtB;AAA8B,UAAA,OAAO,EAAE,MAAvC;AAA+C,UAAA,KAAK,EAAE,SAAtD;AAAiE,UAAA,KAAK,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AACF;;;qCAEgB;AAAE,WAAKrB,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,mBAAxB;AAA+C;;;6BAEzD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,oDAAR;AAA6D,QAAA,GAAG,EAAC,qBAAjE;AAAuF,QAAA,MAAM,EAAC,QAA9F;AAAuG,QAAA,SAAS,EAAC,oBAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CAFF,CADF,EASE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,KAAKM,cAAL,CAAoBR,IAApB,CAAyB,IAAzB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlE,mBADF,EAEE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWuB,GAAjC;AAAsC,QAAA,OAAO,MAA7C;AAA8C,QAAA,KAAK,MAAnD;AAAoD,QAAA,UAAU,MAA9D;AAA+D,QAAA,MAAM,MAArE;AAAsE,QAAA,OAAO,EAAE,KAAKtB,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAA2C,QAAA,QAAQ,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,IAA1B;AAAgC,QAAA,SAAS,EAAC,YAA1C;AAAuD,QAAA,MAAM,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,EAIE,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAE,KAAKiB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,EAKE,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAE,KAAKG,MAApC;AAA4C,QAAA,SAAS,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAE,KAAKG,UAAL,CAAgBV,IAAhB,CAAqB,IAArB,CAA/B;AAA2D,QAAA,SAAS,EAAC,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,EAOE,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAE,KAAKW,aAAL,CAAmBX,IAAnB,CAAwB,IAAxB,CAA/B;AAA+D,QAAA,SAAS,EAAC,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CAFF,CATF,CAFF,CADF;AA2BD;;;;EArGyB3B,S;;AAyG5B,IAAMuC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAE,SAAO;AAAEJ,IAAAA,GAAG,EAAEI,KAAK,CAACC;AAAb,GAAP;AAA8B,CAAnE;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLtB,IAAAA,WAAW,EAAE,qBAACuB,IAAD,EAAOC,SAAP,EAAqB;AAAEnC,MAAAA,MAAM,CAACoC,eAAP,CAAuBH,QAAvB,EAAiCC,IAAjC,EAAuCC,SAAvC;AAAoD,KADnF;AAELtB,IAAAA,aAAa,EAAE,uBAACqB,IAAD,EAAOC,SAAP,EAAkBrB,UAAlB,EAAiC;AAAEd,MAAAA,MAAM,CAACqC,QAAP,CAAgBJ,QAAhB,EAA0BC,IAA1B,EAAgCC,SAAhC,EAA2CrB,UAA3C;AAAyD;AAFtG,GAAP;AAID,CALD;;AAOA,eAAevB,OAAO,CAACsC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9B,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardBody, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react'\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\n\nvar flat = true;\n\nclass CountriesList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    }\n  }\n\n  componentDidMount() {\n    if (flat) {\n      flat = false;\n      this.props.loadReducer('loadGeo', \"geo\");\n    }\n  }\n\n  trashButton(row){\n    this.props.deleteReducer('deleteGeo', \"geo\", row.documentId);\n  }\n\n  editFormatter(cell, row) {\n    return (\n      <ButtonGroup>\n        <Button size=\"sm\" className=\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-pencil\"></i>\n        </Button>\n        <Button onClick={this.trashButton.bind(this, row)} size=\"sm\" className=\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-trash\"></i>\n        </Button>\n      </ButtonGroup>\n    )\n  }\n\n  editObject(row) {\n    this.props.history.push('/Geo/StatesList/' + row.documentId);\n  }\n\n  loadStates(cell, row) {\n    return (\n      <Button size=\"sm\" onClick={() => this.editObject(row)} className=\"btn-dropbox btn-brand text mr-1 mb-1 btn btn-secondary btn-lg\">\n        Ver Estados\n      </Button>\n    )\n  }\n\n  geopoint(cell, row) {\n    return (\n      <div>\n        Lat: {row.geopoint.latitude} Lon:{row.geopoint.longitude}\n      </div>\n    );\n  }\n\n  active(cell, row) {\n    if (row.active == '1') {\n      return (\n        <AppSwitch className={'mx-1'} variant={'pill'} color={'success'} label checked />\n      );\n    } else {\n      return (\n        <AppSwitch className={'mx-1'} variant={'pill'} color={'success'} label />\n      );\n    }\n  }\n\n  callCountryAdd() { this.props.history.push('/Geo/CountriesAdd'); }\n\n  render() {\n\n    return (\n      <div className=\"animated\">\n\n        <Card>\n          <CardHeader>\n            Lista de Paises\n            <div className=\"card-header-actions\">\n              <a href=\"https://github.com/AllenFang/react-bootstrap-table\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"card-header-action\">\n                <small className=\"text-muted\">Aprende</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <Button color=\"primary\" onClick={this.callCountryAdd.bind(this)} ><i className=\"fa icon-plus\"></i>&nbsp;Crear Pais</Button>\n            <BootstrapTable data={this.props.obj} striped hover pagination search options={this.options}>\n              <TableHeaderColumn dataField='countryName' dataSort>Pais</TableHeaderColumn>\n              <TableHeaderColumn dataField='isoCode' >Iso Code</TableHeaderColumn>\n              <TableHeaderColumn isKey={true} dataField='documentId' hidden>Identifier ID</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.geopoint} >Geo Punto</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.active} dataAlign='center' >Activo</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.loadStates.bind(this)} dataAlign='right' >Estados</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.editFormatter.bind(this )} dataAlign='right' >Action</TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => { return { obj: state.DaoGeo } }\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadReducer: (type, colletion) => { DbCrud.dbFindColletion(dispatch, type, colletion); },\n    deleteReducer: (type, colletion, documentId) => { DbCrud.dbDelete(dispatch, type, colletion, documentId); }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountriesList);\n"]},"metadata":{},"sourceType":"module"}