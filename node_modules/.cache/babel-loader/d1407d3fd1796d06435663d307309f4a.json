{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/Edits.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Label, InputGroupAddon, InputGroupText, Col, Button, Input, Card, CardHeader, CardBody } from 'reactstrap';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar Eidts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Eidts, _Component);\n\n  function Eidts(props) {\n    var _this;\n\n    _classCallCheck(this, Eidts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Eidts).call(this, props));\n    _this.state = {\n      htmlCombinations: _this.formCombinations.bind(_assertThisInitialized(_assertThisInitialized(_this)))\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(Eidts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.loadReducer(\"loadCombinations\", \"combinations/\", {});\n    }\n  }, {\n    key: \"option\",\n    value: function option() {\n      var options = [];\n      options.push(React.createElement(\"option\", {\n        key: \"comb0\",\n        value: \"0\",\n        disabled: true,\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Combinaciones\"));\n\n      try {\n        this.props.obj.totalcombinations.label.forEach(function (elemt, item) {\n          var key = \"comb\" + (item + 1);\n          options.push(React.createElement(\"option\", {\n            key: key,\n            value: elemt,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, elemt));\n        });\n      } catch (e) {}\n\n      return options;\n    }\n  }, {\n    key: \"formCombinations\",\n    value: function formCombinations(val) {\n      var html = [];\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Combinaci\\xF3n: \"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Enter your name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(FormText, {\n        color: \"muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"ex. 99/99/9999\")))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Tabla\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Administrar Combinaci\\xF3n\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Col, {\n        Col: true,\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Combinaciones\"), React.createElement(Col, {\n        xs: \"12\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"combinacion\",\n        id: \"combinacion\",\n        key: \"combinacion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.option())), React.createElement(Col, {\n        xs: \"12\",\n        md: \"3\",\n        xl: true,\n        className: \"mb-2 mb-xl-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Button, {\n        active: true,\n        block: true,\n        color: \"success\",\n        \"aria-pressed\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"+ Combinaci\\xF3n\"))))))), this.formCombinations()));\n    }\n  }]);\n\n  return Eidts;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    obj: state.DaoCombinations\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Eidts);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/Edits.js"],"names":["React","Component","connect","Row","Label","InputGroupAddon","InputGroupText","Col","Button","Input","Card","CardHeader","CardBody","DbCrud","Eidts","props","state","htmlCombinations","formCombinations","bind","loadReducer","options","push","obj","totalcombinations","label","forEach","elemt","item","key","e","val","html","option","mapStateToProps","DaoCombinations","mapDispatchToProps","dispatch","type","colletion","body","dbMLoad"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,eAArB,EAAsCC,cAAtC,EAAsDC,GAAtD,EAA2DC,MAA3D,EAAmEC,KAAnE,EAA0EC,IAA1E,EAAgFC,UAAhF,EAA4FC,QAA5F,QAA4G,YAA5G;AACA,OAAO,+DAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA;;;;IAGMC,K;;;;;AAEJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAG,MAAKC,gBAAL,CAAsBC,IAAtB;AADV,KAAb;AAFiB;AAKlB;AAED;;;;;wCACoB;AAClB,WAAKJ,KAAL,CAAWK,WAAX,CAAuB,kBAAvB,EAA2C,eAA3C,EAA4D,EAA5D;AACD;;;6BAEO;AACJ,UAAIC,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,CAACC,IAAR,CAAa;AAAQ,QAAA,GAAG,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,GAA1B;AAA8B,QAAA,QAAQ,MAAtC;AAAuC,QAAA,QAAQ,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAb;;AACA,UAAG;AACD,aAAKP,KAAL,CAAWQ,GAAX,CAAeC,iBAAf,CAAiCC,KAAjC,CAAuCC,OAAvC,CAA+C,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAC7D,cAAIC,GAAG,GAAG,UAAQD,IAAI,GAAC,CAAb,CAAV;AACAP,UAAAA,OAAO,CAACC,IAAR,CAAa;AAAQ,YAAA,GAAG,EAAEO,GAAb;AAAkB,YAAA,KAAK,EAAEF,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiCA,KAAjC,CAAb;AACF,SAHD;AAID,OALD,CAKC,OAAMG,CAAN,EAAQ,CAAE;;AACX,aAAOT,OAAP;AACH;;;qCAEgBU,G,EAAI;AACnB,UAAIC,IAAI,GAAG,EAAX;AACA,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CADA,CADJ,EAII,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,WAAW,EAAC,iBAAzC;AAA2D,QAAA,QAAQ,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAFJ,EAQI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARJ,CADJ,CADJ,CADJ,EAiBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAjBJ,CADJ;AAuBD;;;6BAEQ;AAEP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,GAAG,MAAR;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,EAAE,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,aAA1B;AAAwC,QAAA,EAAE,EAAC,aAA3C;AAAyD,QAAA,GAAG,EAAC,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,MAAL,EADL,CADJ,CAFJ,EAOI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAmB,QAAA,EAAE,MAArB;AAAsB,QAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,KAAK,MAApB;AAAqB,QAAA,KAAK,EAAC,SAA3B;AAAqC,wBAAa,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CAPJ,CADJ,CADJ,CADJ,CADF,CADF,EAoBK,KAAKf,gBAAL,EApBL,CAJF,CADF;AA6BD;;;;EApFiBjB,S;;AAuFpB,IAAMiC,eAAe,GAAG,SAAlBA,eAAkB,CAAClB,KAAD,EAAW;AACjC,SAAM;AACJO,IAAAA,GAAG,EAACP,KAAK,CAACmB;AADN,GAAN;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLjB,IAAAA,WAAW,EAAE,qBAACkB,IAAD,EAAOC,SAAP,EAAkBC,IAAlB,EAA2B;AACtC3B,MAAAA,MAAM,CAAC4B,OAAP,CAAeJ,QAAf,EAAyBC,IAAzB,EAA+BC,SAA/B,EAA0CC,IAA1C;AACD;AAHI,GAAP;AAMD,CAPD;;AASA,eAAetC,OAAO,CAACgC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Label, InputGroupAddon, InputGroupText, Col, Button, Input, Card, CardHeader, CardBody } from 'reactstrap';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\n \n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass Eidts extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        htmlCombinations : this.formCombinations.bind(this)\n    }\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    this.props.loadReducer(\"loadCombinations\", \"combinations/\", {});\n  } \n \n  option(){\n      var options = [];\n      options.push(<option key=\"comb0\" value=\"0\" disabled selected>Combinaciones</option>)\n      try{\n        this.props.obj.totalcombinations.label.forEach((elemt, item) => {\n           var key = \"comb\"+(item+1);\n           options.push(<option key={key} value={elemt}>{elemt}</option>)\n        });\n      }catch(e){}\n      return options;\n  }\n\n  formCombinations(val){\n    var html = [];\n    return(\n        <Row>\n            <Col>\n                <Row>\n                    <Col>\n                        <Label>Combinación: </Label>\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText><i className=\"fa fa-calendar\"></i></InputGroupText>\n                            </InputGroupAddon>\n                            <Input type=\"text\" id=\"name\" placeholder=\"Enter your name\" required />\n                        </InputGroup>\n                        <FormText color=\"muted\">\n                            ex. 99/99/9999\n                        </FormText>\n                    </Col>\n                </Row>\n            </Col>\n            <Col>\n                Tabla\n            </Col>\n        </Row>\n    )\n  }\n\n  render() {\n\n    return (\n      <Card>\n        <CardHeader>\n          Administrar Combinación\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col xs=\"12\" md=\"6\">\n                <Row>\n                    <Col Col xs=\"12\" md=\"12\">\n                        <Row>\n                            <Col xs=\"12\" md=\"3\">Combinaciones</Col>\n                            <Col xs=\"12\" md=\"6\">\n                                <Input type=\"select\" name=\"combinacion\" id=\"combinacion\" key=\"combinacion\">\n                                    {this.option()}\n                                </Input>\n                            </Col>\n                            <Col xs=\"12\" md=\"3\"xl className=\"mb-2 mb-xl-0\">\n                                <Button active block color=\"success\" aria-pressed=\"true\">+ Combinación</Button>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Col>\n          </Row>\n            {this.formCombinations()}\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    obj:state.DaoCombinations\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Eidts);\n"]},"metadata":{},"sourceType":"module"}