{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Stores/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Row, InputGroup, InputGroupAddon, InputGroupText, Input, Col, Card, CardHeader, CardBody, Button, ButtonGroup } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { AppSwitch } from '@coreui/react';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\nimport Pagination from '../Pagination/Pagination';\nimport CurrencyFormat from 'react-currency-format';\nimport { CommonLoading } from 'react-loadingg';\nimport { Image, Transformation } from 'cloudinary-react';\nimport { CloudinaryContext } from \"cloudinary-react\";\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.state = {\n      loader: false,\n      modal: false,\n      IdDelete: null,\n      nameDelete: null\n    };\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.load('loadStores', \"stores/back/find\", {});\n    }\n  }, {\n    key: \"toogleClose\",\n    value: function toogleClose() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    } //Cambia el valor a visible del mensaje de alerta \n    //guarda el identificador de la fila que sera afectada \n\n  }, {\n    key: \"toggleOpen\",\n    value: function toggleOpen(row) {\n      this.setState({\n        modal: !this.state.modal,\n        IdDelete: row._id,\n        nameDelete: row.name\n      });\n    }\n  }, {\n    key: \"deleteProduct\",\n    value: function deleteProduct(row) {\n      this.setState({\n        loader: !this.state.loader\n      });\n      this.props.delete('deleteProducts', \"products/delete\", this.state.IdDelete, this.closeLoader.bind(this));\n    } //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n\n  }, {\n    key: \"editFormatter\",\n    value: function editFormatter(cell, row) {\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.callEdit.bind(this, row),\n        size: \"sm\",\n        className: \"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.toggleOpen.bind(this, row),\n        size: \"sm\",\n        className: \"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Lista Productos\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        style: {\n          fontSize: \"medium\"\n        },\n        onClick: this.createProduct.bind(this),\n        className: \"float-right btn btn-success active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"+ Crear Producto\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"idBrand\",\n        id: \"idBrand\",\n        key: \"idBrand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.filters(\"brands\")), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        onClick: this.onClickForm.bind(this, \"idBrand\"),\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Buscar\")))), this.findSupplierRol(), React.createElement(Col, {\n        xs: \"12\",\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"idTax\",\n        id: \"idTax\",\n        key: \"idTax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.filters(\"taxes\")), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        onClick: this.onClickForm.bind(this, \"idTax\"),\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Buscar\")))), React.createElement(Col, {\n        xs: \"12\",\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa icon-layers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"findFilterAll\",\n        name: \"findFilterAll\",\n        placeholder: \"Nombre, C\\xF3d, Refe, SKU\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        onClick: this.onClickForm.bind(this, \"findFilterAll\"),\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Buscar\"))))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.renderPagination())))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.props.obj.listProducts,\n        striped: true,\n        hover: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        width: '6%',\n        dataFormat: this.imgProduct.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Imagen\"), React.createElement(TableHeaderColumn, {\n        width: '8%',\n        dataFormat: this.formatSKU.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"SKU\"), React.createElement(TableHeaderColumn, {\n        width: '6%',\n        dataField: \"reference\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Referencia\"), React.createElement(TableHeaderColumn, {\n        width: '8%',\n        dataField: \"code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Codigo\"), React.createElement(TableHeaderColumn, {\n        width: '16%',\n        dataField: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Nombre\"), React.createElement(TableHeaderColumn, {\n        width: '6%',\n        dataFormat: this.nameBrand.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Marca\"), React.createElement(TableHeaderColumn, {\n        width: '7%',\n        dataFormat: this.nameSuppliers.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Proveedor\"), React.createElement(TableHeaderColumn, {\n        width: '3%',\n        dataFormat: this.nameTaxes.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Tax\"), React.createElement(TableHeaderColumn, {\n        width: '6%',\n        dataFormat: this.editPvp.bind(this),\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Tiendas\"), React.createElement(TableHeaderColumn, {\n        width: '6%',\n        dataFormat: this.editCost.bind(this),\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Costo\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.editFormatter.bind(this),\n        width: '5%',\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Accion\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"_id\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Identifier ID\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.renderPagination()))))), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toogleClose.bind(this),\n        className: 'modal-danger ',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toogleClose.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Alerta\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Esta seguro que desea eliminar el producto \", this.state.nameDelete), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        onClick: this.deleteProduct.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Eliminar\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toogleClose.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(Modal, {\n        isOpen: this.state.loader,\n        className: 'modal-lg',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: \"inherit\",\n          top: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(CommonLoading, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return {\n    obj: state.DaoStores\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    load: function load(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body, \"POST\");\n    },\n    delete: function _delete(type, colletion, id) {\n      DbCrud.dbMLoad(dispatch, type, colletion, {\n        _id: id\n      }, \"PUT\");\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Stores/List.js"],"names":["React","Component","connect","Modal","ModalHeader","ModalBody","ModalFooter","Row","InputGroup","InputGroupAddon","InputGroupText","Input","Col","Card","CardHeader","CardBody","Button","ButtonGroup","BootstrapTable","TableHeaderColumn","AppSwitch","DbCrud","Pagination","CurrencyFormat","CommonLoading","Image","Transformation","CloudinaryContext","List","props","state","loader","modal","IdDelete","nameDelete","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","load","setState","row","_id","name","delete","closeLoader","bind","cell","callEdit","toggleOpen","fontSize","createProduct","filters","onClickForm","findSupplierRol","renderPagination","obj","listProducts","imgProduct","formatSKU","nameBrand","nameSuppliers","nameTaxes","editPvp","editCost","editFormatter","toogleClose","deleteProduct","position","top","mapStateToProps","DaoStores","mapDispatchToProps","dispatch","type","colletion","body","dbMLoad","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Row, InputGroup, InputGroupAddon, InputGroupText, Input, Col, Card, CardHeader, CardBody, Button, ButtonGroup } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { AppSwitch } from '@coreui/react'\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\nimport Pagination from '../Pagination/Pagination';\nimport CurrencyFormat from 'react-currency-format';\nimport { CommonLoading } from 'react-loadingg';\nimport { Image, Transformation } from 'cloudinary-react';\nimport { CloudinaryContext } from \"cloudinary-react\";\n \n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass List extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader:false,\n      modal:false,\n      IdDelete:null,\n      nameDelete:null,\n    }\n\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    }\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    this.props.load('loadStores', \"stores/back/find\",{});\n  }\n\n  toogleClose(){\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  //Cambia el valor a visible del mensaje de alerta \n  //guarda el identificador de la fila que sera afectada \n  toggleOpen(row) {\n    this.setState({\n      modal: !this.state.modal,\n      IdDelete: row._id,\n      nameDelete: row.name\n    });\n  }\n\n  deleteProduct(row){\n    this.setState({loader:!this.state.loader});\n    this.props.delete('deleteProducts', \"products/delete\",this.state.IdDelete,this.closeLoader.bind(this));\n  }\n\n  //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n  editFormatter(cell, row) {\n    return (\n      <ButtonGroup>\n        <Button onClick={this.callEdit.bind(this, row)} size=\"sm\" className=\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-pencil\"></i>\n        </Button>\n        <Button onClick={this.toggleOpen.bind(this, row)} size=\"sm\" className=\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-trash\"></i>\n        </Button>\n      </ButtonGroup>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardHeader>\n            Lista Productos\n            <div className=\"card-header-actions\">\n              <Row>\n                <Button size=\"sm\" style={{fontSize:\"medium\"}} onClick={this.createProduct.bind(this)} className=\"float-right btn btn-success active\">\n                  + Crear Producto\n                </Button>\n                {/*<Col xs=\"12\" md=\"12\"><CSVLink data={this.props.obj.listProducts}>Descargar Busqueda</CSVLink></Col>*/}\n              </Row>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <Col xs=\"12\" md=\"12\">\n              <Row>\n                <Col xs=\"12\" md=\"3\">\n                  <InputGroup>\n                    <Input type=\"select\" name=\"idBrand\" id=\"idBrand\" key=\"idBrand\">\n                      {this.filters(\"brands\")}\n                    </Input>\n                    <InputGroupAddon addonType=\"append\">\n                      <Button type=\"button\" onClick={this.onClickForm.bind(this,\"idBrand\")} color=\"primary\">Buscar</Button>\n                    </InputGroupAddon>\n                  </InputGroup>\n                </Col>\n                {this.findSupplierRol()}\n                <Col xs=\"12\" md=\"3\">\n                  <InputGroup>\n                    <Input type=\"select\" name=\"idTax\" id=\"idTax\" key=\"idTax\">\n                      {this.filters(\"taxes\")}\n                    </Input>\n                    <InputGroupAddon addonType=\"append\">\n                      <Button type=\"button\" onClick={this.onClickForm.bind(this,\"idTax\")} color=\"primary\">Buscar</Button>\n                    </InputGroupAddon>\n                  </InputGroup>\n                </Col>\n                <Col xs=\"12\" md=\"3\">\n                  <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"fa icon-layers\"></i>\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input type=\"text\" id=\"findFilterAll\" name=\"findFilterAll\" placeholder=\"Nombre, Cód, Refe, SKU\" />\n                    <InputGroupAddon addonType=\"append\">\n                      <Button type=\"button\" onClick={this.onClickForm.bind(this,\"findFilterAll\")} color=\"primary\">Buscar</Button>\n                    </InputGroupAddon>\n                  </InputGroup>\n                </Col>\n            </Row>\n            </Col>\n          </CardBody>\n          <CardBody>\n            <Row>\n              <Col xs=\"12\" md=\"12\">\n                <div className=\"pull-right\">{this.renderPagination()}</div>\n              </Col>\n            </Row>\n          </CardBody>\n          <CardBody>\n              <BootstrapTable  data={this.props.obj.listProducts} striped hover options={this.options}  > \n              <TableHeaderColumn width={'6%'} dataFormat={this.imgProduct.bind(this)} >Imagen</TableHeaderColumn>\n              <TableHeaderColumn width={'8%'} dataFormat={this.formatSKU.bind(this)} >SKU</TableHeaderColumn>\n              <TableHeaderColumn width={'6%'} dataField='reference' >Referencia</TableHeaderColumn>\n              <TableHeaderColumn width={'8%'} dataField='code' >Codigo</TableHeaderColumn>\n              <TableHeaderColumn width={'16%'} dataField='name' >Nombre</TableHeaderColumn>\n              <TableHeaderColumn width={'6%'} dataFormat={this.nameBrand.bind(this)} >Marca</TableHeaderColumn>\n              <TableHeaderColumn width={'7%'} dataFormat={this.nameSuppliers.bind(this)} >Proveedor</TableHeaderColumn>\n              <TableHeaderColumn width={'3%'} dataFormat={this.nameTaxes.bind(this)} >Tax</TableHeaderColumn>\n              <TableHeaderColumn width={'6%'} dataFormat={this.editPvp.bind(this)} dataAlign='right'>Tiendas</TableHeaderColumn>\n              <TableHeaderColumn width={'6%'} dataFormat={this.editCost.bind(this)} dataAlign='center'>Costo</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.editFormatter.bind(this)} width={'5%'} dataAlign='center' >Accion</TableHeaderColumn>\n              <TableHeaderColumn isKey={true} dataField='_id' hidden>Identifier ID</TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n          <CardBody>\n            <Row>\n              <Col xs=\"12\" md=\"12\">\n                <div className=\"pull-right\">{this.renderPagination()}</div>\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n        <Modal isOpen={this.state.modal} toggle={this.toogleClose.bind(this)} className={'modal-danger '}>\n          <ModalHeader toggle={this.toogleClose.bind(this)}>Alerta</ModalHeader>\n          <ModalBody>Esta seguro que desea eliminar el producto {this.state.nameDelete}</ModalBody>\n          <ModalFooter>\n            <Button color=\"danger\" onClick={this.deleteProduct.bind(this)} >Eliminar</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toogleClose.bind(this)}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n        <Modal isOpen={this.state.loader} className={'modal-lg'}>\n          <div style={{position:\"inherit\",top:\"300px\"}}><CommonLoading size=\"large\"/></div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return{\n    obj:state.DaoStores\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    load: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body, \"POST\");\n    },\n    delete: (type, colletion, id) => {\n      DbCrud.dbMLoad(dispatch, type, colletion,{_id:id}, \"PUT\");\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n"]},"metadata":{},"sourceType":"module"}