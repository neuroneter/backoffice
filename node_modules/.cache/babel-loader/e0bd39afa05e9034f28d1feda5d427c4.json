{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/Edits.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Input, Card, CardHeader, CardBody } from 'reactstrap';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar Eidts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Eidts, _Component);\n\n  function Eidts(props) {\n    var _this;\n\n    _classCallCheck(this, Eidts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Eidts).call(this, props));\n    _this.state = {\n      ini: \"\"\n    };\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(Eidts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.loadReducer(\"loadCombinations\", \"combinations/\", {});\n    }\n  }, {\n    key: \"option\",\n    value: function option() {\n      var options = [];\n\n      try {\n        var label = Object.keys(this.props.obj.totalcombinations.label);\n        console.log(this.props.obj.totalcombinations.label); //label.forEach((elemt, item) => {\n        // options.push(<option key={item} value={elemt}>{elemt}</option>)\n        //});\n      } catch (e) {}\n\n      return options;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Administrar Combinaci\\xF3n\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"6\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"combinacion\",\n        id: \"combinacion\",\n        key: \"combinacion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.option())), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Nombre\"))))));\n    }\n  }]);\n\n  return Eidts;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    obj: state.DaoCombinations\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Eidts);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/backoffice/src/views/Owner/Products/Edits.js"],"names":["React","Component","connect","Row","Col","Input","Card","CardHeader","CardBody","DbCrud","Eidts","props","state","ini","loadReducer","options","label","Object","keys","obj","totalcombinations","console","log","e","option","mapStateToProps","DaoCombinations","mapDispatchToProps","dispatch","type","colletion","body","dbMLoad"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,UAAhC,EAA4CC,QAA5C,QAA4D,YAA5D;AACA,OAAO,+DAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA;;;;IAGMC,K;;;;;AAEJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAG;AADG,KAAb;AAFiB;AAKlB;AAED;;;;;wCACoB;AAClB,WAAKF,KAAL,CAAWG,WAAX,CAAuB,kBAAvB,EAA2C,eAA3C,EAA4D,EAA5D;AACD;;;6BAEO;AAEJ,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAG;AACD,YAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKP,KAAL,CAAWQ,GAAX,CAAeC,iBAAf,CAAiCJ,KAA7C,CAAZ;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWQ,GAAX,CAAeC,iBAAf,CAAiCJ,KAA7C,EAFC,CAGA;AACD;AACA;AACD,OAND,CAMC,OAAMO,CAAN,EAAQ,CAAE;;AAEX,aAAOR,OAAP;AACH;;;6BAEQ;AAEP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,aAA1B;AAAwC,QAAA,EAAE,EAAC,aAA3C;AAAyD,QAAA,GAAG,EAAC,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKS,MAAL,EADL,CADJ,CADJ,EAMI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CADJ,CADF,CADF,CAJF,CADF;AAqBD;;;;EAnDiBvB,S;;AAsDpB,IAAMwB,eAAe,GAAG,SAAlBA,eAAkB,CAACb,KAAD,EAAW;AACjC,SAAM;AACJO,IAAAA,GAAG,EAACP,KAAK,CAACc;AADN,GAAN;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLd,IAAAA,WAAW,EAAE,qBAACe,IAAD,EAAOC,SAAP,EAAkBC,IAAlB,EAA2B;AACtCtB,MAAAA,MAAM,CAACuB,OAAP,CAAeJ,QAAf,EAAyBC,IAAzB,EAA+BC,SAA/B,EAA0CC,IAA1C;AACD;AAHI,GAAP;AAMD,CAPD;;AASA,eAAe7B,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Input, Card, CardHeader, CardBody } from 'reactstrap';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Actions/DbCrud';\n \n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass Eidts extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        ini : \"\"\n    }\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    this.props.loadReducer(\"loadCombinations\", \"combinations/\", {});\n  } \n \n  option(){\n\n      var options = [];\n      try{\n        var label = Object.keys(this.props.obj.totalcombinations.label);\n        console.log(this.props.obj.totalcombinations.label);\n         //label.forEach((elemt, item) => {\n        // options.push(<option key={item} value={elemt}>{elemt}</option>)\n        //});\n      }catch(e){}\n\n      return options;\n  }\n\n  render() {\n\n    return (\n      <Card>\n        <CardHeader>\n          Administrar Combinaci√≥n\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col xs=\"6\" md=\"6\">\n                <Row>\n                    <Col>\n                        <Input type=\"select\" name=\"combinacion\" id=\"combinacion\" key=\"combinacion\">\n                            {this.option()}\n                        </Input>\n                    </Col>\n                    <Col>Nombre</Col>\n                </Row>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    obj:state.DaoCombinations\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Eidts);\n"]},"metadata":{},"sourceType":"module"}