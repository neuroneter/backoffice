{"ast":null,"code":"import firebase from '../Pojo/Firebase.js';\nvar db = firebase.firestore(); // Estructura de DB para Usuario\n\nvar company = {\n  email: \"Email de cuenta llave primaria\",\n  companyName: \"Nombre de la Compañía\",\n  tradeName: \"Nombre Comercial\",\n  nit: \"Numero 999\",\n  logo: \"ulrLogo\",\n  location: {\n    0: {\n      address: \"dirección completa\",\n      neighborhood: \"Barrio de la dirección\",\n      phone: \"Número de telefono\",\n      mobile: \"Número de celular\",\n      email: \"Correo de dirección\",\n      notificationId: \"Ide de Celular para notificaciones\",\n      postalcode: \"Codigo Postal\",\n      country: \"Pais\",\n      state: \"Departamento\",\n      city: \"Ciudad\",\n      info: \"Información a tener en cuenta\"\n    },\n    1: {\n      address: \"dirección completa\",\n      neighborhood: \"Barrio de la dirección\",\n      phone: \"Número de telefono\",\n      mobile: \"Número de celular\",\n      email: \"Correo de dirección\",\n      notificationId: \"Ide de Celular para notificaciones\",\n      postalcode: \"Codigo Postal\",\n      country: \"Pais\",\n      state: \"Departamento\",\n      city: \"Ciudad\",\n      info: \"Información a tener en cuenta\"\n    }\n  },\n  banks: {\n    0: {\n      bankName: \"Nombre entidad Bancaria\",\n      number: \"23423423423\",\n      type: \"Tipo de cuenta Ahorro, Corrient, Credito\",\n      title: \"Titular de la cuenta Bancaria\"\n    }\n  }\n};\n\nfunction DUser() {} // Cargamos el registro de la empresa a la que corresponde \n// 1. Obtenemos el registro de información basica de la empresa\n\n/*\n    db.collection(\"users\").add({\n        first: \"Ada\",\n        last: \"Lovelace\",\n        born: 1815\n    })\n    .then(function(docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch(function(error) {\n        console.error(\"Error adding document: \", error);\n    });\n\n\n    db.collection(\"Company\").where(\"email\", \"==\", \"ohernandez83@hotmail.com\").onSnapshot(function(snapshot) {\n        console.log(\"Current users born before 1815:\");\n        snapshot.forEach(function (userSnapshot) {\n            console.log(userSnapshot.data())\n        });\n    });\n\n    // db.collection(\"user\").doc(\"company\").onSnapshot(function(doc) {\n        //  console.log(\"Current data: \", doc.data());\n    // });\n\n*/\n//se pasa un estado por defecto para definicion de estructura\n\n\nfunction userAdd() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : company;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  // console.log(\"Llamada Dispacth userAdd  \"+action.type);\n  var NewState = Object.assign({}, state);\n\n  if (action.type == \"loadCompany\") {\n    NewState.email = action.data.email;\n    NewState.companyName = action.data.companyName;\n    NewState.tradeName = action.data.tradeName;\n    NewState.nit = action.data.nit;\n    NewState.logo = action.data.logo;\n    console.log(action.data.location);\n    return NewState;\n  } else {\n    NewState.email = undefined;\n    NewState.companyName = undefined;\n    NewState.tradeName = undefined;\n    NewState.nit = undefined;\n    NewState.logo = undefined;\n    return NewState;\n  }\n}\n\nvar DaoLogin = {\n  userAdd: userAdd\n};\nexport default DaoLogin;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/Documents/GitHub/codifica/src/Dao/DaoMyAcoount.js"],"names":["firebase","db","firestore","company","email","companyName","tradeName","nit","logo","location","address","neighborhood","phone","mobile","notificationId","postalcode","country","state","city","info","banks","bankName","number","type","title","DUser","userAdd","action","NewState","Object","assign","data","console","log","undefined","DaoLogin"],"mappings":"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","sourcesContent":["import firebase from '../Pojo/Firebase.js';\nlet db = firebase.firestore();\n\n// Estructura de DB para Usuario\nconst company = {\n    email       :   \"Email de cuenta llave primaria\",\n    companyName :   \"Nombre de la Compañía\",\n    tradeName   :   \"Nombre Comercial\",\n    nit :   \"Numero 999\",\n    logo : \"ulrLogo\",\n    location    :   {\n        0   :  {\n            address :   \"dirección completa\",\n            neighborhood    :   \"Barrio de la dirección\",\n            phone   :   \"Número de telefono\",\n            mobile  :   \"Número de celular\",\n            email   :   \"Correo de dirección\",\n            notificationId  :   \"Ide de Celular para notificaciones\",\n            postalcode  :   \"Codigo Postal\",\n            country :   \"Pais\",\n            state   :   \"Departamento\",\n            city    :   \"Ciudad\",\n            info    :   \"Información a tener en cuenta\"\n        },\n        1   :  {\n            address :   \"dirección completa\",\n            neighborhood    :   \"Barrio de la dirección\",\n            phone   :   \"Número de telefono\",\n            mobile  :   \"Número de celular\",\n            email   :   \"Correo de dirección\",\n            notificationId  :   \"Ide de Celular para notificaciones\",\n            postalcode  :   \"Codigo Postal\",\n            country :   \"Pais\",\n            state   :   \"Departamento\",\n            city    :   \"Ciudad\",\n            info    :   \"Información a tener en cuenta\"\n        }\n    },\n    banks   :   {\n        0   :   {\n            bankName    :   \"Nombre entidad Bancaria\",\n            number      :   \"23423423423\",\n            type        :   \"Tipo de cuenta Ahorro, Corrient, Credito\",\n            title       :   \"Titular de la cuenta Bancaria\"\n        }\n    }\n}\n\nfunction DUser(){\n\n    \n\n    // Cargamos el registro de la empresa a la que corresponde \n\n    // 1. Obtenemos el registro de información basica de la empresa\n/*\n    db.collection(\"users\").add({\n        first: \"Ada\",\n        last: \"Lovelace\",\n        born: 1815\n    })\n    .then(function(docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch(function(error) {\n        console.error(\"Error adding document: \", error);\n    });\n\n\n    db.collection(\"Company\").where(\"email\", \"==\", \"ohernandez83@hotmail.com\").onSnapshot(function(snapshot) {\n        console.log(\"Current users born before 1815:\");\n        snapshot.forEach(function (userSnapshot) {\n            console.log(userSnapshot.data())\n        });\n    });\n\n    // db.collection(\"user\").doc(\"company\").onSnapshot(function(doc) {\n        //  console.log(\"Current data: \", doc.data());\n    // });\n\n*/\n}\n\n//se pasa un estado por defecto para definicion de estructura\nfunction userAdd(state = company, action){\n    // console.log(\"Llamada Dispacth userAdd  \"+action.type);\n    var NewState = Object.assign({},state);\n    if(action.type == \"loadCompany\"){\n        NewState.email = action.data.email;\n        NewState.companyName = action.data.companyName;\n        NewState.tradeName = action.data.tradeName;\n        NewState.nit = action.data.nit;\n        NewState.logo = action.data.logo;\n        console.log(action.data.location);\n        return NewState;\n    }else{\n        NewState.email = undefined;\n        NewState.companyName = undefined;\n        NewState.tradeName = undefined;\n        NewState.nit = undefined;\n        NewState.logo = undefined;\n        return NewState;\n    } \n}\n\nconst DaoLogin = {userAdd}\n\nexport default DaoLogin;"]},"metadata":{},"sourceType":"module"}