{"ast":null,"code":"import _classCallCheck from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { Row, InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Label, Input, Col, Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nimport Pagination from '../Pagination/Pagination';\nvar flat = true;\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\n\nvar OrdersList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrdersList, _Component);\n\n  function OrdersList(props) {\n    var _this;\n\n    _classCallCheck(this, OrdersList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrdersList).call(this, props));\n\n    _this.onFormSubmit = function (e) {\n      e.preventDefault();\n      var target = e.target; //console.log(e.target.status.value)\n      //this.state.orders.filValue = \"JULIAN\";\n      // console.log(e.target.)\n      //this.props.loadReducer('loadOrders', \"orders/find\",this.state.orders);\n    };\n\n    _this.state = {\n      orders: {\n        pag: \"3\",\n        limit: \"10\",\n        filFile: \"\",\n        filValue: \"\",\n        sorts: [{\n          file: \"oderDate\",\n          value: 1\n        }]\n      },\n      groups: {\n        filFile: \"group\",\n        filValue: \"StatusOrder\",\n        sorts: [{\n          file: \"name\",\n          value: 1\n        }]\n      },\n      brands: {\n        filFile: \"\",\n        filValue: \"\",\n        sorts: [{\n          file: \"name\",\n          value: 1\n        }]\n      }\n    };\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    };\n    _this.pagLoad = _this.pagLoad.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.toggleDanger = this.toggleDanger.bind(this);\n\n    return _this;\n  }\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n\n\n  _createClass(OrdersList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (flat) {\n        flat = false;\n        this.props.loadReducer('loadOrders', \"orders/find\", this.state.orders);\n        this.props.loadReducer('loadGroups', \"groups/find\", this.state.groups);\n        this.props.loadReducer('loadBrands', \"brands/find\", this.state.brands);\n        this.props.loadReducer('loadStores', \"stores/find\", {});\n      }\n    } //Cambia la paginacion\n\n  }, {\n    key: \"pageChanged\",\n    value: function pageChanged(e) {} //console.log(e.target.text)\n    //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n\n  }, {\n    key: \"callEdit\",\n    value: function callEdit(row) {\n      this.props.history.push({\n        pathname: '/Geo/CountriesAdd',\n        row: row\n      });\n    } //Cambia el valor a visible del mensaje de alerta \n    //guarda el identificador de la fila que sera afectada \n\n  }, {\n    key: \"toggleDanger\",\n    value: function toggleDanger(row) {\n      this.setState({\n        danger: !this.state.danger,\n        tmpRow: row.documentId\n      });\n    } // Esta funcion escucha los eventos del componente Pagination\n\n  }, {\n    key: \"pagLoad\",\n    value: function pagLoad(pagNum, limit) {\n      //Si el valor de registros visualizados por pagina cambia y se recupera la pagina en la que nos encontramos\n      if (pagNum == \"cRegister\") {\n        pagNum = this.state.orders.pag;\n        var limit = limit;\n      } else {\n        var limit = this.props.obj.pagination.limit;\n      } //Se realiza la solicitud nuevamente para recargar los registros \n\n\n      this.props.loadReducer('loadOrders', \"orders/find\", {\n        pag: pagNum,\n        limit: limit,\n        filFile: this.state.orders.filFile,\n        filValue: this.state.orders.filValue,\n        sorts: this.state.orders.sorts\n      });\n      this.setState({\n        orders: {\n          pag: pagNum,\n          limit: limit,\n          filFile: this.state.orders.filFile,\n          filValue: this.state.orders.filValue,\n          sorts: this.state.orders.sorts\n        }\n      });\n    }\n  }, {\n    key: \"renderPag\",\n    value: function renderPag() {\n      if (this.props.obj.pagination.NumPages != undefined) return React.createElement(Pagination, {\n        info: this.props.obj.pagination,\n        pagLoad: this.pagLoad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Pag...\");\n    } //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n\n  }, {\n    key: \"editFormatter\",\n    value: function editFormatter(cell, row) {\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.callEdit.bind(this, row),\n        size: \"sm\",\n        className: \"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.toggleDanger.bind(this, row),\n        size: \"sm\",\n        className: \"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Lista Ordenes\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/AllenFang/react-bootstrap-table\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Aprende\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Form, {\n        action: \"\",\n        onSubmit: this.onFormSubmit,\n        method: \"post\",\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"2\",\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"status\",\n        id: \"status\",\n        key: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.props.obj.listGroups.map(function (e, key) {\n        return React.createElement(\"option\", {\n          key: e._id,\n          value: e.code,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, e.name);\n      }))), React.createElement(Col, {\n        xs: \"1\",\n        md: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"store\",\n        id: \"store\",\n        key: \"store\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, this.props.obj.listStores.map(function (e, key) {\n        return React.createElement(\"option\", {\n          key: e._id,\n          value: e.code,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, e.name);\n      }))), React.createElement(Col, {\n        xs: \"1\",\n        md: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"store\",\n        id: \"store\",\n        key: \"store\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, this.props.obj.listStores.map(function (e, key) {\n        return React.createElement(\"option\", {\n          key: e._id,\n          value: e.code,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, e.name);\n      }))), React.createElement(Col, {\n        xs: \"2\",\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"store\",\n        id: \"store\",\n        key: \"store\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.props.obj.listStores.map(function (e, key) {\n        return React.createElement(\"option\", {\n          key: e._id,\n          value: e.code,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, e.name);\n      }))), React.createElement(Col, {\n        xs: \"2\",\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa icon-layers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"input1-group1\",\n        name: \"input1-group1\",\n        placeholder: \"# Orden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: \"2\",\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-address-book-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"input1-group1\",\n        name: \"input1-group1\",\n        placeholder: \"# Documento\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: \"2\",\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-address-book-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"input1-group1\",\n        name: \"input1-group1\",\n        placeholder: \"Nombre Cliente\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      })))))), React.createElement(Button, {\n        type: \"submit\",\n        className: \"float-right btn btn-success btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), \"\\xA0Buscar\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        data: this.props.obj.listOrders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Descargar Todo\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, this.renderPag())))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.props.obj.listOrders,\n        striped: true,\n        hover: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"status\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Estado\"), React.createElement(TableHeaderColumn, {\n        width: '10%',\n        dataField: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Orden\"), React.createElement(TableHeaderColumn, {\n        dataField: \"dni\",\n        width: '10%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"DNI\"), React.createElement(TableHeaderColumn, {\n        width: '20%',\n        dataField: \"customer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Cliente\"), React.createElement(TableHeaderColumn, {\n        width: '20%',\n        dataField: \"skuName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Producto\"), React.createElement(TableHeaderColumn, {\n        dataField: \"city\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Ciudad\"), React.createElement(TableHeaderColumn, {\n        dataField: \"guide\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Guia\"), React.createElement(TableHeaderColumn, {\n        dataField: \"invoice\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Factura\"), React.createElement(TableHeaderColumn, {\n        dataField: \"unit\",\n        width: '20%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Procesado\"), React.createElement(TableHeaderColumn, {\n        dataField: \"store\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Tienda\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.editFormatter.bind(this),\n        width: '10%',\n        dataAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"Accion\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"_id\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Identifier ID\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        data: this.props.obj.listOrders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Descargar Todo\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, this.renderPag()))))));\n    }\n  }]);\n\n  return OrdersList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return {\n    obj: state.DaoOrders\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: function loadReducer(type, colletion, body) {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    },\n    deleteReducer: function deleteReducer(type, colletion, component, documentId) {//DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n    editFileReducer: function editFileReducer(type, colletion, component, documentId, fileEdit, newFileEdit) {//DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/bobSeller/src/views/Owner/Orders/OrdersList.js"],"names":["React","Component","connect","CSVLink","CSVDownload","Row","InputGroup","InputGroupAddon","InputGroupText","Form","FormGroup","Label","Input","Col","Card","CardHeader","CardBody","Modal","ModalHeader","ModalBody","ModalFooter","Button","ButtonGroup","AppSwitch","BootstrapTable","TableHeaderColumn","DbCrud","Pagination","flat","OrdersList","props","onFormSubmit","e","preventDefault","target","state","orders","pag","limit","filFile","filValue","sorts","file","value","groups","brands","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","alwaysShowAllBtns","withFirstAndLast","pagLoad","bind","loadReducer","row","history","push","pathname","setState","danger","tmpRow","documentId","pagNum","obj","pagination","NumPages","undefined","cell","callEdit","toggleDanger","listGroups","map","key","_id","code","name","listStores","listOrders","renderPag","editFormatter","mapStateToProps","DaoOrders","mapDispatchToProps","dispatch","type","colletion","body","dbMLoad","deleteReducer","component","editFileReducer","fileEdit","newFileEdit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { Row,InputGroup, InputGroupAddon, InputGroupText, Form, FormGroup, Label, Input, Col, Card, CardHeader, CardBody, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport DbCrud from '../../../Pojo/DbCrud';\nimport Pagination from '../Pagination/Pagination';\n\n\nvar flat = true;\n\n/**\n * Compoenente que permite listar todos los paises que existen en la base de datos\n*/\nclass OrdersList extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      orders: {\n        pag:\"3\",\n        limit:\"10\",\n        filFile:\"\",\n        filValue: \"\",\n        sorts:[\n          {\n            file:\"oderDate\",\n            value:1\n          }\n        ]\n      },\n      groups : {\n        filFile:\"group\",\n        filValue:\"StatusOrder\",\n        sorts:[{file:\"name\",value:1}]\n      },\n      brands : {\n        filFile:\"\",\n        filValue:\"\",\n        sorts:[{file:\"name\",value:1}]\n      }\n\n    }\n\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 5,\n      hidePageListOnlyOnePage: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false\n    }\n    this.pagLoad = this.pagLoad.bind(this);\n    //this.toggleDanger = this.toggleDanger.bind(this);\n  }\n\n  /**Metodo que se ejecuta automaticamente cada vez que el componente es llamado */\n  componentDidMount() {\n    if (flat) {\n      flat = false;\n      this.props.loadReducer('loadOrders', \"orders/find\",this.state.orders);\n      this.props.loadReducer('loadGroups', \"groups/find\",this.state.groups);\n      this.props.loadReducer('loadBrands', \"brands/find\",this.state.brands);\n      this.props.loadReducer('loadStores', \"stores/find\",{});\n    }\n  }\n\n  //Cambia la paginacion\n  pageChanged(e){\n    //console.log(e.target.text)\n  }\n\n  //Funcion que permite hacer la llamada al formulario para editar un nuevo registro \n  callEdit(row) {\n    this.props.history.push({\n      pathname: '/Geo/CountriesAdd',\n      row: row\n    })\n  }\n\n  //Cambia el valor a visible del mensaje de alerta \n  //guarda el identificador de la fila que sera afectada \n  toggleDanger(row) {\n    this.setState({\n      danger: !this.state.danger,\n      tmpRow: row.documentId\n    });\n  }\n\n  // Esta funcion escucha los eventos del componente Pagination\n  pagLoad(pagNum,limit) {\n      //Si el valor de registros visualizados por pagina cambia y se recupera la pagina en la que nos encontramos\n      if(pagNum == \"cRegister\"){\n        pagNum = this.state.orders.pag;\n        var limit = limit;\n      }else{\n        var limit = this.props.obj.pagination.limit; \n      }\n      \n      //Se realiza la solicitud nuevamente para recargar los registros \n      this.props.loadReducer('loadOrders', \"orders/find\", {\n        pag:pagNum,\n        limit:limit,\n        filFile:this.state.orders.filFile,\n        filValue:this.state.orders.filValue,\n        sorts:this.state.orders.sorts\n      });\n\n      this.setState({\n        orders:{\n          pag:pagNum,\n          limit:limit,\n          filFile:this.state.orders.filFile,\n          filValue:this.state.orders.filValue,\n          sorts:this.state.orders.sorts\n        }\n      }\n      )\n      \n  }\n\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    const target = e.target;\n    //console.log(e.target.status.value)\n    //this.state.orders.filValue = \"JULIAN\";\n   // console.log(e.target.)\n    //this.props.loadReducer('loadOrders', \"orders/find\",this.state.orders);\n  }\n\n\nrenderPag(){\n  if(this.props.obj.pagination.NumPages != undefined)\n  return <Pagination info={this.props.obj.pagination} pagLoad={this.pagLoad}/>\n  return (<div>Pag...</div>);\n}\n\n  //Funcion que construye los botones de ediccion para cada registro listado en la tabla \n  editFormatter(cell, row) {\n    return (\n      <ButtonGroup>\n        <Button onClick={this.callEdit.bind(this, row)} size=\"sm\" className=\"btn-spotify btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-pencil\"></i>\n        </Button>\n        <Button onClick={this.toggleDanger.bind(this, row)} size=\"sm\" className=\"btn-reddit btn-brand icon mr-1 mb-1 btn btn-secondary btn-sm\">\n          <i className=\"icon-trash\"></i>\n        </Button>\n      </ButtonGroup>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardHeader>\n            Lista Ordenes\n            <div className=\"card-header-actions\">\n              <a href=\"https://github.com/AllenFang/react-bootstrap-table\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"card-header-action\">\n                <small className=\"text-muted\">Aprende</small>\n              </a>\n            </div>\n          </CardHeader>\n          \n          <CardBody>\n\n            <Form action=\"\" onSubmit={this.onFormSubmit} method=\"post\" className=\"form-horizontal\">\n              <FormGroup row>\n              <Col xs=\"12\" md=\"12\">\n                <Row>\n                  <Col xs=\"2\" md=\"2\">\n                    <Input type=\"select\" name=\"status\" id=\"status\" key=\"status\">\n                    {\n                      this.props.obj.listGroups.map((e, key) => {\n                        return <option key={e._id} value={e.code}>{e.name}</option>;\n                      })\n                    }\n                    \n                    </Input>\n                  </Col>\n                  <Col xs=\"1\" md=\"1\">\n                    <Input type=\"select\" name=\"store\" id=\"store\" key=\"store\">\n                    { \n                      this.props.obj.listStores.map((e, key) => {\n                        return <option key={e._id} value={e.code}>{e.name}</option>;\n                      })\n                    }\n                    </Input>\n                  </Col>\n                  <Col xs=\"1\" md=\"1\">\n                    <Input type=\"select\" name=\"store\" id=\"store\" key=\"store\">\n                    { \n                      this.props.obj.listStores.map((e, key) => {\n                        return <option key={e._id} value={e.code}>{e.name}</option>;\n                      })\n                    }\n                    </Input>\n                  </Col>\n                  <Col xs=\"2\" md=\"2\">\n                    <Input type=\"select\" name=\"store\" id=\"store\" key=\"store\">\n                    { \n                      this.props.obj.listStores.map((e, key) => {\n                        return <option key={e._id} value={e.code}>{e.name}</option>;\n                      })\n                    }\n                    </Input>\n                  </Col>\n                  <Col xs=\"2\" md=\"2\">\n                      <InputGroup>\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa icon-layers\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" id=\"input1-group1\" name=\"input1-group1\" placeholder=\"# Orden\" />\n                      </InputGroup>\n                    </Col>\n                    <Col xs=\"2\" md=\"2\">\n                      <InputGroup>\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa fa-address-book-o\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" id=\"input1-group1\" name=\"input1-group1\" placeholder=\"# Documento\" />\n                      </InputGroup>\n                    </Col>\n                    <Col xs=\"2\" md=\"2\">\n                      <InputGroup>\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fa fa-address-book-o\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" id=\"input1-group1\" name=\"input1-group1\" placeholder=\"Nombre Cliente\" />\n                      </InputGroup>\n                    </Col>\n                </Row>\n              </Col>\n              </FormGroup>\n              <Button type=\"submit\" className=\"float-right btn btn-success btn-sm\"><i className=\"fa fa-search\"></i>&nbsp;Buscar</Button>\n            </Form>\n            \n          </CardBody>\n          \n          <CardBody>\n            <Row>\n              <Col>\n                <CSVLink data={this.props.obj.listOrders}>Descargar Todo</CSVLink>\n              </Col>\n              <Col>\n                <div className=\"pull-right\">{this.renderPag()}</div>\n              </Col>\n            </Row>\n          </CardBody>\n\n          <CardBody>\n              <BootstrapTable  data={this.props.obj.listOrders} striped hover options={this.options}>\n              <TableHeaderColumn dataField='status' dataSort>Estado</TableHeaderColumn>\n              <TableHeaderColumn width={'10%'} dataField='order' >Orden</TableHeaderColumn>\n              <TableHeaderColumn dataField='dni'width={'10%'} >DNI</TableHeaderColumn>\n              <TableHeaderColumn width={'20%'} dataField='customer' >Cliente</TableHeaderColumn>\n              <TableHeaderColumn width={'20%'} dataField='skuName' >Producto</TableHeaderColumn>\n              <TableHeaderColumn dataField='city'width={'20%'} >Ciudad</TableHeaderColumn>\n              <TableHeaderColumn dataField='guide' width={'20%'}>Guia</TableHeaderColumn>\n              <TableHeaderColumn dataField='invoice' width={'20%'}>Factura</TableHeaderColumn>\n              <TableHeaderColumn dataField='unit' width={'20%'}>Procesado</TableHeaderColumn>\n              <TableHeaderColumn dataField='store'>Tienda</TableHeaderColumn>\n              <TableHeaderColumn dataFormat={this.editFormatter.bind(this)} width={'10%'} dataAlign='right' >Accion</TableHeaderColumn>\n              <TableHeaderColumn isKey={true} dataField='_id' hidden>Identifier ID</TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n\n          <CardBody>\n            <Row>\n              <Col>\n                <CSVLink data={this.props.obj.listOrders}>Descargar Todo</CSVLink>\n              </Col>\n              <Col>\n                <div className=\"pull-right\">{this.renderPag()}</div>\n              </Col>\n            </Row>\n          </CardBody>\n          \n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  //Registra el objeto la funcion que cargara el objeto en el estado\n  return{\n    obj:state.DaoOrders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //type: se utiliza para identificar la accion en el store \n    //colletion: la collection de la base de datos\n    //component: componente a resetear para que el cambio se vea automaticamente \n    //documentId: Identificador del registro a modificar \n    loadReducer: (type, colletion, body) => {\n      DbCrud.dbMLoad(dispatch, type, colletion, body);\n    },\n\n    deleteReducer: (type, colletion, component, documentId) => { \n      //DbCrud.dbDelete(dispatch, type, colletion, component, documentId); \n    },\n\n    editFileReducer: (type, colletion, component, documentId, fileEdit, newFileEdit) => { \n      //DbCrud.dbEditFile(dispatch, type, colletion, component, documentId, fileEdit, newFileEdit); \n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersList);\n"]},"metadata":{},"sourceType":"module"}